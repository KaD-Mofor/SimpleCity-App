{"version":3,"file":"request.js","names":["parseInsufficientAuthenticationError","header","AuthSdkError","split","map","part","trim","reduce","acc","curr","replace","sendRequest","oktaAuth","options","accessToken","accessTokenObj","idToken","idTokenObj","tokenManager","getTokensSync","issuer","url","method","payload","requestUrl","startsWith","res","httpRequest","headers","args","err","errorResp","xhr","status","error","error_description","max_age","insufficientAuthenticationError","AuthApiError","errorSummary","errorCauses","EmailTransaction","EmailStatusTransaction","EmailChallengeTransaction","ProfileTransaction","ProfileSchemaTransaction","PhoneTransaction","TransactionClass","transactionClassName","BaseTransaction","Array","isArray","item","generateRequestFnFromLinks","methodName","links","toLowerCase","link","self","href","hints","allow"],"sources":["../../../lib/myaccount/request.ts"],"sourcesContent":["import { \n  BaseTransaction,\n  EmailTransaction,\n  EmailStatusTransaction,\n  EmailChallengeTransaction,\n  ProfileTransaction,\n  ProfileSchemaTransaction,\n  PhoneTransaction\n} from './transactions';\nimport { httpRequest } from '../http';\nimport { AuthApiError, AuthSdkError } from '../errors';\nimport { MyAccountRequestOptions as RequestOptions } from './types';\nimport { OktaAuthOAuthInterface } from '../oidc/types';\n\nexport type TransactionLink = {\n  href: string;\n  hints?: {\n    allow?: string[];\n  };\n}\n\ntype TransactionLinks = {\n  self: TransactionLink;\n  [property: string]: TransactionLink;\n}\n\ntype SendRequestOptions = RequestOptions & {\n  url: string;\n  method: string;\n  transactionClassName?: string;\n}\n\ntype InsufficientAuthenticationError = {\n  error: string;\n  // eslint-disable-next-line camelcase\n  error_description: string;\n  // eslint-disable-next-line camelcase\n  max_age: string;\n}\n\nconst parseInsufficientAuthenticationError = (\n  header: string\n): InsufficientAuthenticationError => {\n  if (!header) {\n    throw new AuthSdkError('Missing header string');\n  }\n\n  return header\n    .split(',')\n    .map(part => part.trim())\n    .map(part => part.split('='))\n    .reduce((acc, curr) => {\n      // unwrap quotes from value\n      acc[curr[0]] = curr[1].replace(/^\"(.*)\"$/, '$1');\n      return acc;\n    }, {}) as InsufficientAuthenticationError;\n};\n\n/* eslint-disable complexity */\nexport async function sendRequest<T extends BaseTransaction> (\n  oktaAuth: OktaAuthOAuthInterface, \n  options: SendRequestOptions\n): Promise<T | T[]> {\n  const { \n    accessToken: accessTokenObj,\n    idToken: idTokenObj \n  } = oktaAuth.tokenManager.getTokensSync();\n  \n  const idToken = idTokenObj?.idToken;\n  const accessToken = options.accessToken || accessTokenObj?.accessToken;\n  const { issuer } = oktaAuth.options;\n  const { url, method, payload } = options;\n  const requestUrl = url.startsWith(issuer!) ? url : `${issuer}${url}`;\n\n  if (!accessToken) {\n    throw new AuthSdkError('AccessToken is required to request MyAccount API endpoints.');\n  }\n  \n  let res;\n  try {\n    res = await httpRequest(oktaAuth, {\n      headers: { 'Accept': '*/*;okta-version=1.0.0' },\n      accessToken,\n      url: requestUrl,\n      method,\n      ...(payload && { args: payload })\n    });\n  } catch (err) {\n    const errorResp = (err as AuthApiError).xhr;\n    if (idToken && errorResp?.status === 403 && !!errorResp?.headers?.['www-authenticate']) {\n      const { \n        error, \n        // eslint-disable-next-line camelcase\n        error_description,\n        // eslint-disable-next-line camelcase\n        max_age \n      } = parseInsufficientAuthenticationError(errorResp?.headers?.['www-authenticate']);\n      if (error === 'insufficient_authentication_context') {\n        const insufficientAuthenticationError = new AuthApiError(\n          { \n            errorSummary: error,\n            // eslint-disable-next-line camelcase\n            errorCauses: [{ errorSummary: error_description }]\n          }, \n          errorResp, \n          // eslint-disable-next-line camelcase\n          { max_age: +max_age }\n        );\n        throw insufficientAuthenticationError;\n      } else {\n        throw err;\n      }\n    } else {\n      throw err;\n    }\n  }\n\n  const map = {\n    EmailTransaction,\n    EmailStatusTransaction,\n    EmailChallengeTransaction,\n    ProfileTransaction,\n    ProfileSchemaTransaction,\n    PhoneTransaction\n  };\n  const TransactionClass = map[options.transactionClassName!] || BaseTransaction;\n\n  if (Array.isArray(res)) {\n    return res.map(item => new TransactionClass(oktaAuth, { \n      res: item, \n      accessToken\n    }));\n  }\n\n  return new TransactionClass(oktaAuth, { \n    res, \n    accessToken\n  });\n}\n/* eslint-enable complexity */\n\nexport type GenerateRequestFnFromLinksOptions = {\n  oktaAuth: OktaAuthOAuthInterface;\n  accessToken: string;\n  methodName: string;\n  links: TransactionLinks;\n  transactionClassName?: string;\n}\n\ntype IRequestFnFromLinks = <T extends BaseTransaction>(payload?) => Promise<T | T[]>;\n\nexport function generateRequestFnFromLinks ({\n  oktaAuth, \n  accessToken,\n  methodName,\n  links,\n  transactionClassName\n}: GenerateRequestFnFromLinksOptions): IRequestFnFromLinks {\n  for (const method of ['GET', 'POST', 'PUT', 'DELETE']) {\n    if (method.toLowerCase() === methodName) {\n      const link = links.self;\n      return (async (payload?) => sendRequest(oktaAuth, {\n        accessToken,\n        url: link.href,\n        method,\n        payload,\n        transactionClassName\n      }));\n    }\n  }\n  \n  const link = links[methodName];\n  if (!link) {\n    throw new AuthSdkError(`No link is found with methodName: ${methodName}`);\n  }\n\n  return (async (payload?) => sendRequest(oktaAuth, {\n    accessToken,\n    url: link.href,\n    method: link.hints!.allow![0],\n    payload,\n    transactionClassName\n  }));\n}\n"],"mappings":"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"}