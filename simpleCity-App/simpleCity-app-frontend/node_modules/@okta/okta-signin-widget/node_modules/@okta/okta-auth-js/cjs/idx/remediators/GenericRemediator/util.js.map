{"version":3,"file":"util.js","names":["unwrapFormValue","remediation","Array","isArray","map","item","res","key","value","Object","entries","formKeys","keys","includes","length","unwrappedForm","forEach","hasValidInputValue","input","values","fn","requiredTracker","name","type","options","required","isRequired","reduce","acc","selectedOption","id","optionSchema","find","option","idSchema","filter","AuthSdkError","JSON","stringify"],"sources":["../../../../../lib/idx/remediators/GenericRemediator/util.ts"],"sourcesContent":["/* eslint-disable complexity */\nimport { AuthSdkError } from '../../../errors';\nimport { Input } from '../../types';\n\nexport function unwrapFormValue(remediation): Input { \n  if (Array.isArray(remediation)) {\n    return remediation\n      .map(item => {\n        if (typeof item === 'string' || typeof item === 'number' || typeof item === 'boolean') {\n          return item;\n        }\n        return unwrapFormValue(item);\n      }) as any;\n  }\n\n  const res = {};\n  for (const [key, value] of Object.entries(remediation)) {\n    if (value === null || typeof value === 'undefined') {\n      continue;\n    }\n\n    if (typeof value === 'object') {\n      const formKeys = Object.keys(value as object);\n      // detect patterns like:\n      // value -> form -> value | form -> value\n      if (['value', 'form'].includes(key) \n        && formKeys.length === 1 \n        && ['value', 'form'].includes(formKeys[0])\n      ) {\n        // unwrap nested form\n        const unwrappedForm = unwrapFormValue(value);\n        Object.entries(unwrappedForm).forEach(([key, value]) => {\n          res[key] = value;\n        });\n      } else {\n        // dfs\n        res[key] = unwrapFormValue(value);\n      }\n    } else {\n      // handle primitive value\n      res[key] = value;\n    }\n  }\n\n  return res as Input;\n}\n\n// only check if value is required for now\n// TODO: support SDK layer type based input validation\nexport function hasValidInputValue(input, values) {\n  const fn = (input, values, requiredTracker) => {\n    const { name, value, type, options, required } = input;\n    const isRequired = required || requiredTracker;\n\n    // handle nested value - all required fields should be avaiable in values \n    if (Array.isArray(value)) {\n      return value.reduce((acc, item) => {\n        return acc && fn(item, values[name], isRequired); // recursive call\n      }, true);\n    }\n\n    // handle options field\n    // 1. object type options - check if each object field is required and value can be found from the selectedOption\n    // 2. primitive options - required field is avaiable from top level\n    // 3. unknown format - pass to backend for validation\n    if (options) {\n      // object type options\n      if (type === 'object') {\n        const selectedOption = values[name];\n        if (!selectedOption) {\n          return false;\n        }\n        if (!selectedOption.id) {\n          // unknown option format, pass to backend for validation\n          return true;\n        }\n        const optionSchema = options.find((option) => {\n          const idSchema = option.value.find(({ name }) => name === 'id' );\n          return idSchema.value === selectedOption.id;\n        });\n        if (!optionSchema) {\n          return false;\n        }\n        return optionSchema.value\n          .filter(({ required }) => !!required)\n          .reduce((acc, { name }) => {\n            return acc && !!selectedOption[name];\n          }, true);\n      }\n\n      // primitive options, not required - always valid\n      if (required === false) {\n        return true;\n      }\n\n      // primitive options, required - check if value is available\n      if (required === true) {\n        return !!values[name];\n      }\n\n      // unknown options, throw\n      throw new AuthSdkError(`Unknown options type, ${JSON.stringify(input)}`);\n    }\n\n    // base case\n    if (!isRequired) {\n      return true;\n    }\n      \n    return !!(values && values[name]);\n  };\n\n  return fn(input, values, false);\n}\n"],"mappings":"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"}