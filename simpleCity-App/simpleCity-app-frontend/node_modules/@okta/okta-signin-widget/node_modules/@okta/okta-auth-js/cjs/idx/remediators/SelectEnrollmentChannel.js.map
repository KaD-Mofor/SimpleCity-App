{"version":3,"file":"SelectEnrollmentChannel.js","names":["SelectEnrollmentChannel","Remediator","canRemediate","values","channel","authenticator","id","getNextStep","authClient","context","common","currentAuthenticator","value","getData","remediationValue","remediation","form","stateHandle","getValuesAfterProceed","authenticators","filterKey","trimmedValues","Object","keys","filter","valueKey","reduce"],"sources":["../../../../lib/idx/remediators/SelectEnrollmentChannel.ts"],"sourcesContent":["/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { IdxRemediationValueForm, IdxContext } from '../types/idx-js';\nimport { Authenticator, OktaAuthIdxInterface } from '../types/api';\n\n\nexport type SelectEnrollmentChannelValues = RemediationValues & {\n  channel?: string;\n};\n\nexport class SelectEnrollmentChannel extends Remediator<SelectEnrollmentChannelValues> {\n  static remediationName = 'select-enrollment-channel';\n\n  canRemediate() {\n    if (this.values.channel) {\n      return true;\n    }\n\n    if (this.values.authenticator) {\n      const { id, channel } = this.values.authenticator as Authenticator;\n      if (!!id && !!channel) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context: IdxContext) {\n    const common = super.getNextStep(authClient, context);\n    const authenticator = context.currentAuthenticator.value;\n    return {\n      ...common,\n      authenticator,\n    };\n  }\n\n  getData() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediationValue = this.remediation!.value![0].value as IdxRemediationValueForm;\n    return {\n      authenticator: {\n        id: remediationValue.form.value[0].value,\n        channel: (this.values.authenticator as Authenticator)?.channel || this.values.channel,\n      },\n      stateHandle: this.values.stateHandle,\n\n    };\n  }\n\n  getValuesAfterProceed(): SelectEnrollmentChannelValues {\n    this.values = super.getValuesAfterProceed();\n    delete this.values.authenticators;    // required to prevent infinite loops from auto-remediating via values\n    const filterKey = this.values.channel ? 'channel' : 'authenticator';\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== filterKey);\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n"],"mappings":";;;;;;;;AAaA;;AAbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYO,MAAMA,uBAAN,SAAsCC,sBAAtC,CAAgF;EAGrFC,YAAY,GAAG;IACb,IAAI,KAAKC,MAAL,CAAYC,OAAhB,EAAyB;MACvB,OAAO,IAAP;IACD;;IAED,IAAI,KAAKD,MAAL,CAAYE,aAAhB,EAA+B;MAC7B,MAAM;QAAEC,EAAF;QAAMF;MAAN,IAAkB,KAAKD,MAAL,CAAYE,aAApC;;MACA,IAAI,CAAC,CAACC,EAAF,IAAQ,CAAC,CAACF,OAAd,EAAuB;QACrB,OAAO,IAAP;MACD;IACF;;IAED,OAAO,KAAP;EACD;;EAEDG,WAAW,CAACC,UAAD,EAAmCC,OAAnC,EAAwD;IACjE,MAAMC,MAAM,GAAG,MAAMH,WAAN,CAAkBC,UAAlB,EAA8BC,OAA9B,CAAf;IACA,MAAMJ,aAAa,GAAGI,OAAO,CAACE,oBAAR,CAA6BC,KAAnD;IACA,OAAO,EACL,GAAGF,MADE;MAELL;IAFK,CAAP;EAID;;EAEDQ,OAAO,GAAG;IAAA;;IACR;IACA,MAAMC,gBAAgB,GAAG,KAAKC,WAAL,CAAkBH,KAAlB,CAAyB,CAAzB,EAA4BA,KAArD;IACA,OAAO;MACLP,aAAa,EAAE;QACbC,EAAE,EAAEQ,gBAAgB,CAACE,IAAjB,CAAsBJ,KAAtB,CAA4B,CAA5B,EAA+BA,KADtB;QAEbR,OAAO,EAAE,0BAAC,KAAKD,MAAL,CAAYE,aAAb,gFAA8CD,OAA9C,KAAyD,KAAKD,MAAL,CAAYC;MAFjE,CADV;MAKLa,WAAW,EAAE,KAAKd,MAAL,CAAYc;IALpB,CAAP;EAQD;;EAEDC,qBAAqB,GAAkC;IACrD,KAAKf,MAAL,GAAc,MAAMe,qBAAN,EAAd;IACA,OAAO,KAAKf,MAAL,CAAYgB,cAAnB,CAFqD,CAEf;;IACtC,MAAMC,SAAS,GAAG,KAAKjB,MAAL,CAAYC,OAAZ,GAAsB,SAAtB,GAAkC,eAApD;IACA,IAAIiB,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKpB,MAAjB,EAAyBqB,MAAzB,CAAgCC,QAAQ,IAAIA,QAAQ,KAAKL,SAAzD,CAApB;IACA,OAAOC,aAAa,CAACK,MAAd,CAAqB,CAACvB,MAAD,EAASsB,QAAT,MAAuB,EAAC,GAAGtB,MAAJ;MAAY,CAACsB,QAAD,GAAY,KAAKtB,MAAL,CAAYsB,QAAZ;IAAxB,CAAvB,CAArB,EAA6F,EAA7F,CAAP;EACD;;AA9CoF;;;8BAA1EzB,uB,qBACc,2B"}