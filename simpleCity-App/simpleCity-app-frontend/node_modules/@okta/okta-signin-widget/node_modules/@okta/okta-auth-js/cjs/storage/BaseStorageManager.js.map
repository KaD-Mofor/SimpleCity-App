{"version":3,"file":"BaseStorageManager.js","names":["logServerSideMemoryStorageWarning","options","isBrowser","storageProvider","warn","BaseStorageManager","constructor","storageManagerOptions","cookieOptions","storageUtil","getOptionsForSection","sectionName","overrideOptions","Object","assign","getStorage","storageType","storageTypes","sessionCookie","idx","indexOf","slice","undefined","findStorageType","getStorageByType","getTokenStorage","storage","storageKey","TOKEN_STORAGE_NAME","SavedObject","getHttpCache","CACHE_STORAGE_NAME"],"sources":["../../../lib/storage/BaseStorageManager.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n\nimport {\n  TOKEN_STORAGE_NAME,\n  CACHE_STORAGE_NAME,\n} from '../constants';\nimport {\n  StorageUtil,\n  StorageProvider,\n  StorageOptions,\n  CookieOptions,\n  StorageManagerOptions,\n  SimpleStorage,\n  StorageManagerInterface\n} from './types';\nimport { SavedObject } from './SavedObject';\nimport { isBrowser } from '../features';\nimport { warn } from '../util';\n\nexport function logServerSideMemoryStorageWarning(options: StorageOptions) {\n  if (!isBrowser() && !options.storageProvider && !options.storageProvider) {\n    // eslint-disable-next-line max-len\n    warn('Memory storage can only support simple single user use case on server side, please provide custom storageProvider or storageKey if advanced scenarios need to be supported.');\n  }\n}\n\n\nexport class BaseStorageManager implements StorageManagerInterface {\n  storageManagerOptions: StorageManagerOptions;\n  cookieOptions: CookieOptions;\n  storageUtil: StorageUtil;\n\n  constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n    this.storageManagerOptions = storageManagerOptions;\n    this.cookieOptions = cookieOptions;\n    this.storageUtil = storageUtil;\n  }\n\n  // combines defaults in order\n  getOptionsForSection(sectionName: string, overrideOptions?: StorageOptions) {\n    return Object.assign({}, this.storageManagerOptions[sectionName], overrideOptions);\n  }\n \n  // generic method to get any available storage provider\n  // eslint-disable-next-line complexity\n  getStorage(options: StorageOptions): SimpleStorage {\n    options = Object.assign({}, this.cookieOptions, options); // set defaults\n\n    if (options.storageProvider) {\n      return options.storageProvider;\n    }\n\n    let { storageType, storageTypes } = options;\n\n    if(storageType === 'sessionStorage') {\n      options.sessionCookie = true;\n    }\n\n    // If both storageType and storageTypes are specified, then storageType will be used first\n    // If storageType cannot be used but it matches an entry in storageTypes, subsequent entries may be used as fallback\n    // if storageType does not match an entry in storageTypes then storageType is used with no fallback.\n    if (storageType && storageTypes) {\n      const idx = storageTypes.indexOf(storageType);\n      if (idx >= 0) {\n        storageTypes = storageTypes.slice(idx);\n        storageType = undefined;\n      }\n    }\n\n    if (!storageType) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      storageType = this.storageUtil.findStorageType(storageTypes!);\n    }\n    return this.storageUtil.getStorageByType(storageType, options);\n  }\n\n  // access_token, id_token, refresh_token\n  getTokenStorage(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('token', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || TOKEN_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // caches well-known response, among others\n  getHttpCache(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('cache', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || CACHE_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n}\n"],"mappings":";;;;;AAcA;;AAaA;;AACA;;AACA;;AA7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAqBO,SAASA,iCAAT,CAA2CC,OAA3C,EAAoE;EACzE,IAAI,CAAC,IAAAC,mBAAA,GAAD,IAAgB,CAACD,OAAO,CAACE,eAAzB,IAA4C,CAACF,OAAO,CAACE,eAAzD,EAA0E;IACxE;IACA,IAAAC,UAAA,EAAK,6KAAL;EACD;AACF;;AAGM,MAAMC,kBAAN,CAA4D;EAKjEC,WAAW,CAACC,qBAAD,EAA+CC,aAA/C,EAA6EC,WAA7E,EAAuG;IAChH,KAAKF,qBAAL,GAA6BA,qBAA7B;IACA,KAAKC,aAAL,GAAqBA,aAArB;IACA,KAAKC,WAAL,GAAmBA,WAAnB;EACD,CATgE,CAWjE;;;EACAC,oBAAoB,CAACC,WAAD,EAAsBC,eAAtB,EAAwD;IAC1E,OAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKP,qBAAL,CAA2BI,WAA3B,CAAlB,EAA2DC,eAA3D,CAAP;EACD,CAdgE,CAgBjE;EACA;;;EACAG,UAAU,CAACd,OAAD,EAAyC;IACjDA,OAAO,GAAGY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKN,aAAvB,EAAsCP,OAAtC,CAAV,CADiD,CACS;;IAE1D,IAAIA,OAAO,CAACE,eAAZ,EAA6B;MAC3B,OAAOF,OAAO,CAACE,eAAf;IACD;;IAED,IAAI;MAAEa,WAAF;MAAeC;IAAf,IAAgChB,OAApC;;IAEA,IAAGe,WAAW,KAAK,gBAAnB,EAAqC;MACnCf,OAAO,CAACiB,aAAR,GAAwB,IAAxB;IACD,CAXgD,CAajD;IACA;IACA;;;IACA,IAAIF,WAAW,IAAIC,YAAnB,EAAiC;MAC/B,MAAME,GAAG,GAAGF,YAAY,CAACG,OAAb,CAAqBJ,WAArB,CAAZ;;MACA,IAAIG,GAAG,IAAI,CAAX,EAAc;QACZF,YAAY,GAAGA,YAAY,CAACI,KAAb,CAAmBF,GAAnB,CAAf;QACAH,WAAW,GAAGM,SAAd;MACD;IACF;;IAED,IAAI,CAACN,WAAL,EAAkB;MAChB;MACAA,WAAW,GAAG,KAAKP,WAAL,CAAiBc,eAAjB,CAAiCN,YAAjC,CAAd;IACD;;IACD,OAAO,KAAKR,WAAL,CAAiBe,gBAAjB,CAAkCR,WAAlC,EAA+Cf,OAA/C,CAAP;EACD,CA/CgE,CAiDjE;;;EACAwB,eAAe,CAACxB,OAAD,EAA4C;IACzDA,OAAO,GAAG,KAAKS,oBAAL,CAA0B,OAA1B,EAAmCT,OAAnC,CAAV;IACAD,iCAAiC,CAACC,OAAD,CAAjC;IACA,MAAMyB,OAAO,GAAG,KAAKX,UAAL,CAAgBd,OAAhB,CAAhB;IACA,MAAM0B,UAAU,GAAG1B,OAAO,CAAC0B,UAAR,IAAsBC,6BAAzC;IACA,OAAO,IAAIC,wBAAJ,CAAgBH,OAAhB,EAAyBC,UAAzB,CAAP;EACD,CAxDgE,CA0DjE;;;EACAG,YAAY,CAAC7B,OAAD,EAA4C;IACtDA,OAAO,GAAG,KAAKS,oBAAL,CAA0B,OAA1B,EAAmCT,OAAnC,CAAV;IACA,MAAMyB,OAAO,GAAG,KAAKX,UAAL,CAAgBd,OAAhB,CAAhB;IACA,MAAM0B,UAAU,GAAG1B,OAAO,CAAC0B,UAAR,IAAsBI,6BAAzC;IACA,OAAO,IAAIF,wBAAJ,CAAgBH,OAAhB,EAAyBC,UAAzB,CAAP;EACD;;AAhEgE"}