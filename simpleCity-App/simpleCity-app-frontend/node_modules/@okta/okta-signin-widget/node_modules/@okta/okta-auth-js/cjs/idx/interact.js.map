{"version":3,"file":"interact.js","names":["getResponse","meta","interactionHandle","state","interact","authClient","options","removeNils","getSavedTransactionMeta","createTransactionMeta","baseUrl","getOAuthBaseUrl","clientId","redirectUri","scopes","withCredentials","codeChallenge","codeChallengeMethod","activationToken","recoveryToken","maxAge","nonce","clientSecret","url","params","client_id","scope","join","redirect_uri","code_challenge","code_challenge_method","activation_token","recovery_token","client_secret","max_age","headers","resp","httpRequest","method","args","interaction_handle","newMeta","saveTransactionMeta"],"sources":["../../../lib/idx/interact.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* eslint complexity:[0,8] */\nimport { OktaAuthIdxInterface, IdxTransactionMeta, InteractOptions, InteractResponse } from './types';\nimport { getSavedTransactionMeta, saveTransactionMeta, createTransactionMeta } from './transactionMeta';\nimport { getOAuthBaseUrl } from '../oidc';\nimport { removeNils } from '../util';\nimport { httpRequest } from '../http';\n\n\n/* eslint-disable camelcase */\nexport interface InteractParams {\n  client_id: string;\n  scope: string;\n  redirect_uri: string;\n  code_challenge: string;\n  code_challenge_method: string;\n  state: string;\n  activation_token?: string;\n  recovery_token?: string;\n  client_secret?: string;\n  max_age?: string | number;\n  nonce?: string;\n}\n/* eslint-enable camelcase */\n\nfunction getResponse(meta: IdxTransactionMeta): InteractResponse {\n  return {\n    meta,\n    interactionHandle: meta.interactionHandle!,\n    state: meta.state\n  };\n}\n\n// Begin or resume a transaction. Returns an interaction handle\nexport async function interact (\n  authClient: OktaAuthIdxInterface, \n  options: InteractOptions = {}\n): Promise<InteractResponse> {\n  options = removeNils(options);\n\n  let meta = getSavedTransactionMeta(authClient, options);\n  // If meta exists, it has been validated against all options\n\n  if (meta?.interactionHandle) {\n    return getResponse(meta); // Saved transaction, return meta\n  }\n\n  // Create new meta, respecting previous meta if it has been set and is not overridden\n  meta = await createTransactionMeta(authClient, { ...meta, ...options });\n  const baseUrl = getOAuthBaseUrl(authClient);\n  let {\n    clientId,\n    redirectUri,\n    state,\n    scopes,\n    withCredentials,\n    codeChallenge,\n    codeChallengeMethod,\n    activationToken,\n    recoveryToken,\n    maxAge,\n    nonce\n  } = meta as IdxTransactionMeta;\n  const clientSecret = options.clientSecret || authClient.options.clientSecret;\n  withCredentials = withCredentials ?? true;\n\n  /* eslint-disable camelcase */\n  const url = `${baseUrl}/v1/interact`;\n  const params = {\n    client_id: clientId,\n    scope: scopes!.join(' '),\n    redirect_uri: redirectUri,\n    code_challenge: codeChallenge,\n    code_challenge_method: codeChallengeMethod,\n    state,\n    ...(activationToken && { activation_token: activationToken }),\n    ...(recoveryToken && { recovery_token: recoveryToken }),\n    // X-Device-Token header need to pair with `client_secret`\n    // eslint-disable-next-line max-len\n    // https://oktawiki.atlassian.net/wiki/spaces/eng/pages/2445902453/Support+Device+Binding+in+interact#Scenario-1%3A-Non-User-Agent-with-Confidential-Client-(top-priority)\n    ...(clientSecret && { client_secret: clientSecret }),\n    ...(maxAge && { max_age: maxAge }),\n    ...(nonce && { nonce }),\n  } as InteractParams;\n  /* eslint-enable camelcase */\n\n  const headers = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n  };\n\n  const resp = await httpRequest(authClient, {\n    method: 'POST',\n    url,\n    headers,\n    withCredentials,\n    args: params\n  });\n  const interactionHandle = resp.interaction_handle;\n\n  const newMeta = {\n    ...meta,\n    interactionHandle,\n    \n    // Options which can be passed into interact() should be saved in the meta\n    withCredentials,\n    state,\n    scopes,\n    recoveryToken,\n    activationToken\n  };\n  // Save transaction meta so it can be resumed\n  saveTransactionMeta(authClient, newMeta);\n\n  return getResponse(newMeta);\n}\n"],"mappings":";;;;AAcA;;AACA;;AACA;;AACA;;AAjBA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AAsBA;AAEA,SAASA,WAAT,CAAqBC,IAArB,EAAiE;EAC/D,OAAO;IACLA,IADK;IAELC,iBAAiB,EAAED,IAAI,CAACC,iBAFnB;IAGLC,KAAK,EAAEF,IAAI,CAACE;EAHP,CAAP;AAKD,C,CAED;;;AACO,eAAeC,QAAf,CACLC,UADK,EAELC,OAAwB,GAAG,EAFtB,EAGsB;EAAA;;EAC3BA,OAAO,GAAG,IAAAC,gBAAA,EAAWD,OAAX,CAAV;EAEA,IAAIL,IAAI,GAAG,IAAAO,wCAAA,EAAwBH,UAAxB,EAAoCC,OAApC,CAAX,CAH2B,CAI3B;;EAEA,aAAIL,IAAJ,kCAAI,MAAMC,iBAAV,EAA6B;IAC3B,OAAOF,WAAW,CAACC,IAAD,CAAlB,CAD2B,CACD;EAC3B,CAR0B,CAU3B;;;EACAA,IAAI,GAAG,MAAM,IAAAQ,sCAAA,EAAsBJ,UAAtB,EAAkC,EAAE,GAAGJ,IAAL;IAAW,GAAGK;EAAd,CAAlC,CAAb;EACA,MAAMI,OAAO,GAAG,IAAAC,qBAAA,EAAgBN,UAAhB,CAAhB;EACA,IAAI;IACFO,QADE;IAEFC,WAFE;IAGFV,KAHE;IAIFW,MAJE;IAKFC,eALE;IAMFC,aANE;IAOFC,mBAPE;IAQFC,eARE;IASFC,aATE;IAUFC,MAVE;IAWFC;EAXE,IAYApB,IAZJ;EAaA,MAAMqB,YAAY,GAAGhB,OAAO,CAACgB,YAAR,IAAwBjB,UAAU,CAACC,OAAX,CAAmBgB,YAAhE;EACAP,eAAe,GAAGA,eAAe,IAAI,IAArC;EAEA;;EACA,MAAMQ,GAAG,GAAI,GAAEb,OAAQ,cAAvB;EACA,MAAMc,MAAM,GAAG;IACbC,SAAS,EAAEb,QADE;IAEbc,KAAK,EAAEZ,MAAM,CAAEa,IAAR,CAAa,GAAb,CAFM;IAGbC,YAAY,EAAEf,WAHD;IAIbgB,cAAc,EAAEb,aAJH;IAKbc,qBAAqB,EAAEb,mBALV;IAMbd,KANa;IAOb,IAAIe,eAAe,IAAI;MAAEa,gBAAgB,EAAEb;IAApB,CAAvB,CAPa;IAQb,IAAIC,aAAa,IAAI;MAAEa,cAAc,EAAEb;IAAlB,CAArB,CARa;IASb;IACA;IACA;IACA,IAAIG,YAAY,IAAI;MAAEW,aAAa,EAAEX;IAAjB,CAApB,CAZa;IAab,IAAIF,MAAM,IAAI;MAAEc,OAAO,EAAEd;IAAX,CAAd,CAba;IAcb,IAAIC,KAAK,IAAI;MAAEA;IAAF,CAAb;EAda,CAAf;EAgBA;;EAEA,MAAMc,OAAO,GAAG;IACd,gBAAgB;EADF,CAAhB;EAIA,MAAMC,IAAI,GAAG,MAAM,IAAAC,iBAAA,EAAYhC,UAAZ,EAAwB;IACzCiC,MAAM,EAAE,MADiC;IAEzCf,GAFyC;IAGzCY,OAHyC;IAIzCpB,eAJyC;IAKzCwB,IAAI,EAAEf;EALmC,CAAxB,CAAnB;EAOA,MAAMtB,iBAAiB,GAAGkC,IAAI,CAACI,kBAA/B;EAEA,MAAMC,OAAO,GAAG,EACd,GAAGxC,IADW;IAEdC,iBAFc;IAId;IACAa,eALc;IAMdZ,KANc;IAOdW,MAPc;IAQdK,aARc;IASdD;EATc,CAAhB,CA9D2B,CAyE3B;;EACA,IAAAwB,oCAAA,EAAoBrC,UAApB,EAAgCoC,OAAhC;EAEA,OAAOzC,WAAW,CAACyC,OAAD,CAAlB;AACD"}