{"version":3,"file":"url.js","names":["isAbsoluteUrl","url","test","toAbsoluteUrl","baseUrl","removeTrailingSlash","toRelativeUrl","substring","length","toQueryString","obj","str","key","Object","prototype","hasOwnProperty","call","undefined","push","encodeURIComponent","join","path","trimmed","replace"],"sources":["../../../lib/util/url.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isAbsoluteUrl(url) {\n  return /^[a-z][a-z0-9+.-]*:/i.test(url);\n}\n\nexport function toAbsoluteUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    return url;\n  }\n  baseUrl = removeTrailingSlash(baseUrl);\n  return url[0] === '/' ? `${baseUrl}${url}` : `${baseUrl}/${url}`;\n}\n\nexport function toRelativeUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    url = url.substring(baseUrl.length);\n  }\n\n  return url[0] === '/' ? url : `/${url}`;\n}\n\nexport function toQueryString(obj) {\n  var str = [];\n  if (obj !== null) {\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key) &&\n          obj[key] !== undefined &&\n          obj[key] !== null) {\n        str.push(key + '=' + encodeURIComponent(obj[key]) as never);\n      }\n    }\n  }\n  if (str.length) {\n    return '?' + str.join('&');\n  } else {\n    return '';\n  }\n}\n\nexport function removeTrailingSlash(path) {\n  if (!path) {\n    return;\n  }\n  // Remove any whitespace before or after string\n  var trimmed = path.replace(/^\\s+|\\s+$/gm,'');\n  // Remove trailing slash(es)\n  trimmed = trimmed.replace(/\\/+$/, '');\n\n  return trimmed;\n}\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEO,SAASA,aAAT,CAAuBC,GAAvB,EAA4B;EACjC,OAAO,uBAAuBC,IAAvB,CAA4BD,GAA5B,CAAP;AACD;;AAEM,SAASE,aAAT,CAAuBF,GAAG,GAAG,EAA7B,EAAiCG,OAAjC,EAA0C;EAC/C,IAAIJ,aAAa,CAACC,GAAD,CAAjB,EAAwB;IACtB,OAAOA,GAAP;EACD;;EACDG,OAAO,GAAGC,mBAAmB,CAACD,OAAD,CAA7B;EACA,OAAOH,GAAG,CAAC,CAAD,CAAH,KAAW,GAAX,GAAkB,GAAEG,OAAQ,GAAEH,GAAI,EAAlC,GAAuC,GAAEG,OAAQ,IAAGH,GAAI,EAA/D;AACD;;AAEM,SAASK,aAAT,CAAuBL,GAAG,GAAG,EAA7B,EAAiCG,OAAjC,EAA0C;EAC/C,IAAIJ,aAAa,CAACC,GAAD,CAAjB,EAAwB;IACtBA,GAAG,GAAGA,GAAG,CAACM,SAAJ,CAAcH,OAAO,CAACI,MAAtB,CAAN;EACD;;EAED,OAAOP,GAAG,CAAC,CAAD,CAAH,KAAW,GAAX,GAAiBA,GAAjB,GAAwB,IAAGA,GAAI,EAAtC;AACD;;AAEM,SAASQ,aAAT,CAAuBC,GAAvB,EAA4B;EACjC,IAAIC,GAAG,GAAG,EAAV;;EACA,IAAID,GAAG,KAAK,IAAZ,EAAkB;IAChB,KAAK,IAAIE,GAAT,IAAgBF,GAAhB,EAAqB;MACnB,IAAIG,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0CE,GAA1C,KACAF,GAAG,CAACE,GAAD,CAAH,KAAaK,SADb,IAEAP,GAAG,CAACE,GAAD,CAAH,KAAa,IAFjB,EAEuB;QACrBD,GAAG,CAACO,IAAJ,CAASN,GAAG,GAAG,GAAN,GAAYO,kBAAkB,CAACT,GAAG,CAACE,GAAD,CAAJ,CAAvC;MACD;IACF;EACF;;EACD,IAAID,GAAG,CAACH,MAAR,EAAgB;IACd,OAAO,MAAMG,GAAG,CAACS,IAAJ,CAAS,GAAT,CAAb;EACD,CAFD,MAEO;IACL,OAAO,EAAP;EACD;AACF;;AAEM,SAASf,mBAAT,CAA6BgB,IAA7B,EAAmC;EACxC,IAAI,CAACA,IAAL,EAAW;IACT;EACD,CAHuC,CAIxC;;;EACA,IAAIC,OAAO,GAAGD,IAAI,CAACE,OAAL,CAAa,aAAb,EAA2B,EAA3B,CAAd,CALwC,CAMxC;;EACAD,OAAO,GAAGA,OAAO,CAACC,OAAR,CAAgB,MAAhB,EAAwB,EAAxB,CAAV;EAEA,OAAOD,OAAP;AACD"}