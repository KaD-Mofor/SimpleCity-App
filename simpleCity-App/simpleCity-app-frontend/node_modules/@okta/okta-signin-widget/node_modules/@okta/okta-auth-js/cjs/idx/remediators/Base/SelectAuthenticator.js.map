{"version":3,"file":"SelectAuthenticator.js","names":["SelectAuthenticator","Remediator","findMatchedOption","authenticators","options","option","authenticator","find","relatesTo","key","canRemediate","values","authenticatorFromRemediation","getAuthenticatorFromRemediation","remediation","length","isAuthenticator","id","matchedOption","mapAuthenticator","remediationValue","selectedAuthenticator","selectedOption","value","form","name","getInputAuthenticator","map","label","type","getValuesAfterProceed","filter","compareAuthenticators"],"sources":["../../../../../lib/idx/remediators/Base/SelectAuthenticator.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticatorFromRemediation } from '../util';\nimport { IdxRemediationValue } from '../../types/idx-js';\nimport { Authenticator, isAuthenticator } from '../../types/api';\nimport { compareAuthenticators, findMatchedOption} from '../../authenticator/util';\n\nexport type SelectAuthenticatorValues = RemediationValues & {\n  authenticator?: string | Authenticator;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class SelectAuthenticator<T extends SelectAuthenticatorValues = SelectAuthenticatorValues>\n  extends Remediator<T> {\n  selectedAuthenticator?: Authenticator;\n  selectedOption?: any;\n\n  // Find matched authenticator in provided order\n  findMatchedOption(authenticators, options) {\n    let option;\n    for (let authenticator of authenticators) {\n      option = options\n        .find(({ relatesTo }) => relatesTo.key === authenticator.key);\n      if (option) {\n        break;\n      }\n    }\n    return option;\n  }\n\n  canRemediate() {\n    const { authenticators, authenticator } = this.values;\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const { options } = authenticatorFromRemediation;\n    // Let users select authenticator if no input is provided\n    if (!authenticators || !authenticators.length) {\n      return false;\n    }\n\n    // Authenticator is explicitly specified by id\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      return true;\n    }\n\n    // Proceed with provided authenticators\n    const matchedOption = this.findMatchedOption(authenticators, options);\n    if (matchedOption) {\n      return true;\n    }\n    \n    return false;\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const { authenticators, authenticator } = this.values;\n\n    // Authenticator is explicitly specified by id\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      this.selectedAuthenticator = authenticator; // track the selected authenticator\n      return authenticator;\n    }\n\n    const { options } = remediationValue;\n    const selectedOption = findMatchedOption(authenticators, options);\n    this.selectedAuthenticator = selectedOption.relatesTo; // track the selected authenticator\n    this.selectedOption = selectedOption;\n    return {\n      id: selectedOption?.value.form.value.find(({ name }) => name === 'id').value\n    };\n  }\n\n  getInputAuthenticator(remediation) {\n    const options = remediation.options.map(({ label, relatesTo }) => {\n      return {\n        label,\n        value: relatesTo.key\n      };\n    });\n    return { name: 'authenticator', type: 'string', options };\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticators\n    const authenticators = (this.values.authenticators as Authenticator[])\n      .filter(authenticator => {\n        return compareAuthenticators(authenticator, this.selectedAuthenticator) !== true;\n      });\n    return { ...this.values, authenticators };\n  }\n\n}\n"],"mappings":"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"}