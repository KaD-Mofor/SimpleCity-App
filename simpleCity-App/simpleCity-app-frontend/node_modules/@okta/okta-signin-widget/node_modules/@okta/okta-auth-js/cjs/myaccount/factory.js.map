{"version":3,"file":"factory.js","names":["createOktaAuthMyAccount","StorageManagerConstructor","OptionsConstructor","TransactionManager","Core","createOktaAuthCore","WithMyAccount","mixinMyAccount"],"sources":["../../../lib/myaccount/factory.ts"],"sourcesContent":["import { StorageManagerConstructor } from '../storage/types';\nimport { OktaAuthConstructor, OktaAuthOptionsConstructor } from '../base/types';\nimport {\n  OAuthStorageManagerInterface,\n  PKCETransactionMeta,\n  TransactionManagerConstructor,\n  TransactionManagerInterface\n} from '../oidc/types';\nimport { createOktaAuthCore } from '../core/factory';\nimport { OktaAuthCoreOptions } from '../core/types';\nimport { mixinMyAccount } from './mixin';\nimport { OktaAuthMyAccountInterface } from './types';\n\nexport function createOktaAuthMyAccount\n<\n  M extends PKCETransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions = OktaAuthCoreOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface\n>\n(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManager: TransactionManagerConstructor<TM>\n)\n: OktaAuthConstructor<OktaAuthMyAccountInterface<M, S, O>>\n{\n  const Core = createOktaAuthCore<M, S, O>(StorageManagerConstructor, OptionsConstructor, TransactionManager);\n  const WithMyAccount = mixinMyAccount<M, S, O>(Core);\n  return WithMyAccount;\n}\n"],"mappings":";;;;AAQA;;AAEA;;AAGO,SAASA,uBAAT,CAQLC,yBARK,EASLC,kBATK,EAULC,kBAVK,EAaP;EACE,MAAMC,IAAI,GAAG,IAAAC,2BAAA,EAA4BJ,yBAA5B,EAAuDC,kBAAvD,EAA2EC,kBAA3E,CAAb;EACA,MAAMG,aAAa,GAAG,IAAAC,qBAAA,EAAwBH,IAAxB,CAAtB;EACA,OAAOE,aAAP;AACD"}