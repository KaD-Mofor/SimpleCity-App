{"version":3,"file":"storage.js","names":["createOAuthStorageManager","OAuthStorageManager","BaseStorageManager","constructor","storageManagerOptions","cookieOptions","storageUtil","getTransactionStorage","options","getOptionsForSection","logServerSideMemoryStorageWarning","storage","getStorage","storageKey","TRANSACTION_STORAGE_NAME","SavedObject","getSharedTansactionStorage","SHARED_TRANSACTION_STORAGE_NAME","getOriginalUriStorage","ORIGINAL_URI_STORAGE_NAME"],"sources":["../../../lib/oidc/storage.ts"],"sourcesContent":["import {\n  CookieOptions,\n  StorageManagerOptions,\n  StorageOptions,\n  StorageUtil\n} from '../storage/types';\nimport { BaseStorageManager, logServerSideMemoryStorageWarning } from '../storage/BaseStorageManager';\nimport { TransactionStorage, OAuthTransactionMeta, OAuthStorageManagerInterface, PKCETransactionMeta } from './types';\nimport { SavedObject } from '../storage';\nimport { ORIGINAL_URI_STORAGE_NAME, SHARED_TRANSACTION_STORAGE_NAME, TRANSACTION_STORAGE_NAME } from '../constants';\n\n\nexport function createOAuthStorageManager<M extends OAuthTransactionMeta = PKCETransactionMeta>()\n{\n  return class OAuthStorageManager\n    extends BaseStorageManager\n    implements OAuthStorageManagerInterface<M>\n  {\n    constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n      super(storageManagerOptions, cookieOptions, storageUtil);\n    }\n\n    getTransactionStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n\n    getSharedTansactionStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('shared-transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || SHARED_TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n\n    getOriginalUriStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('original-uri', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || ORIGINAL_URI_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  };\n\n}\n"],"mappings":";;;;AAMA;;AAEA;;AACA;;AAGO,SAASA,yBAAT,GACP;EACE,OAAO,MAAMC,mBAAN,SACGC,sCADH,CAGP;IACEC,WAAW,CAACC,qBAAD,EAA+CC,aAA/C,EAA6EC,WAA7E,EAAuG;MAChH,MAAMF,qBAAN,EAA6BC,aAA7B,EAA4CC,WAA5C;IACD;;IAEDC,qBAAqB,CAACC,OAAD,EAAkD;MACrEA,OAAO,GAAG,KAAKC,oBAAL,CAA0B,aAA1B,EAAyCD,OAAzC,CAAV;MACA,IAAAE,qDAAA,EAAkCF,OAAlC;MACA,MAAMG,OAAO,GAAG,KAAKC,UAAL,CAAgBJ,OAAhB,CAAhB;MACA,MAAMK,UAAU,GAAGL,OAAO,CAACK,UAAR,IAAsBC,mCAAzC;MACA,OAAO,IAAIC,oBAAJ,CAAgBJ,OAAhB,EAAyBE,UAAzB,CAAP;IACD;;IAEDG,0BAA0B,CAACR,OAAD,EAAkD;MAC1EA,OAAO,GAAG,KAAKC,oBAAL,CAA0B,oBAA1B,EAAgDD,OAAhD,CAAV;MACA,IAAAE,qDAAA,EAAkCF,OAAlC;MACA,MAAMG,OAAO,GAAG,KAAKC,UAAL,CAAgBJ,OAAhB,CAAhB;MACA,MAAMK,UAAU,GAAGL,OAAO,CAACK,UAAR,IAAsBI,0CAAzC;MACA,OAAO,IAAIF,oBAAJ,CAAgBJ,OAAhB,EAAyBE,UAAzB,CAAP;IACD;;IAEDK,qBAAqB,CAACV,OAAD,EAAkD;MACrEA,OAAO,GAAG,KAAKC,oBAAL,CAA0B,cAA1B,EAA0CD,OAA1C,CAAV;MACA,IAAAE,qDAAA,EAAkCF,OAAlC;MACA,MAAMG,OAAO,GAAG,KAAKC,UAAL,CAAgBJ,OAAhB,CAAhB;MACA,MAAMK,UAAU,GAAGL,OAAO,CAACK,UAAR,IAAsBM,oCAAzC;MACA,OAAO,IAAIJ,oBAAJ,CAAgBJ,OAAhB,EAAyBE,UAAzB,CAAP;IACD;;EA3BH,CAHA;AAiCD"}