{"version":3,"file":"mixin.js","names":["mixinCore","Base","OktaAuthCore","constructor","args","authStateManager","AuthStateManager","serviceManager","ServiceManager","options","services","start","tokenManager","token","isLoginRedirect","updateAuthState","stop","handleLoginRedirect","tokens","originalUri","state","setTokens","getOriginalUri","oAuthResponse","parseOAuthResponseFromUrl","storeTokensFromRedirect","e","removeOriginalUri","restoreOriginalUri","window","location","replace"],"sources":["../../../lib/core/mixin.ts"],"sourcesContent":["import { parseOAuthResponseFromUrl } from '../oidc/parseFromUrl';\nimport { OktaAuthConstructor } from '../base/types';\nimport {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  PKCETransactionMeta,\n  Tokens,\n  TransactionManagerInterface,\n} from '../oidc/types';\nimport { AuthStateManager } from './AuthStateManager';\nimport { ServiceManager } from './ServiceManager';\nimport { OktaAuthCoreInterface, OktaAuthCoreOptions } from './types';\n\nexport function mixinCore\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions = OktaAuthCoreOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface,\n  TBase extends OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n    = OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthCoreInterface<M, S, O, TM>>\n{\n  return class OktaAuthCore extends Base implements OktaAuthCoreInterface<M, S, O, TM>\n  {\n    authStateManager: AuthStateManager<M, S, O>;\n    serviceManager: ServiceManager<M, S, O>;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      // AuthStateManager\n      this.authStateManager = new AuthStateManager<M, S, O>(this);\n\n      // ServiceManager\n      this.serviceManager = new ServiceManager<M, S, O>(this, this.options.services);\n    }\n\n    async start() {\n      await this.serviceManager.start();\n      // TODO: review tokenManager.start\n      this.tokenManager.start();\n      if (!this.token.isLoginRedirect()) {\n        await this.authStateManager.updateAuthState();\n      }\n    }\n  \n    async stop() {\n      // TODO: review tokenManager.stop\n      this.tokenManager.stop();\n      await this.serviceManager.stop();\n    }\n\n    // eslint-disable-next-line complexity\n    async handleLoginRedirect(tokens?: Tokens, originalUri?: string): Promise<void> {\n      let state = this.options.state;\n  \n      // Store tokens and update AuthState by the emitted events\n      if (tokens) {\n        this.tokenManager.setTokens(tokens);\n        originalUri = originalUri || this.getOriginalUri(this.options.state);\n      } else if (this.isLoginRedirect()) {\n        try {\n          // For redirect flow, get state from the URL and use it to retrieve the originalUri\n          const oAuthResponse = await parseOAuthResponseFromUrl(this, {});\n          state = oAuthResponse.state;\n          originalUri = originalUri || this.getOriginalUri(state);\n          await this.storeTokensFromRedirect();\n        } catch(e) {\n          // auth state should be updated\n          await this.authStateManager.updateAuthState();\n          throw e;\n        }\n      } else {\n        return; // nothing to do\n      }\n      \n      // ensure auth state has been updated\n      await this.authStateManager.updateAuthState();\n  \n      // clear originalUri from storage\n      this.removeOriginalUri(state);\n  \n      // Redirect to originalUri\n      const { restoreOriginalUri } = this.options;\n      if (restoreOriginalUri) {\n        await restoreOriginalUri(this, originalUri);\n      } else if (originalUri) {\n        window.location.replace(originalUri);\n      }\n    }\n  };\n}\n"],"mappings":";;;;AAAA;;AAUA;;AACA;;AAGO,SAASA,SAAT,CASNC,IATM,EAUP;EACE,OAAO,MAAMC,YAAN,SAA2BD,IAA3B,CACP;IAIEE,WAAW,CAAC,GAAGC,IAAJ,EAAiB;MAC1B,MAAM,GAAGA,IAAT,EAD0B,CAG1B;;MACA,KAAKC,gBAAL,GAAwB,IAAIC,kCAAJ,CAA8B,IAA9B,CAAxB,CAJ0B,CAM1B;;MACA,KAAKC,cAAL,GAAsB,IAAIC,8BAAJ,CAA4B,IAA5B,EAAkC,KAAKC,OAAL,CAAaC,QAA/C,CAAtB;IACD;;IAEU,MAALC,KAAK,GAAG;MACZ,MAAM,KAAKJ,cAAL,CAAoBI,KAApB,EAAN,CADY,CAEZ;;MACA,KAAKC,YAAL,CAAkBD,KAAlB;;MACA,IAAI,CAAC,KAAKE,KAAL,CAAWC,eAAX,EAAL,EAAmC;QACjC,MAAM,KAAKT,gBAAL,CAAsBU,eAAtB,EAAN;MACD;IACF;;IAES,MAAJC,IAAI,GAAG;MACX;MACA,KAAKJ,YAAL,CAAkBI,IAAlB;MACA,MAAM,KAAKT,cAAL,CAAoBS,IAApB,EAAN;IACD,CA3BH,CA6BE;;;IACyB,MAAnBC,mBAAmB,CAACC,MAAD,EAAkBC,WAAlB,EAAuD;MAC9E,IAAIC,KAAK,GAAG,KAAKX,OAAL,CAAaW,KAAzB,CAD8E,CAG9E;;MACA,IAAIF,MAAJ,EAAY;QACV,KAAKN,YAAL,CAAkBS,SAAlB,CAA4BH,MAA5B;QACAC,WAAW,GAAGA,WAAW,IAAI,KAAKG,cAAL,CAAoB,KAAKb,OAAL,CAAaW,KAAjC,CAA7B;MACD,CAHD,MAGO,IAAI,KAAKN,eAAL,EAAJ,EAA4B;QACjC,IAAI;UACF;UACA,MAAMS,aAAa,GAAG,MAAM,IAAAC,uCAAA,EAA0B,IAA1B,EAAgC,EAAhC,CAA5B;UACAJ,KAAK,GAAGG,aAAa,CAACH,KAAtB;UACAD,WAAW,GAAGA,WAAW,IAAI,KAAKG,cAAL,CAAoBF,KAApB,CAA7B;UACA,MAAM,KAAKK,uBAAL,EAAN;QACD,CAND,CAME,OAAMC,CAAN,EAAS;UACT;UACA,MAAM,KAAKrB,gBAAL,CAAsBU,eAAtB,EAAN;UACA,MAAMW,CAAN;QACD;MACF,CAZM,MAYA;QACL,OADK,CACG;MACT,CArB6E,CAuB9E;;;MACA,MAAM,KAAKrB,gBAAL,CAAsBU,eAAtB,EAAN,CAxB8E,CA0B9E;;MACA,KAAKY,iBAAL,CAAuBP,KAAvB,EA3B8E,CA6B9E;;MACA,MAAM;QAAEQ;MAAF,IAAyB,KAAKnB,OAApC;;MACA,IAAImB,kBAAJ,EAAwB;QACtB,MAAMA,kBAAkB,CAAC,IAAD,EAAOT,WAAP,CAAxB;MACD,CAFD,MAEO,IAAIA,WAAJ,EAAiB;QACtBU,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwBZ,WAAxB;MACD;IACF;;EAlEH,CADA;AAqED"}