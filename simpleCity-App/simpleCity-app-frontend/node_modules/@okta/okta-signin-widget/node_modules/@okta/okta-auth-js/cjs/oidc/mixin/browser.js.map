{"version":3,"file":"browser.js","names":["provideOriginalUri","BaseClass","WithOriginalUri","setOriginalUri","originalUri","state","sessionStorage","browserStorage","getSessionStorage","setItem","REFERRER_PATH_STORAGE_KEY","options","sharedStorage","storageManager","getOriginalUriStorage","getOriginalUri","getItem","storage","undefined","removeOriginalUri","removeItem"],"sources":["../../../../lib/oidc/mixin/browser.ts"],"sourcesContent":["import { REFERRER_PATH_STORAGE_KEY } from '../../constants';\nimport browserStorage from '../../browser/browserStorage';\nimport { OktaAuthStorageInterface } from '../../storage';\nimport { OktaAuthConstructor } from '../../base';\nimport {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthOptions,\n  OriginalUriApi,\n  PKCETransactionMeta,\n} from '../types';\n\nexport function provideOriginalUri\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TBase extends OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthStorageInterface<S, O>> \n>\n(BaseClass: TBase) {\n  return class WithOriginalUri extends BaseClass implements OriginalUriApi {\n    setOriginalUri(originalUri: string, state?: string): void {\n      // always store in session storage\n      const sessionStorage = browserStorage.getSessionStorage();\n      sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n  \n      // to support multi-tab flows, set a state in constructor or pass as param\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.setItem(state, originalUri);\n      }\n    }\n  \n    getOriginalUri(state?: string): string | undefined {\n      // Prefer shared storage (if state is available)\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        const originalUri = sharedStorage.getItem(state);\n        if (originalUri) {\n          return originalUri;\n        }\n      }\n  \n      // Try to load from session storage\n      const storage = browserStorage.getSessionStorage();\n      return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) || undefined : undefined;\n    }\n  \n    removeOriginalUri(state?: string): void {\n      // Remove from sessionStorage\n      const storage = browserStorage.getSessionStorage();\n      storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n  \n      // Also remove from shared storage\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.removeItem && sharedStorage.removeItem(state);\n      }\n    }\n  };\n}\n"],"mappings":";;;;;;AAAA;;AACA;;AAWO,SAASA,kBAAT,CAQNC,SARM,EAQY;EACjB,OAAO,MAAMC,eAAN,SAA8BD,SAA9B,CAAkE;IACvEE,cAAc,CAACC,WAAD,EAAsBC,KAAtB,EAA4C;MACxD;MACA,MAAMC,cAAc,GAAGC,uBAAA,CAAeC,iBAAf,EAAvB;;MACAF,cAAc,CAACG,OAAf,CAAuBC,oCAAvB,EAAkDN,WAAlD,EAHwD,CAKxD;;MACAC,KAAK,GAAGA,KAAK,IAAI,KAAKM,OAAL,CAAaN,KAA9B;;MACA,IAAIA,KAAJ,EAAW;QACT,MAAMO,aAAa,GAAG,KAAKC,cAAL,CAAoBC,qBAApB,EAAtB;QACAF,aAAa,CAACH,OAAd,CAAsBJ,KAAtB,EAA6BD,WAA7B;MACD;IACF;;IAEDW,cAAc,CAACV,KAAD,EAAqC;MACjD;MACAA,KAAK,GAAGA,KAAK,IAAI,KAAKM,OAAL,CAAaN,KAA9B;;MACA,IAAIA,KAAJ,EAAW;QACT,MAAMO,aAAa,GAAG,KAAKC,cAAL,CAAoBC,qBAApB,EAAtB;QACA,MAAMV,WAAW,GAAGQ,aAAa,CAACI,OAAd,CAAsBX,KAAtB,CAApB;;QACA,IAAID,WAAJ,EAAiB;UACf,OAAOA,WAAP;QACD;MACF,CATgD,CAWjD;;;MACA,MAAMa,OAAO,GAAGV,uBAAA,CAAeC,iBAAf,EAAhB;;MACA,OAAOS,OAAO,GAAGA,OAAO,CAACD,OAAR,CAAgBN,oCAAhB,KAA8CQ,SAAjD,GAA6DA,SAA3E;IACD;;IAEDC,iBAAiB,CAACd,KAAD,EAAuB;MACtC;MACA,MAAMY,OAAO,GAAGV,uBAAA,CAAeC,iBAAf,EAAhB;;MACAS,OAAO,CAACG,UAAR,CAAmBV,oCAAnB,EAHsC,CAKtC;;MACAL,KAAK,GAAGA,KAAK,IAAI,KAAKM,OAAL,CAAaN,KAA9B;;MACA,IAAIA,KAAJ,EAAW;QACT,MAAMO,aAAa,GAAG,KAAKC,cAAL,CAAoBC,qBAApB,EAAtB;QACAF,aAAa,CAACQ,UAAd,IAA4BR,aAAa,CAACQ,UAAd,CAAyBf,KAAzB,CAA5B;MACD;IACF;;EAzCsE,CAAzE;AA2CD"}