{"version":3,"file":"VerifyAuthenticator.js","names":["VerifyAuthenticator","Remediator","constructor","remediation","values","authenticator","getAuthenticator","getNextStep","authClient","context","nextStep","authenticatorEnrollments","value","canRemediate","canVerify","mapCredentials","getInputCredentials","input","getInputs","getValuesAfterProceed","trimmedValues","Object","keys","filter","valueKey","reduce"],"sources":["../../../../../lib/idx/remediators/Base/VerifyAuthenticator.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticator, Authenticator, AuthenticatorValues } from '../../authenticator';\nimport { IdxRemediation, IdxContext } from '../../types/idx-js';\nimport { OktaAuthIdxInterface, NextStep } from '../../types';\n\nexport type VerifyAuthenticatorValues = AuthenticatorValues & RemediationValues;\n\n// Base class - DO NOT expose static remediationName\nexport class VerifyAuthenticator<T extends VerifyAuthenticatorValues = VerifyAuthenticatorValues>\n  extends Remediator<T> {\n\n  authenticator: Authenticator<VerifyAuthenticatorValues>;\n\n  constructor(remediation: IdxRemediation, values: T = {} as T) {\n    super(remediation, values);\n    this.authenticator = getAuthenticator(remediation);\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context?: IdxContext): NextStep {\n    const nextStep = super.getNextStep(authClient, context);\n    const authenticatorEnrollments = context?.authenticatorEnrollments?.value;\n\n    return {\n      ...nextStep,\n      authenticatorEnrollments\n    };\n  }\n\n  canRemediate() {\n    return this.authenticator.canVerify(this.values);\n  }\n\n  mapCredentials() {\n    return this.authenticator.mapCredentials(this.values);\n  }\n\n  getInputCredentials(input) {\n    return this.authenticator.getInputs(input);\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'credentials');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {} as T);\n  }\n}\n"],"mappings":";;;;AAaA;;AACA;;AAdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AACO,MAAMA,mBAAN,SACGC,sBADH,CACiB;EAItBC,WAAW,CAACC,WAAD,EAA8BC,MAAS,GAAG,EAA1C,EAAmD;IAC5D,MAAMD,WAAN,EAAmBC,MAAnB;IACA,KAAKC,aAAL,GAAqB,IAAAC,+BAAA,EAAiBH,WAAjB,CAArB;EACD;;EAEDI,WAAW,CAACC,UAAD,EAAmCC,OAAnC,EAAmE;IAAA;;IAC5E,MAAMC,QAAQ,GAAG,MAAMH,WAAN,CAAkBC,UAAlB,EAA8BC,OAA9B,CAAjB;IACA,MAAME,wBAAwB,GAAGF,OAAH,aAAGA,OAAH,gDAAGA,OAAO,CAAEE,wBAAZ,0DAAG,sBAAmCC,KAApE;IAEA,OAAO,EACL,GAAGF,QADE;MAELC;IAFK,CAAP;EAID;;EAEDE,YAAY,GAAG;IACb,OAAO,KAAKR,aAAL,CAAmBS,SAAnB,CAA6B,KAAKV,MAAlC,CAAP;EACD;;EAEDW,cAAc,GAAG;IACf,OAAO,KAAKV,aAAL,CAAmBU,cAAnB,CAAkC,KAAKX,MAAvC,CAAP;EACD;;EAEDY,mBAAmB,CAACC,KAAD,EAAQ;IACzB,OAAO,KAAKZ,aAAL,CAAmBa,SAAnB,CAA6BD,KAA7B,CAAP;EACD;;EAEDE,qBAAqB,GAAM;IACzB,KAAKf,MAAL,GAAc,MAAMe,qBAAN,EAAd;IACA,IAAIC,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKlB,MAAjB,EAAyBmB,MAAzB,CAAgCC,QAAQ,IAAIA,QAAQ,KAAK,aAAzD,CAApB;IACA,OAAOJ,aAAa,CAACK,MAAd,CAAqB,CAACrB,MAAD,EAASoB,QAAT,MAAuB,EAAC,GAAGpB,MAAJ;MAAY,CAACoB,QAAD,GAAY,KAAKpB,MAAL,CAAYoB,QAAZ;IAAxB,CAAvB,CAArB,EAA6F,EAA7F,CAAP;EACD;;AAnCqB"}