{"version":3,"file":"getAuthenticator.js","names":["getAuthenticator","remediation","relatesTo","value","key","AuthenticatorKey","OKTA_PASSWORD","OktaPassword","SECURITY_QUESTION","contextualData","enrolledQuestion","SecurityQuestionVerification","SecurityQuestionEnrollment","OKTA_VERIFY","OktaVerifyTotp","WEBAUTHN","challengeData","WebauthnVerification","WebauthnEnrollment","VerificationCodeAuthenticator"],"sources":["../../../../lib/idx/authenticator/getAuthenticator.ts"],"sourcesContent":["import { OktaVerifyTotp } from './OktaVerifyTotp';\nimport { Authenticator } from './Authenticator';\nimport { VerificationCodeAuthenticator } from './VerificationCodeAuthenticator';\nimport { OktaPassword } from './OktaPassword';\nimport { SecurityQuestionEnrollment } from './SecurityQuestionEnrollment';\nimport { SecurityQuestionVerification } from './SecurityQuestionVerification';\nimport { WebauthnEnrollment } from './WebauthnEnrollment';\nimport { WebauthnVerification } from './WebauthnVerification';\nimport { IdxAuthenticator, IdxRemediation } from '../types/idx-js';\nimport { AuthenticatorKey } from '../types';\n\n/* eslint complexity:[0,8] */\nexport function getAuthenticator(remediation: IdxRemediation): Authenticator<any> {\n  const relatesTo = remediation.relatesTo;\n  const value = relatesTo?.value || {} as IdxAuthenticator;\n  switch (value.key) {\n    case AuthenticatorKey.OKTA_PASSWORD:\n      return new OktaPassword(value);\n    case AuthenticatorKey.SECURITY_QUESTION:\n      if (value.contextualData?.enrolledQuestion) {\n        return new SecurityQuestionVerification(value);\n      } else {\n        return new SecurityQuestionEnrollment(value);\n      }\n    case AuthenticatorKey.OKTA_VERIFY:\n      return new OktaVerifyTotp(value);\n    case AuthenticatorKey.WEBAUTHN:\n      if (value.contextualData?.challengeData) {\n        return new WebauthnVerification(value);\n      } else {\n        return new WebauthnEnrollment(value);\n      }\n    default:\n      return new VerificationCodeAuthenticator(value);\n  }\n}\n"],"mappings":";;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEA;AACO,SAASA,gBAAT,CAA0BC,WAA1B,EAA2E;EAAA;;EAChF,MAAMC,SAAS,GAAGD,WAAW,CAACC,SAA9B;EACA,MAAMC,KAAK,GAAG,CAAAD,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEC,KAAX,KAAoB,EAAlC;;EACA,QAAQA,KAAK,CAACC,GAAd;IACE,KAAKC,uBAAA,CAAiBC,aAAtB;MACE,OAAO,IAAIC,0BAAJ,CAAiBJ,KAAjB,CAAP;;IACF,KAAKE,uBAAA,CAAiBG,iBAAtB;MACE,6BAAIL,KAAK,CAACM,cAAV,kDAAI,sBAAsBC,gBAA1B,EAA4C;QAC1C,OAAO,IAAIC,0DAAJ,CAAiCR,KAAjC,CAAP;MACD,CAFD,MAEO;QACL,OAAO,IAAIS,sDAAJ,CAA+BT,KAA/B,CAAP;MACD;;IACH,KAAKE,uBAAA,CAAiBQ,WAAtB;MACE,OAAO,IAAIC,8BAAJ,CAAmBX,KAAnB,CAAP;;IACF,KAAKE,uBAAA,CAAiBU,QAAtB;MACE,8BAAIZ,KAAK,CAACM,cAAV,mDAAI,uBAAsBO,aAA1B,EAAyC;QACvC,OAAO,IAAIC,0CAAJ,CAAyBd,KAAzB,CAAP;MACD,CAFD,MAEO;QACL,OAAO,IAAIe,sCAAJ,CAAuBf,KAAvB,CAAP;MACD;;IACH;MACE,OAAO,IAAIgB,4DAAJ,CAAkChB,KAAlC,CAAP;EAlBJ;AAoBD"}