{"version":3,"file":"generateIdxAction.js","names":["generateDirectFetch","authClient","actionDefinition","defaultParamsForAction","immutableParamsForAction","toPersist","target","href","params","headers","accepts","body","JSON","stringify","response","httpRequest","url","method","args","withCredentials","idx","makeIdxResponse","err","AuthApiError","xhr","payload","responseJSON","parse","responseText","wwwAuthHeader","idxResponse","status","stepUp","generateIdxAction","generator","defaultParams","neededParams","immutableParams","divideActionParamsByMutability","action","name"],"sources":["../../../../../lib/idx/idxState/v1/generateIdxAction.ts"],"sourcesContent":["/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len, complexity */\nimport { httpRequest } from '../../../http';\nimport { OktaAuthIdxInterface } from '../../types';    // auth-js/types\nimport { IdxActionFunction, IdxActionParams, IdxResponse, IdxToPersist } from '../../types/idx-js';\nimport { divideActionParamsByMutability } from './actionParser';\nimport AuthApiError from '../../../errors/AuthApiError';\n\nconst generateDirectFetch = function generateDirectFetch(authClient: OktaAuthIdxInterface, { \n  actionDefinition, \n  defaultParamsForAction = {}, \n  immutableParamsForAction = {}, \n  toPersist = {} as IdxToPersist\n}): IdxActionFunction {\n  const target = actionDefinition.href;\n  return async function(params: IdxActionParams = {}): Promise<IdxResponse> {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Accept': actionDefinition.accepts || 'application/ion+json',\n    };\n    const body = JSON.stringify({\n      ...defaultParamsForAction,\n      ...params,\n      ...immutableParamsForAction\n    });\n\n    try {\n      const response = await httpRequest(authClient, {\n        url: target,\n        method: actionDefinition.method,\n        headers,\n        args: body,\n        withCredentials: toPersist?.withCredentials ?? true\n      });\n\n      return authClient.idx.makeIdxResponse({ ...response }, toPersist, true);\n    }\n    catch (err) {\n      if (!(err instanceof AuthApiError) || !err?.xhr) {\n        throw err;\n      }\n\n      const response = err.xhr;\n      const payload = response.responseJSON || JSON.parse(response.responseText);\n      const wwwAuthHeader = response.headers['WWW-Authenticate'] || response.headers['www-authenticate'];\n\n      const idxResponse = authClient.idx.makeIdxResponse({ ...payload }, toPersist, false);\n      if (response.status === 401 && wwwAuthHeader === 'Oktadevicejwt realm=\"Okta Device\"') {\n        // Okta server responds 401 status code with WWW-Authenticate header and new remediation\n        // so that the iOS/MacOS credential SSO extension (Okta Verify) can intercept\n        // the response reaches here when Okta Verify is not installed\n        // set `stepUp` to true if flow should be continued without showing any errors\n        idxResponse.stepUp = true;\n      }\n\n      return idxResponse;\n    }\n  };\n};\n\n// TODO: Resolve in M2: Either build the final polling solution or remove this code\n// const generatePollingFetch = function generatePollingFetch( { actionDefinition, defaultParamsForAction = {}, immutableParamsForAction = {} } ) {\n//   // TODO: Discussions ongoing about when/how to terminate polling: OKTA-246581\n//   const target = actionDefinition.href;\n//   return async function(params) {\n//     return fetch(target, {\n//       method: actionDefinition.method,\n//       headers: {\n//         'content-type': actionDefinition.accepts,\n//       },\n//       body: JSON.stringify({ ...defaultParamsForAction, ...params, ...immutableParamsForAction })\n//     })\n//       .then( response => response.ok ? response.json() : response.json().then( err => Promise.reject(err)) )\n//       .then( idxResponse => makeIdxState(authClient, idxResponse) );\n//   };\n// };\n\nconst generateIdxAction = function generateIdxAction( authClient: OktaAuthIdxInterface, actionDefinition, toPersist ): IdxActionFunction {\n  // TODO: leaving this here to see where the polling is EXPECTED to drop into the code, but removing any accidental trigger of incomplete code\n  // const generator =  actionDefinition.refresh ? generatePollingFetch : generateDirectFetch;\n  const generator = generateDirectFetch;\n  const { defaultParams, neededParams, immutableParams } = divideActionParamsByMutability( actionDefinition );\n\n  const action = generator(authClient, {\n    actionDefinition,\n    defaultParamsForAction: defaultParams[actionDefinition.name],\n    immutableParamsForAction: immutableParams[actionDefinition.name],\n    toPersist\n  });\n  action.neededParams = neededParams;\n  return action;\n};\n\nexport default generateIdxAction;\n"],"mappings":"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"}