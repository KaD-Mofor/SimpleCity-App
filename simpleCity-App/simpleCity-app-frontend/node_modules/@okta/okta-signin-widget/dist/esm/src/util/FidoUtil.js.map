{"version":3,"file":"FidoUtil.js","sources":["../../../../src/util/FidoUtil.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint complexity:[2, 9] */\n\nimport { loc } from './loc';\nconst fn = {};\n\nfn.getU2fEnrollErrorMessageKeyByCode = function(errorCode) {\n  switch (errorCode) {\n  default:\n  case 1:\n    return 'u2f.error.other';\n  case 2:\n  case 3:\n    return 'u2f.error.badRequest';\n  case 4:\n    return 'u2f.error.unsupported';\n  case 5:\n    return 'u2f.error.timeout';\n  }\n};\n\nfn.getU2fVerifyErrorMessageKeyByCode = function(errorCode, isOneFactor) {\n  switch (errorCode) {\n  case 1:\n    // OTHER_ERROR\n    return isOneFactor ? 'u2f.error.other.oneFactor' : 'u2f.error.other';\n  case 2: // BAD_REQUEST\n  case 3:\n    // CONFIGURATION_UNSUPPORTED\n    return isOneFactor ? 'u2f.error.badRequest.oneFactor' : 'u2f.error.badRequest';\n  case 4:\n    // DEVICE_INELIGIBLE\n    return isOneFactor ? 'u2f.error.unsupported.oneFactor' : 'u2f.error.unsupported';\n  case 5:\n    // TIMEOUT\n    return 'u2f.error.timeout';\n  }\n};\n\nfn.getU2fEnrollErrorMessageByCode = function(errorCode) {\n  return loc(fn.getU2fEnrollErrorMessageKeyByCode(errorCode), 'login');\n};\n\nfn.getU2fVerifyErrorMessageByCode = function(errorCode, isOneFactor) {\n  return loc(fn.getU2fVerifyErrorMessageKeyByCode(errorCode, isOneFactor), 'login');\n};\n\nfn.getU2fVersion = function() {\n  return 'U2F_V2';\n};\n\nfn.isU2fAvailable = function() {\n  return Object.prototype.hasOwnProperty.call(window, 'u2f');\n};\n\nexport default fn;\n"],"names":["fn","getU2fEnrollErrorMessageKeyByCode","errorCode","getU2fVerifyErrorMessageKeyByCode","isOneFactor","getU2fEnrollErrorMessageByCode","loc","getU2fVerifyErrorMessageByCode","getU2fVersion","isU2fAvailable","Object","prototype","hasOwnProperty","call","window"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKMA,MAAAA,EAAE,GAAG,GAAE;AAEbA,EAAE,CAACC,iCAAiC,GAAG,UAASC,SAAS,EAAE;AACzD,EAAA,QAAQA,SAAS;AACjB,IAAA,QAAA;AACA,IAAA,KAAK,CAAC;AACJ,MAAA,OAAO,iBAAiB,CAAA;AAC1B,IAAA,KAAK,CAAC,CAAA;AACN,IAAA,KAAK,CAAC;AACJ,MAAA,OAAO,sBAAsB,CAAA;AAC/B,IAAA,KAAK,CAAC;AACJ,MAAA,OAAO,uBAAuB,CAAA;AAChC,IAAA,KAAK,CAAC;AACJ,MAAA,OAAO,mBAAmB,CAAA;AAAC,GAAA;AAE/B,CAAC,CAAA;AAEDF,EAAE,CAACG,iCAAiC,GAAG,UAASD,SAAS,EAAEE,WAAW,EAAE;AACtE,EAAA,QAAQF,SAAS;AACjB,IAAA,KAAK,CAAC;AACJ;AACA,MAAA,OAAOE,WAAW,GAAG,2BAA2B,GAAG,iBAAiB,CAAA;IACtE,KAAK,CAAC,CAAC;AACP,IAAA,KAAK,CAAC;AACJ;AACA,MAAA,OAAOA,WAAW,GAAG,gCAAgC,GAAG,sBAAsB,CAAA;AAChF,IAAA,KAAK,CAAC;AACJ;AACA,MAAA,OAAOA,WAAW,GAAG,iCAAiC,GAAG,uBAAuB,CAAA;AAClF,IAAA,KAAK,CAAC;AACJ;AACA,MAAA,OAAO,mBAAmB,CAAA;AAAC,GAAA;AAE/B,CAAC,CAAA;AAEDJ,EAAE,CAACK,8BAA8B,GAAG,UAASH,SAAS,EAAE;EACtD,OAAOI,GAAG,CAACN,EAAE,CAACC,iCAAiC,CAACC,SAAS,CAAC,EAAE,OAAO,CAAC,CAAA;AACtE,CAAC,CAAA;AAEDF,EAAE,CAACO,8BAA8B,GAAG,UAASL,SAAS,EAAEE,WAAW,EAAE;AACnE,EAAA,OAAOE,GAAG,CAACN,EAAE,CAACG,iCAAiC,CAACD,SAAS,EAAEE,WAAW,CAAC,EAAE,OAAO,CAAC,CAAA;AACnF,CAAC,CAAA;AAEDJ,EAAE,CAACQ,aAAa,GAAG,YAAW;AAC5B,EAAA,OAAO,QAAQ,CAAA;AACjB,CAAC,CAAA;AAEDR,EAAE,CAACS,cAAc,GAAG,YAAW;EAC7B,OAAOC,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACC,MAAM,EAAE,KAAK,CAAC,CAAA;AAC5D,CAAC;;;;"}