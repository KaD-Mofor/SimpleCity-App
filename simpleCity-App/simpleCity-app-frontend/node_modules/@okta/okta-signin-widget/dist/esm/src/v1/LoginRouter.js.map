{"version":3,"file":"LoginRouter.js","sources":["../../../../src/v1/LoginRouter.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint max-params: 0 */\nimport AccountUnlockedController from 'v1/controllers/AccountUnlockedController';\nimport ActivateTotpController from 'v1/controllers/ActivateTotpController';\nimport AdminConsentRequiredController from 'v1/controllers/AdminConsentRequiredController';\nimport BarcodePushController from 'v1/controllers/BarcodePushController';\nimport BarcodeTotpController from 'v1/controllers/BarcodeTotpController';\nimport ConsentRequiredController from 'v1/controllers/ConsentRequiredController';\nimport CustomPasswordExpiredController from 'v1/controllers/CustomPasswordExpiredController';\nimport DeviceActivateController from 'v1/controllers/DeviceActivateController';\nimport DeviceActivateTerminalController from 'v1/controllers/DeviceActivateTerminalController';\nimport EnrollActivateCustomFactorController from 'v1/controllers/EnrollActivateCustomFactorController';\nimport EnrollActivateEmailController from 'v1/controllers/EnrollActivateEmailController';\nimport EnrollCallAndSmsController from 'v1/controllers/EnrollCallAndSmsController';\nimport EnrollChoicesController from 'v1/controllers/EnrollChoicesController';\nimport EnrollCustomFactorController from 'v1/controllers/EnrollCustomFactorController';\nimport EnrollDuoController from 'v1/controllers/EnrollDuoController';\nimport EnrollEmailController from 'v1/controllers/EnrollEmailController';\nimport EnrollHotpController from 'v1/controllers/EnrollHotpController';\nimport EnrollOnPremController from 'v1/controllers/EnrollOnPremController';\nimport EnrollPasswordController from 'v1/controllers/EnrollPasswordController';\nimport EnrollQuestionController from 'v1/controllers/EnrollQuestionController';\nimport EnrollSymantecVipController from 'v1/controllers/EnrollSymantecVipController';\nimport EnrollTotpController from 'v1/controllers/EnrollTotpController';\nimport EnrollU2FController from 'v1/controllers/EnrollU2FController';\nimport EnrollUserController from 'v1/controllers/EnrollUserController';\nimport EnrollWebauthnController from 'v1/controllers/EnrollWebauthnController';\nimport EnrollWindowsHelloController from 'v1/controllers/EnrollWindowsHelloController';\nimport EnrollYubikeyController from 'v1/controllers/EnrollYubikeyController';\nimport EnrollmentLinkSentController from 'v1/controllers/EnrollmentLinkSentController';\nimport EnterPasscodePushFlowController from 'v1/controllers/EnterPasscodePushFlowController';\nimport ForgotPasswordController from 'v1/controllers/ForgotPasswordController';\nimport IDPDiscoveryController from 'v1/controllers/IDPDiscoveryController';\nimport ForceIDPDiscoveryController from 'v1/controllers/ForceIDPDiscoveryController';\nimport ManualSetupPushController from 'v1/controllers/ManualSetupPushController';\nimport ManualSetupTotpController from 'v1/controllers/ManualSetupTotpController';\nimport MfaVerifyController from 'v1/controllers/MfaVerifyController';\nimport PasswordExpiredController from 'v1/controllers/PasswordExpiredController';\nimport PasswordResetController from 'v1/controllers/PasswordResetController';\nimport PollController from 'v1/controllers/PollController';\nimport PrimaryAuthController from 'v1/controllers/PrimaryAuthController';\nimport PwdResetEmailSentController from 'v1/controllers/PwdResetEmailSentController';\nimport RecoveryChallengeController from 'v1/controllers/RecoveryChallengeController';\nimport RecoveryLoadingController from 'v1/controllers/RecoveryLoadingController';\nimport RecoveryQuestionController from 'v1/controllers/RecoveryQuestionController';\nimport RefreshAuthStateController from 'v1/controllers/RefreshAuthStateController';\nimport RegistrationCompleteController from 'v1/controllers/RegistrationCompleteController';\nimport RegistrationController from 'v1/controllers/RegistrationController';\nimport UnlockAccountController from 'v1/controllers/UnlockAccountController';\nimport UnlockEmailSentController from 'v1/controllers/UnlockEmailSentController';\nimport VerifyCustomFactorController from 'v1/controllers/VerifyCustomFactorController';\nimport VerifyDuoController from 'v1/controllers/VerifyDuoController';\nimport VerifyPIVController from 'v1/controllers/VerifyPIVController';\nimport VerifyU2FController from 'v1/controllers/VerifyU2FController';\nimport VerifyWebauthnController from 'v1/controllers/VerifyWebauthnController';\nimport VerifyWindowsHelloController from 'v1/controllers/VerifyWindowsHelloController';\nimport ErrorStateController from 'v1/controllers/ErrorStateController';\nimport BaseLoginRouter from 'v1/BaseLoginRouter';\nimport FactorBeacon from 'v1/views/shared/FactorBeacon';\nimport PIVBeacon from 'v1/views/shared/PIVBeacon';\nimport SecurityBeacon from 'v1/views/shared/SecurityBeacon';\n\nimport Enums from 'util/Enums';\n\nexport default BaseLoginRouter.extend({\n  routes: {\n    '': 'defaultAuth',\n    signin: 'primaryAuth',\n    'signin/okta/:username': 'primaryAuth',\n    'signin/verify/duo/web': 'verifyDuo',\n    'signin/verify/piv': 'verifyPIV',\n    'signin/poll': 'poll',\n    'signin/verify/fido/webauthn': 'verifyWebauthn',\n    'signin/verify/webauthn': 'verifyWebauthn',\n    'signin/verify/fido/u2f': 'verifyU2F',\n    'signin/verify/u2f': 'verifyU2F',\n    'signin/verify/generic_saml/assertion:saml2': 'verifySAMLFactor',\n    'signin/verify/generic_oidc/assertion:oidc': 'verifyOIDCFactor',\n    'signin/verify/custom/claims_provider': 'verifyClaimsFactor',\n    'signin/verify/:factorType': 'verifyNoProvider',\n    'signin/verify/:provider/:factorType(/:factorIndex)': 'verify',\n    'signin/enroll': 'enrollChoices',\n    'signin/enroll/duo/web': 'enrollDuo',\n    'signin/enroll/okta/question': 'enrollQuestion',\n    'signin/enroll/okta/password': 'enrollPassword',\n    'signin/enroll/okta/sms': 'enrollSms',\n    'signin/enroll/okta/call': 'enrollCall',\n    'signin/enroll/okta/email': 'enrollEmail',\n    'signin/enroll-activate/okta/sms': 'enrollSms',\n    'signin/enroll-activate/okta/call': 'enrollCall',\n    'signin/enroll/rsa/token': 'enrollRsa',\n    'signin/enroll/del_oath/token': 'enrollOnPrem',\n    'signin/enroll/symantec/token': 'enrollSymantecVip',\n    'signin/enroll/yubico/token:hardware': 'enrollYubikey',\n    'signin/enroll/fido/webauthn': 'enrollWebauthn',\n    'signin/enroll/fido/u2f': 'enrollU2F',\n    'signin/enroll/generic_saml/assertion:saml2': 'enrollSAMLFactor',\n    'signin/enroll/generic_oidc/assertion:oidc': 'enrollOIDCFactor',\n    'signin/enroll/custom/claims_provider': 'enrollClaimsFactor',\n    'signin/enroll/custom/token:hotp': 'enrollHotpFactor',\n    'signin/enroll/:provider/:factorType': 'enrollTotpFactor',\n    'signin/enroll-activate/okta/email': 'enrollActivateEmail',\n    'signin/enroll-activate/okta/push': 'scanBarcodePushFactor',\n    'signin/enroll-activate/okta/push/manual': 'manualSetupPushFactor',\n    'signin/enroll-activate/okta/push/sent': 'activationLinkSent',\n    'signin/enroll-activate/okta/token:software:totp/passcode': 'enterPasscodeInPushEnrollmentFlow',\n    'signin/enroll-activate/custom/claims_provider': 'enrollActivateClaimsFactor',\n    'signin/enroll-activate/:provider/:factorType': 'scanBarcodeTotpFactor',\n    'signin/enroll-activate/:provider/:factorType/activate': 'activateTotpFactor',\n    'signin/enroll-activate/:provider/:factorType/manual': 'manualSetupTotpFactor',\n    'signin/password-expired': 'passwordExpired',\n    'signin/custom-password-expired': 'customPasswordExpired',\n    'signin/forgot-password': 'forgotPassword',\n    'signin/recovery-challenge': 'recoveryChallenge',\n    'signin/recovery-emailed': 'recoveryEmailSent',\n    'signin/recovery-question': 'recoveryQuestion',\n    'signin/password-reset': 'passwordReset',\n    'signin/reset-password/:token': 'recoveryLoading',\n    'signin/user-unlock/:token': 'recoveryLoading',\n    'signin/recovery/:token': 'recoveryLoading',\n    'signin/unlock-emailed': 'unlockEmailSent',\n    'signin/unlock': 'unlockAccount',\n    'signin/account-unlocked': 'accountUnlocked',\n    'signin/refresh-auth-state(/:token)': 'refreshAuthState',\n    'signin/register': 'register',\n    'signin/register-complete': 'registerComplete',\n    'signin/error': 'errorState',\n    'signin/consent': 'consentRequired',\n    'signin/admin-consent': 'adminConsentRequired',\n    'signin/enroll-user': 'enrollUser',\n    'signin/device-activate-complete': 'deviceActivateComplete',\n    'signin/device-activate': 'deviceActivate',\n    'signin/idp-discovery-check': 'idpDiscoveryCheck',\n    '*wildcard': 'defaultAuth',\n  },\n\n  // Route handlers that do not require a stateToken. If the page is refreshed,\n  // these functions will not require a status call to refresh the stateToken.\n  stateLessRouteHandlers: [\n    'defaultAuth',\n    'idpDiscovery',\n    'primaryAuth',\n    'forgotPassword',\n    'recoveryLoading',\n    'unlockAccount',\n    'refreshAuthState',\n    'register',\n    'registerComplete',\n    'errorState',\n    'verifyPIV',\n  ],\n\n  defaultAuth: function() {\n    if (window.location.hash === `#${Enums.WIDGET_CONTAINER_ID}`) {\n      document.getElementById(Enums.WIDGET_CONTAINER_ID).focus();\n      return;\n    }\n    if (this.settings.get('features.idpDiscovery')) {\n      this.idpDiscovery();\n    } else {\n      this.primaryAuth();\n    }\n  },\n\n  idpDiscoveryCheck: function() {\n    this.render(ForceIDPDiscoveryController, { Beacon: SecurityBeacon });\n  },\n\n  idpDiscovery: function() {\n    this.render(IDPDiscoveryController, { Beacon: SecurityBeacon });\n  },\n\n  primaryAuth: function(username) {\n    this.render(PrimaryAuthController, {\n      Beacon: SecurityBeacon,\n      username\n    });\n  },\n\n  verifyDuo: function() {\n    this.render(VerifyDuoController, {\n      provider: 'DUO',\n      factorType: 'web',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  verifyPIV: function() {\n    this.render(VerifyPIVController, { Beacon: PIVBeacon });\n  },\n\n  poll: function() {\n    this.render(PollController);\n  },\n\n  verifyWebauthn: function() {\n    if (this.settings.get('features.webauthn')) {\n      this.render(VerifyWebauthnController, {\n        provider: 'FIDO',\n        factorType: 'webauthn',\n        Beacon: FactorBeacon,\n      });\n    } else {\n      this.render(VerifyWindowsHelloController, {\n        provider: 'FIDO',\n        factorType: 'webauthn',\n        Beacon: FactorBeacon,\n      });\n    }\n  },\n\n  verifyU2F: function() {\n    this.render(VerifyU2FController, {\n      provider: 'FIDO',\n      factorType: 'u2f',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  verifySAMLFactor: function() {\n    this.render(VerifyCustomFactorController, {\n      provider: 'GENERIC_SAML',\n      factorType: 'assertion:saml2',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  verifyOIDCFactor: function() {\n    this.render(VerifyCustomFactorController, {\n      provider: 'GENERIC_OIDC',\n      factorType: 'assertion:oidc',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  verifyClaimsFactor: function() {\n    this.render(VerifyCustomFactorController, {\n      provider: 'CUSTOM',\n      factorType: 'claims_provider',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  verify: function(provider, factorType, factorIndex) {\n    this.render(MfaVerifyController, {\n      provider: provider.toUpperCase(),\n      factorType: factorType,\n      factorIndex: factorIndex,\n      Beacon: FactorBeacon,\n    });\n  },\n\n  verifyNoProvider: function(factorType) {\n    this.render(MfaVerifyController, {\n      factorType: factorType,\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollChoices: function() {\n    this.render(EnrollChoicesController, { Beacon: SecurityBeacon });\n  },\n\n  enrollDuo: function() {\n    this.render(EnrollDuoController, {\n      provider: 'DUO',\n      factorType: 'web',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollQuestion: function() {\n    this.render(EnrollQuestionController, {\n      provider: 'OKTA',\n      factorType: 'question',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollPassword: function() {\n    this.render(EnrollPasswordController, {\n      provider: 'OKTA',\n      factorType: 'password',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollSms: function() {\n    this.render(EnrollCallAndSmsController, {\n      provider: 'OKTA',\n      factorType: 'sms',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollCall: function() {\n    this.render(EnrollCallAndSmsController, {\n      provider: 'OKTA',\n      factorType: 'call',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollEmail: function() {\n    this.render(EnrollEmailController, {\n      provider: 'OKTA',\n      factorType: 'email',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollActivateEmail: function() {\n    this.render(EnrollActivateEmailController, {\n      provider: 'OKTA',\n      factorType: 'email',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollRsa: function() {\n    this.render(EnrollOnPremController, {\n      provider: 'RSA',\n      factorType: 'token',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollOnPrem: function() {\n    this.render(EnrollOnPremController, {\n      provider: 'DEL_OATH',\n      factorType: 'token',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollSymantecVip: function() {\n    this.render(EnrollSymantecVipController, {\n      provider: 'SYMANTEC',\n      factorType: 'token',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollYubikey: function() {\n    this.render(EnrollYubikeyController, {\n      provider: 'YUBICO',\n      factorType: 'token:hardware',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollSAMLFactor: function() {\n    this.render(EnrollCustomFactorController, {\n      provider: 'GENERIC_SAML',\n      factorType: 'assertion:saml2',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollOIDCFactor: function() {\n    this.render(EnrollCustomFactorController, {\n      provider: 'GENERIC_OIDC',\n      factorType: 'assertion:oidc',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollClaimsFactor: function() {\n    this.render(EnrollCustomFactorController, {\n      provider: 'CUSTOM',\n      factorType: 'claims_provider',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollActivateClaimsFactor: function() {\n    this.render(EnrollActivateCustomFactorController, {\n      provider: 'CUSTOM',\n      factorType: 'claims_provider',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollTotpFactor: function(provider, factorType) {\n    this.render(EnrollTotpController, {\n      provider: provider.toUpperCase(),\n      factorType: factorType,\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollHotpFactor: function() {\n    this.render(EnrollHotpController, {\n      provider: 'CUSTOM',\n      factorType: 'token:hotp',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollWebauthn: function() {\n    if (this.settings.get('features.webauthn')) {\n      this.render(EnrollWebauthnController, {\n        provider: 'FIDO',\n        factorType: 'webauthn',\n        Beacon: FactorBeacon,\n      });\n    } else {\n      this.render(EnrollWindowsHelloController, {\n        provider: 'FIDO',\n        factorType: 'webauthn',\n        Beacon: FactorBeacon,\n      });\n    }\n  },\n\n  enrollU2F: function() {\n    this.render(EnrollU2FController, {\n      provider: 'FIDO',\n      factorType: 'u2f',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  scanBarcodeTotpFactor: function(provider, factorType) {\n    this.render(BarcodeTotpController, {\n      provider: provider.toUpperCase(),\n      factorType: factorType,\n      Beacon: FactorBeacon,\n    });\n  },\n\n  scanBarcodePushFactor: function() {\n    this.render(BarcodePushController, {\n      provider: 'OKTA',\n      factorType: 'push',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  activateTotpFactor: function(provider, factorType) {\n    this.render(ActivateTotpController, {\n      provider: provider.toUpperCase(),\n      factorType: factorType,\n      Beacon: FactorBeacon,\n    });\n  },\n\n  manualSetupTotpFactor: function(provider, factorType) {\n    this.render(ManualSetupTotpController, {\n      provider: provider.toUpperCase(),\n      factorType: factorType,\n      Beacon: FactorBeacon,\n    });\n  },\n\n  manualSetupPushFactor: function() {\n    this.render(ManualSetupPushController, {\n      provider: 'OKTA',\n      factorType: 'push',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  activationLinkSent: function() {\n    this.render(EnrollmentLinkSentController, {\n      provider: 'OKTA',\n      factorType: 'push',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enterPasscodeInPushEnrollmentFlow: function() {\n    this.render(EnterPasscodePushFlowController, {\n      provider: 'OKTA',\n      factorType: 'token:software:totp',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  passwordExpired: function() {\n    this.render(PasswordExpiredController, { Beacon: SecurityBeacon });\n  },\n\n  customPasswordExpired: function() {\n    this.render(CustomPasswordExpiredController, { Beacon: SecurityBeacon });\n  },\n\n  forgotPassword: function() {\n    this.render(ForgotPasswordController);\n  },\n\n  recoveryChallenge: function() {\n    this.render(RecoveryChallengeController, { Beacon: SecurityBeacon });\n  },\n\n  recoveryEmailSent: function() {\n    this.render(PwdResetEmailSentController, { Beacon: SecurityBeacon });\n  },\n\n  unlockEmailSent: function() {\n    this.render(UnlockEmailSentController, { Beacon: SecurityBeacon });\n  },\n\n  recoveryQuestion: function() {\n    this.render(RecoveryQuestionController, { Beacon: SecurityBeacon });\n  },\n\n  passwordReset: function() {\n    this.render(PasswordResetController, { Beacon: SecurityBeacon });\n  },\n\n  recoveryLoading: function(token) {\n    this.render(RecoveryLoadingController, {\n      token: token,\n      Beacon: SecurityBeacon,\n    });\n  },\n\n  unlockAccount: function() {\n    this.render(UnlockAccountController);\n  },\n\n  accountUnlocked: function() {\n    this.render(AccountUnlockedController, { Beacon: SecurityBeacon });\n  },\n\n  refreshAuthState: function(token) {\n    this.render(RefreshAuthStateController, {\n      token: token,\n      Beacon: SecurityBeacon,\n    });\n  },\n\n  register: function() {\n    this.render(RegistrationController);\n  },\n\n  registerComplete: function() {\n    this.render(RegistrationCompleteController);\n  },\n\n  errorState: function() {\n    this.render(ErrorStateController, { Beacon: SecurityBeacon });\n  },\n\n  consentRequired: function() {\n    this.render(ConsentRequiredController);\n  },\n\n  adminConsentRequired: function() {\n    this.render(AdminConsentRequiredController);\n  },\n\n  enrollUser: function() {\n    this.render(EnrollUserController);\n  },\n\n  deviceActivate: function() {\n    this.render(DeviceActivateController);\n  },\n  deviceActivateComplete: function() {\n    this.render(DeviceActivateTerminalController);\n  },\n});\n"],"names":["BaseLoginRouter","extend","routes","signin","stateLessRouteHandlers","defaultAuth","window","location","hash","Enums","WIDGET_CONTAINER_ID","document","getElementById","focus","settings","get","idpDiscovery","primaryAuth","idpDiscoveryCheck","render","ForceIDPDiscoveryController","Beacon","SecurityBeacon","IDPDiscoveryController","username","PrimaryAuthController","verifyDuo","VerifyDuoController","provider","factorType","FactorBeacon","verifyPIV","VerifyPIVController","PIVBeacon","poll","PollController","verifyWebauthn","VerifyWebauthnController","VerifyWindowsHelloController","verifyU2F","VerifyU2FController","verifySAMLFactor","VerifyCustomFactorController","verifyOIDCFactor","verifyClaimsFactor","verify","factorIndex","MfaVerifyController","toUpperCase","verifyNoProvider","enrollChoices","EnrollChoicesController","enrollDuo","EnrollDuoController","enrollQuestion","EnrollQuestionController","enrollPassword","EnrollPasswordController","enrollSms","EnrollCallAndSmsController","enrollCall","enrollEmail","EnrollEmailController","enrollActivateEmail","EnrollActivateEmailController","enrollRsa","EnrollOnPremController","enrollOnPrem","enrollSymantecVip","EnrollSymantecVipController","enrollYubikey","EnrollYubikeyController","enrollSAMLFactor","EnrollCustomFactorController","enrollOIDCFactor","enrollClaimsFactor","enrollActivateClaimsFactor","EnrollActivateCustomFactorController","enrollTotpFactor","EnrollTotpController","enrollHotpFactor","EnrollHotpController","enrollWebauthn","EnrollWebauthnController","EnrollWindowsHelloController","enrollU2F","EnrollU2FController","scanBarcodeTotpFactor","BarcodeTotpController","scanBarcodePushFactor","BarcodePushController","activateTotpFactor","ActivateTotpController","manualSetupTotpFactor","ManualSetupTotpController","manualSetupPushFactor","ManualSetupPushController","activationLinkSent","EnrollmentLinkSentController","enterPasscodeInPushEnrollmentFlow","EnterPasscodePushFlowController","passwordExpired","PasswordExpiredController","customPasswordExpired","CustomPasswordExpiredController","forgotPassword","ForgotPasswordController","recoveryChallenge","RecoveryChallengeController","recoveryEmailSent","PwdResetEmailSentController","unlockEmailSent","UnlockEmailSentController","recoveryQuestion","RecoveryQuestionController","passwordReset","PasswordResetController","recoveryLoading","token","RecoveryLoadingController","unlockAccount","UnlockAccountController","accountUnlocked","AccountUnlockedController","refreshAuthState","RefreshAuthStateController","register","RegistrationController","registerComplete","RegistrationCompleteController","errorState","ErrorStateController","consentRequired","ConsentRequiredController","adminConsentRequired","AdminConsentRequiredController","enrollUser","EnrollUserController","deviceActivate","DeviceActivateController","deviceActivateComplete","DeviceActivateTerminalController"],"mappings":"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"}