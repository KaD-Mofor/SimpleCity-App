{"version":3,"file":"BaseLoginRouter.js","sources":["../../../../src/v2/BaseLoginRouter.ts"],"sourcesContent":["/* eslint max-depth: [1,4] */\n/*!\n * Copyright (c) 2020, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// BaseLoginRouter contains the more complicated router logic - rendering/\n// transition, etc. Most router changes should happen in LoginRouter (which is\n// responsible for adding new routes)\nimport { _, $, Backbone, Router, loc, BaseRouterOptions } from '@okta/courage';\nimport Settings from 'models/Settings';\nimport Bundles from 'util/Bundles';\nimport BrowserFeatures from 'util/BrowserFeatures';\nimport ColorsUtil from 'util/ColorsUtil';\nimport Enums from 'util/Enums';\nimport { ConfigError } from 'util/Errors';\nimport Logger from 'util/Logger';\nimport LanguageUtil from 'util/LanguageUtil';\nimport AuthContainer from 'v1/views/shared/AuthContainer';\nimport Header from 'v1/views/shared/Header';\nimport AppState from './models/AppState';\nimport sessionStorageHelper from './client/sessionStorageHelper';\nimport {\n  startLoginFlow,\n  handleConfiguredFlow,\n  updateAppState,\n} from './client';\n\nimport CookieUtil from 'util/CookieUtil';\nimport { formatError, LegacyIdxError, StandardApiError } from './client/formatError';\nimport { RenderError, RenderResult } from 'types';\nimport { OktaAuth, IdxResponse } from '@okta/okta-auth-js';\nimport Hooks from 'models/Hooks';\nimport IonHelper from './ion/IonResponseHelper';\n\nexport interface BaseLoginRouterOptions extends BaseRouterOptions, Backbone.RouterOptions {\n  globalSuccessFn?: (res: RenderResult) => void;\n  globalErrorFn?: (res: RenderError) => void;\n  authClient?: OktaAuth;\n  hooks: Hooks\n}\n\nclass BaseLoginRouter extends Router<Settings, BaseLoginRouterOptions> {\n  Events: Backbone.Events = Backbone.Events; // also set on prototype\n  hasControllerRendered = false;\n  settings: Settings;\n  appState: AppState;\n  hooks: Hooks;\n  header: Header;\n\n  constructor(options: BaseLoginRouterOptions) {\n    super(options);\n\n    // Create a default success and/or error handler if\n    // one is not provided.\n    if (!options.globalSuccessFn) {\n      options.globalSuccessFn = function() { /* dummy function */ };\n    }\n    if (!options.globalErrorFn) {\n      options.globalErrorFn = function(err) {\n        Logger.error(err);\n      };\n    }\n\n    this.settings = new Settings(_.omit(options, 'el', 'hooks'), { parse: true });\n\n    if (!options.el) {\n      this.settings.callGlobalError(new ConfigError(loc('error.required.el')));\n    }\n\n    $('body > div').on('click', function() {\n      // OKTA-69769 Tooltip wont close on iPhone/iPad\n      // Registering a click handler on the first div\n      // allows a tap that falls outside the tooltip\n      // to be registered as a tap by iOS\n      // and then the open tooltip will lose focus and close.\n    });\n\n    this.hooks = options.hooks;\n    this.appState = new AppState({}, {\n      settings: this.settings,\n      hooks: this.hooks\n    });\n\n    const wrapper = new AuthContainer({ appState: this.appState });\n\n    $(options.el).append(wrapper.render().$el);\n    this.el = `#${Enums.WIDGET_CONTAINER_ID}`;\n    this.header = new Header({\n      el: this.el,\n      appState: this.appState,\n      settings: this.settings,\n    });\n\n    // Hide until unitial render\n    this.hide();\n\n    this.listenTo(this.appState, 'change:deviceFingerprint', this.updateDeviceFingerprint);\n    this.listenTo(this.appState, 'restartLoginFlow', this.restartLoginFlow);\n  }\n\n  updateDeviceFingerprint() {\n    const authClient = this.settings.getAuthClient();\n    const fingerprint = this.appState.get('deviceFingerprint');\n    if (fingerprint) {\n      authClient.http.setRequestHeader('X-Device-Fingerprint', fingerprint);\n    }\n  }\n\n  async handleIdxResponseFailure(error: LegacyIdxError = { error: 'unknown', details: undefined }) {\n    // IDX errors will not call the global error handler\n    error = formatError(error);\n    await updateAppState(this.appState, error.details);\n  }\n\n  // Generic error handler for all exceptions\n  async handleError(error: LegacyIdxError | StandardApiError | Error = { error: 'unknown', details: undefined }) {\n    const formattedError = formatError({...error}); // format the error to resemble an IDX response\n    await updateAppState(this.appState, formattedError.details);\n  }\n\n  /* eslint max-statements: [2, 36], complexity: [2, 16] */\n  async render(Controller, options = {}) {\n    // If url changes then widget assumes that user's intention was to initiate a new login flow,\n    // so clear stored token to use the latest token.\n    if (sessionStorageHelper.getLastInitiatedLoginUrl() !== window.location.href) {\n      sessionStorageHelper.removeStateHandle();\n    }\n    // Since we have a wrapper view, render our wrapper and use its content\n    // element as our new el.\n    // Note: Render it here because we know dom is ready at this point\n    if (!this.header.rendered()) {\n      this.el = this.header.render().getContentEl();\n    }\n\n    // If we need to load a language (or apply custom i18n overrides), do\n    // this now and re-run render after it's finished.\n    if (!Bundles.isLoaded(this.settings.get('languageCode'))) {\n      await LanguageUtil.loadLanguage(this.appState, this.settings);\n    }\n\n    let error;\n    try {\n      let idxResp = await startLoginFlow(this.settings);\n      if (idxResp.error) {\n        await this.handleIdxResponseFailure(idxResp.error);\n      } else {\n        if (this.settings.get('flow') && !this.hasControllerRendered) {\n          idxResp = await handleConfiguredFlow(idxResp, this.settings);\n        }\n\n        // TODO: OKTA-494979 - temporary fix, remove when auth-js is upgraded to 6.6+\n        if (!idxResp.requestDidSucceed && IonHelper.isIdxSessionExpiredError(idxResp)) {\n          // clear transaction subsequent page loads do not use stale interactionHandle\n          const authClient = this.settings.getAuthClient();\n          authClient.transactionManager.clear();\n        }\n\n        await updateAppState(this.appState, idxResp);\n      }\n    } catch (exception) {\n      if (exception.is?.('terminal')) {\n        this.appState.setNonIdxError(exception);\n      } else {\n        error = exception;\n        await this.handleError(exception);\n      }\n    } finally {\n      // These settings should only be used one time, for initial render\n      this.settings.unset('stateToken');\n      this.settings.unset('proxyIdxResponse');\n    }\n\n    // Load the custom colors only on the first render\n    if (this.settings.get('colors.brand') && !ColorsUtil.isLoaded()) {\n      const colors = {\n        brand: this.settings.get('colors.brand'),\n      };\n      const cspNonce = this.settings.get('cspNonce');\n\n      ColorsUtil.addStyle(colors, cspNonce);\n    }\n\n    // Show before initial render\n    this.show();\n\n    // render Controller\n    this.unload();\n    const controllerOptions = _.extend({\n      el: this.el,\n      settings: this.settings,\n      appState: this.appState\n    }, options);\n    this.controller = new Controller(controllerOptions);\n\n    // Bubble up all controller events\n    this.listenTo(this.controller, 'all', this.trigger);\n\n    this.controller.render();\n\n    this.hasControllerRendered = true;\n\n    // This will reject the promise returned from renderEl\n    if (error) {\n      this.settings.callGlobalError(error);\n    }\n\n    // -- TODO: OKTA-244631 How to surface up the CORS error in IDX?\n    // -- The `err` object from idx.js doesn't have XHR object\n    // Global error handling for CORS enabled errors\n    // if (err.xhr && BrowserFeatures.corsIsNotEnabled(err.xhr)) {\n    //   this.settings.callGlobalError(new UnsupportedBrowserError(loc('error.enabled.cors')));\n    //   return;\n    // }\n  }\n\n  /**\n    * When \"Remember My Username\" is enabled, we save the identifier in a cookie\n    * so that the next time the user visits the SIW, the identifier field can be \n    * pre-filled with this value.\n   */\n  updateIdentifierCookie(idxResponse: IdxResponse) {\n    if (this.settings.get('features.rememberMe')) {\n      // Update the cookie with the identifier\n      const user = idxResponse?.context?.user;\n      const { identifier } = user?.value || {};\n      if (identifier) {\n        CookieUtil.setUsernameCookie(identifier);\n      }\n    } else {\n      // We remove the cookie explicitly if this feature is disabled.\n      CookieUtil.removeUsernameCookie();\n    }    \n  }\n\n  hasAuthenticationSucceeded(idxResponse: IdxResponse) {\n    // Check whether authentication has succeeded. This is done by checking the server response\n    // and seeing if either the 'success' or 'successWithInteractionCode' objects are present.\n    return idxResponse?.rawIdxState?.success || idxResponse?.rawIdxState?.successWithInteractionCode;\n  }\n\n  restartLoginFlow() {\n    // clear all transaction data and saved IDX response\n    this.settings.getAuthClient().transactionManager.clear();\n    this.appState.set('idx', undefined);\n\n    // Clear the recoveryToken, if any\n    const authClient = this.settings.getAuthClient();\n    delete authClient.options['recoveryToken'];\n    this.settings.unset('recoveryToken');\n    // clear otp (email magic link), if any\n    this.settings.unset('otp');\n\n    // remove all event listeners from current controller instance. A new instance will be created in render().\n    this.controller.stopListening();\n\n    // Re-render the widget\n    this.render(this.controller.constructor);\n  }\n\n  start() {\n    const pushState = BrowserFeatures.supportsPushState();\n    Router.prototype.start.call(this, { pushState: pushState });\n  }\n\n  hide() {\n    this.header.$el.hide();\n  }\n\n  show() {\n    this.header.$el.show();\n  }\n\n  remove() {\n    this.unload();\n    this.header.$el.remove();\n    this.stopListening(this.appState);\n    this.stopListening(this.settings);\n    Bundles.remove();\n    Backbone.history.stop();\n  }\n}\n\n// Add \"Events\" to prototype for compatibility with existing code\nBaseLoginRouter.prototype.Events = Backbone.Events;\n\nexport default BaseLoginRouter;\n"],"names":["BaseLoginRouter","Router","constructor","options","Events","Backbone","hasControllerRendered","settings","appState","hooks","header","globalSuccessFn","globalErrorFn","err","Logger","error","Settings","_","omit","parse","el","callGlobalError","ConfigError","loc","$","on","AppState","wrapper","AuthContainer","append","render","$el","Enums","WIDGET_CONTAINER_ID","Header","hide","listenTo","updateDeviceFingerprint","restartLoginFlow","authClient","getAuthClient","fingerprint","get","http","setRequestHeader","handleIdxResponseFailure","details","undefined","formatError","updateAppState","handleError","formattedError","Controller","sessionStorageHelper","getLastInitiatedLoginUrl","window","location","href","removeStateHandle","rendered","getContentEl","Bundles","isLoaded","LanguageUtil","loadLanguage","idxResp","startLoginFlow","handleConfiguredFlow","requestDidSucceed","IonHelper","isIdxSessionExpiredError","transactionManager","clear","exception","is","setNonIdxError","unset","ColorsUtil","colors","brand","cspNonce","addStyle","show","unload","controllerOptions","extend","controller","trigger","updateIdentifierCookie","idxResponse","user","context","identifier","value","CookieUtil","setUsernameCookie","removeUsernameCookie","hasAuthenticationSucceeded","rawIdxState","success","successWithInteractionCode","set","stopListening","start","pushState","BrowserFeatures","supportsPushState","prototype","call","remove","history","stop"],"mappings":"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"}