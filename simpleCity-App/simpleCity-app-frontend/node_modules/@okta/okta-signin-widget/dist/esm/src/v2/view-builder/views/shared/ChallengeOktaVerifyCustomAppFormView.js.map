{"version":3,"file":"ChallengeOktaVerifyCustomAppFormView.js","sources":["../../../../../../../src/v2/view-builder/views/shared/ChallengeOktaVerifyCustomAppFormView.js"],"sourcesContent":["// Common view for OV push and custom app.\nimport { Collection } from '@okta/courage';\nimport { BaseForm } from '../../internals';\nimport AuthenticatorVerifyOptions from '../../components/AuthenticatorVerifyOptions';\nimport { getAuthenticatorDataForVerification } from '../../utils/AuthenticatorUtil';\nimport { Body as SelectAuthenticatorVerifyViewBody } from '../SelectAuthenticatorVerifyView';\nimport { AUTHENTICATOR_KEY } from '../../../ion/RemediationConstants';\n\nconst Body = SelectAuthenticatorVerifyViewBody.extend({\n  getUISchema() {\n    // Change the UI schema to not display radios here.\n    const uiSchemas = BaseForm.prototype.getUISchema.apply(this, arguments);\n    const methodsSchema = uiSchemas.find(schema => schema.name === 'authenticator.methodType');\n\n    this._sortMethodOptionsIfDeviceKnown(methodsSchema.options);\n\n    const methodOptions = methodsSchema.options.map((option) => {\n      return Object.assign({}, option, getAuthenticatorDataForVerification({authenticatorKey:\n            this.isOV() ? AUTHENTICATOR_KEY.OV : AUTHENTICATOR_KEY.CUSTOM_APP, value: { methodType: option.value } }));\n    });\n    return [{\n      View: AuthenticatorVerifyOptions,\n      options: {\n        name: methodsSchema.name,\n        collection: new Collection(methodOptions),\n      }\n    }];\n  },\n\n  // If the `deviceKnown` attribute is true, we should put the signed_nonce method to the top of authenticator list.\n  // This is in sync with v2/ion/ui-schema/ion-object-handler.js - createOVOptions\n  _sortMethodOptionsIfDeviceKnown(methodOptions) {\n    // Check if the `deviceKnown` attribute is true\n    const deviceKnown = this.options?.currentViewState?.relatesTo?.value?.deviceKnown;\n\n    if (deviceKnown) {\n      const signedNonceIndex = methodOptions.findIndex((e) => e.value === 'signed_nonce');\n\n      if (signedNonceIndex > 0) {\n        const signedNonceModel = methodOptions[signedNonceIndex];\n\n        // Put the 'signed_nonce' option to the top of the list\n        methodOptions.splice(signedNonceIndex, 1);\n        methodOptions.unshift(signedNonceModel);\n      }\n    }\n  },\n  isOV() {\n    return this.options.appState.get('authenticatorKey') === AUTHENTICATOR_KEY.OV;\n  },\n});\n\nexport default Body;\n"],"names":["Body","SelectAuthenticatorVerifyViewBody","extend","getUISchema","uiSchemas","BaseForm","prototype","apply","arguments","methodsSchema","find","schema","name","_sortMethodOptionsIfDeviceKnown","options","methodOptions","map","option","Object","assign","getAuthenticatorDataForVerification","authenticatorKey","isOV","AUTHENTICATOR_KEY","OV","CUSTOM_APP","value","methodType","View","AuthenticatorVerifyOptions","collection","Collection","deviceKnown","currentViewState","relatesTo","signedNonceIndex","findIndex","e","signedNonceModel","splice","unshift","appState","get"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAQA,MAAMA,IAAI,GAAGC,MAAiC,CAACC,MAAM,CAAC;AACpDC,EAAAA,WAAW,EAAG,YAAA;AACZ;AACA,IAAA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,SAAS,CAACH,WAAW,CAACI,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,CAAA;AACvE,IAAA,MAAMC,aAAa,GAAGL,SAAS,CAACM,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,KAAK,0BAA0B,CAAC,CAAA;AAE1F,IAAA,IAAI,CAACC,+BAA+B,CAACJ,aAAa,CAACK,OAAO,CAAC,CAAA;IAE3D,MAAMC,aAAa,GAAGN,aAAa,CAACK,OAAO,CAACE,GAAG,CAAEC,MAAM,IAAK;MAC1D,OAAOC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEF,MAAM,EAAEG,mCAAmC,CAAC;AAACC,QAAAA,gBAAgB,EAChF,IAAI,CAACC,IAAI,EAAE,GAAGC,iBAAiB,CAACC,EAAE,GAAGD,iBAAiB,CAACE,UAAU;AAAEC,QAAAA,KAAK,EAAE;UAAEC,UAAU,EAAEV,MAAM,CAACS,KAAAA;AAAM,SAAA;AAAE,OAAC,CAAC,CAAC,CAAA;AAClH,KAAC,CAAC,CAAA;AACF,IAAA,OAAO,CAAC;AACNE,MAAAA,IAAI,EAAEC,0BAA0B;AAChCf,MAAAA,OAAO,EAAE;QACPF,IAAI,EAAEH,aAAa,CAACG,IAAI;AACxBkB,QAAAA,UAAU,EAAE,IAAIC,UAAU,CAAChB,aAAa,CAAA;AAC1C,OAAA;AACF,KAAC,CAAC,CAAA;GACH;AAED;AACA;EACAF,+BAA+B,EAAA,UAACE,aAAa,EAAE;AAAA,IAAA,IAAA,aAAA,EAAA,qBAAA,EAAA,sBAAA,EAAA,sBAAA,CAAA;AAC7C;AACA,IAAA,MAAMiB,WAAW,GAAG,CAAA,aAAA,GAAA,IAAI,CAAClB,OAAO,2EAAZ,aAAcmB,CAAAA,gBAAgB,MAA9B,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,sBAAA,GAAA,qBAAA,CAAgCC,SAAS,MAAzC,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,sBAAA,GAAA,sBAAA,CAA2CR,KAAK,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhD,uBAAkDM,WAAW,CAAA;AAEjF,IAAA,IAAIA,WAAW,EAAE;AACf,MAAA,MAAMG,gBAAgB,GAAGpB,aAAa,CAACqB,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACX,KAAK,KAAK,cAAc,CAAC,CAAA;MAEnF,IAAIS,gBAAgB,GAAG,CAAC,EAAE;AACxB,QAAA,MAAMG,gBAAgB,GAAGvB,aAAa,CAACoB,gBAAgB,CAAC,CAAA;;AAExD;AACApB,QAAAA,aAAa,CAACwB,MAAM,CAACJ,gBAAgB,EAAE,CAAC,CAAC,CAAA;AACzCpB,QAAAA,aAAa,CAACyB,OAAO,CAACF,gBAAgB,CAAC,CAAA;AACzC,OAAA;AACF,KAAA;GACD;AACDhB,EAAAA,IAAI,EAAG,YAAA;AACL,IAAA,OAAO,IAAI,CAACR,OAAO,CAAC2B,QAAQ,CAACC,GAAG,CAAC,kBAAkB,CAAC,KAAKnB,iBAAiB,CAACC,EAAE,CAAA;AAC/E,GAAA;AACF,CAAC;;;;"}