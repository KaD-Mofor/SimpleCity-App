import { loc } from '../../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';
import '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';
import '../../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';
import '../../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';
import '../../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';
import '../../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';
import '../../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';
import '../../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';
import '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';
import '../../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';
import ChallengeAuthenticatorPhoneView, { ResendView } from './ChallengeAuthenticatorPhoneView.js';
import '../../internals/BaseHeader.js';
import '../../internals/BaseFooter.js';
import BaseForm from '../../internals/BaseForm.js';
import '../../internals/BaseFormWithPolling.js';
import '../../internals/BaseOktaVerifyChallengeView.js';
import '../../internals/BaseView.js';
import '../../components/AuthenticatorEnrollOptions.js';
import '../../components/AuthenticatorVerifyOptions.js';
import '../../../../../packages/@okta/courage-dist/esm/lib/underscore/underscore-min.js';
import 'cross-fetch';
import '../../../../util/BrowserFeatures.js';
import '../../../../util/FactorUtil.js';
import '../../../../v1/views/admin-consent/ScopeList.js';
import '../../../../v1/views/consent/ScopeList.js';
import '../captcha/CaptchaView.js';

const EnrollResendView = ResendView.extend({
  // To be shown after a timeout
  className: 'phone-authenticator-enroll--warning hide',
  resendActionKey: 'currentAuthenticator-resend'
});
const Body = ChallengeAuthenticatorPhoneView.prototype.Body.extend({
  className: 'phone-authenticator-enroll',
  title: function () {
    return loc('oie.phone.enroll.title', 'login');
  },
  postRender: function () {
    BaseForm.prototype.postRender.apply(this, arguments);
    this.add(EnrollResendView, {
      selector: '.o-form-info-container',
      prepend: true
    });
  }
});
var EnrollAuthenticatorPhoneView = ChallengeAuthenticatorPhoneView.extend({
  Body: Body
});

export { EnrollAuthenticatorPhoneView as default };
//# sourceMappingURL=EnrollAuthenticatorPhoneView.js.map
