{"version":3,"file":"ChallengeOktaVerifyResendPushView.js","sources":["../../../../../../../src/v2/view-builder/views/ov/ChallengeOktaVerifyResendPushView.js"],"sourcesContent":["import { loc, createCallout } from '@okta/courage';\nimport { BaseForm } from '../../internals';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView';\n\nconst OV_NMC_FORCE_UPGRAGE_SERVER_KEY = 'oie.authenticator.app.method.push.force.upgrade.number_challenge';\nconst OV_UV_ENABLE_BIOMETRIC_SERVER_KEY = 'oie.authenticator.app.method.push.verify.enable.biometrics';\n\nconst Body = BaseForm.extend(Object.assign(\n  {\n    className: 'okta-verify-resend-push',\n\n    title() {\n      return loc('oie.okta_verify.push.title', 'login');\n    },\n\n    save() {\n      return loc('oie.okta_verify.push.resend', 'login');\n    },\n\n    showMessages() {\n      let options = {};\n      if (this.options.appState.containsMessageWithI18nKey(OV_NMC_FORCE_UPGRAGE_SERVER_KEY)) {\n        // add a title for OV force upgrade\n        options.title = loc('oie.numberchallenge.force.upgrade.title', 'login');\n      } else if (this.options.appState.containsMessageWithI18nKey(OV_UV_ENABLE_BIOMETRIC_SERVER_KEY)) {\n        // add a title for OV enable biometrics message during verification\n        options.content = null;\n        options.className = 'okta-verify-uv-callout-content';\n        options.title = loc('oie.authenticator.app.method.push.verify.enable.biometrics.title', 'login');\n        options.subtitle = loc('oie.authenticator.app.method.push.verify.enable.biometrics.description', 'login');\n        options.type = 'error';\n        options.bullets = [\n          loc('oie.authenticator.app.method.push.verify.enable.biometrics.point1', 'login'),\n          loc('oie.authenticator.app.method.push.verify.enable.biometrics.point2', 'login'),\n          loc('oie.authenticator.app.method.push.verify.enable.biometrics.point3', 'login')\n        ];\n        options = createCallout(options);\n      }\n      BaseForm.prototype.showMessages.call(this, options);\n    },\n  },\n));\n\nexport default BaseAuthenticatorView.extend({\n  Body,\n});\n"],"names":["OV_NMC_FORCE_UPGRAGE_SERVER_KEY","OV_UV_ENABLE_BIOMETRIC_SERVER_KEY","Body","BaseForm","extend","Object","assign","className","title","loc","save","showMessages","options","appState","containsMessageWithI18nKey","content","subtitle","type","bullets","createCallout","prototype","call","BaseAuthenticatorView"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAMA,+BAA+B,GAAG,kEAAkE,CAAA;AAC1G,MAAMC,iCAAiC,GAAG,4DAA4D,CAAA;AAEtG,MAAMC,IAAI,GAAGC,QAAQ,CAACC,MAAM,CAACC,MAAM,CAACC,MAAM,CACxC;AACEC,EAAAA,SAAS,EAAE,yBAAyB;AAEpCC,EAAAA,KAAK,EAAG,YAAA;AACN,IAAA,OAAOC,GAAG,CAAC,4BAA4B,EAAE,OAAO,CAAC,CAAA;GAClD;AAEDC,EAAAA,IAAI,EAAG,YAAA;AACL,IAAA,OAAOD,GAAG,CAAC,6BAA6B,EAAE,OAAO,CAAC,CAAA;GACnD;AAEDE,EAAAA,YAAY,EAAG,YAAA;IACb,IAAIC,OAAO,GAAG,EAAE,CAAA;IAChB,IAAI,IAAI,CAACA,OAAO,CAACC,QAAQ,CAACC,0BAA0B,CAACd,+BAA+B,CAAC,EAAE;AACrF;MACAY,OAAO,CAACJ,KAAK,GAAGC,GAAG,CAAC,yCAAyC,EAAE,OAAO,CAAC,CAAA;AACzE,KAAC,MAAM,IAAI,IAAI,CAACG,OAAO,CAACC,QAAQ,CAACC,0BAA0B,CAACb,iCAAiC,CAAC,EAAE;AAC9F;MACAW,OAAO,CAACG,OAAO,GAAG,IAAI,CAAA;MACtBH,OAAO,CAACL,SAAS,GAAG,gCAAgC,CAAA;MACpDK,OAAO,CAACJ,KAAK,GAAGC,GAAG,CAAC,kEAAkE,EAAE,OAAO,CAAC,CAAA;MAChGG,OAAO,CAACI,QAAQ,GAAGP,GAAG,CAAC,wEAAwE,EAAE,OAAO,CAAC,CAAA;MACzGG,OAAO,CAACK,IAAI,GAAG,OAAO,CAAA;MACtBL,OAAO,CAACM,OAAO,GAAG,CAChBT,GAAG,CAAC,mEAAmE,EAAE,OAAO,CAAC,EACjFA,GAAG,CAAC,mEAAmE,EAAE,OAAO,CAAC,EACjFA,GAAG,CAAC,mEAAmE,EAAE,OAAO,CAAC,CAClF,CAAA;AACDG,MAAAA,OAAO,GAAGO,aAAa,CAACP,OAAO,CAAC,CAAA;AAClC,KAAA;IACAT,QAAQ,CAACiB,SAAS,CAACT,YAAY,CAACU,IAAI,CAAC,IAAI,EAAET,OAAO,CAAC,CAAA;AACrD,GAAA;AACF,CAAC,CACF,CAAC,CAAA;AAEF,wCAAeU,qBAAqB,CAAClB,MAAM,CAAC;AAC1CF,EAAAA,IAAI,EAAJA,IAAAA;AACF,CAAC,CAAC;;;;"}