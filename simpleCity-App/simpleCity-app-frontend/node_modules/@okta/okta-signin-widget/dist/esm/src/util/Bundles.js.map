{"version":3,"file":"Bundles.js","sources":["../../../../src/util/Bundles.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\n\nimport config from 'config/config.json';\nimport fetch from 'cross-fetch';\nimport country from 'nls/country.json';\nimport login from 'nls/login.json';\nimport _ from 'underscore';\nimport BrowserFeatures from 'util/BrowserFeatures';\nimport Logger from 'util/Logger';\nconst STORAGE_KEY = 'osw.languages';\n\ndeclare type i18nOptions = {\n  [localeOrCountry: string]: {\n    [i18nKey: string]: string;\n  }\n}\n\ndeclare type Assets = {\n  baseUrl: string;\n  rewrite(origPath: string): string;\n}\n\n/**\n * Converts options to our internal format, which distinguishes between\n * login and country bundles.\n *\n * Example options.i18n passed in by the developer:\n * {\n *   'en': {\n *     'needhelp': 'need help override',\n *     'primaryauth.title': 'new sign in text',\n *     'country.JP' = 'Japan, Japan'\n *   }\n * }\n *\n * Parsed:\n * {\n *  'en': {\n *    'login': {\n *      'needhelp': 'need help override',\n *      'primaryauth.title': 'new sign in text',\n *    },\n *    'country': {\n *      'JP': 'Japan, Japan'\n *    }\n *  }\n * }\n */\nfunction parseOverrides(i18n) {\n  if (!i18n) {\n    return {};\n  }\n\n  const i18nWithLowerCaseKeys = {};\n\n  _.each(_.keys(i18n), function(key) {\n    i18nWithLowerCaseKeys[key.toLowerCase()] = i18n[key];\n  });\n\n  return _.mapObject(i18nWithLowerCaseKeys, function(props) {\n    const mapped = { login: {}, country: {} };\n\n    if (!_.isObject(props)) {\n      throw new Error('Invalid format for \"i18n\"');\n    }\n    _.each(props, function(val, key) {\n      const split = key.split(/^country\\./);\n\n      if (split.length > 1) {\n        mapped.country[split[1]] = val;\n      } else {\n        mapped.login[split[0]] = val;\n      }\n    });\n    return mapped;\n  });\n}\n\n// Caching: We only bundle English by default in the Sign-In Widget. Other\n// languages are loaded on demand and cached in localStorage. These languages\n// are tied to the version of the widget - when it bumps, we reset the cache.\n\nfunction getCachedLanguages() {\n  let storage = JSON.parse(localStorage.getItem(STORAGE_KEY));\n\n  if (!storage || storage.version !== config.version) {\n    storage = {\n      version: config.version,\n    };\n  }\n  return storage;\n}\n\nfunction addLanguageToCache(language, loginJson, countryJson) {\n  const current = getCachedLanguages();\n\n  current[language] = {\n    login: loginJson,\n    country: countryJson,\n  };\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(current));\n}\n\n// By default, the assets.bundleUrl is tied to the Okta CDN.\n//\n// There are two overrides available for modifying where we load the asset\n// bundles from:\n//\n// 1. assets.baseUrl\n//\n//    This is the base path the OSW pulls assets from, which in this case is\n//    the Okta CDN. Override this config option if you want to host the\n//    files on your own domain, or if you're using a new version of the\n//    widget whose language files haven't been published to the CDN yet.\n//\n// 2. assets.rewrite\n//\n//    This is a function that can be used to modify the path + fileName of\n//    the bundle we're loading, relative to the baseUrl. When called, it\n//    will pass the current path, and expect the new path to be returned.\n//    This is useful, for example, if your build process has an extra\n//    cachebusting step, i.e:\n//\n//    function rewrite(file) {\n//      // file: /labels/json/login_ja.json\n//      return file.replace('.json', '.' + md5file(file) + '.json');\n//    }\n//\n// Note: Most developers will not need to use these overrides - the default\n// is to use the Okta CDN and to use the same path + file structure the\n// widget module publishes by default.\nfunction fetchJson(bundle, language, assets) {\n  // Our bundles use _ to separate country and region, i.e:\n  // zh-CN -> zh_CN\n  const languageCode = language.replace('-', '_');\n\n  const path = assets.rewrite(encodeURI(`/labels/json/${bundle}_${languageCode}.json`));\n\n  const headers = {\n    Accept: 'application/json',\n    'Content-Type': 'text/plain',\n  };\n\n  const mode = 'no-cors';\n\n  return fetch(assets.baseUrl + path, {\n    method: 'GET',\n    headers,\n    mode,\n  })\n    .then(res => res.text())\n    .then(txt => JSON.parse(txt));\n}\n\nasync function getBundles(language, assets, supportedLanguages) {\n  // Two special cases:\n  // 1. Default language is already bundled with the widget\n  // 2. If the language is not in our config file, it means that they've\n  //    probably defined it on their own.\n  if (language === config.defaultLanguage || !_.contains(supportedLanguages, language)) {\n    return {};\n  }\n\n  //local storage does not work correctly with android web views (embeded browers)\n  //so skip the caching and just make the request to get the local info\n  const localStorageIsSupported = !BrowserFeatures.localStorageIsNotSupported();\n\n  if (localStorageIsSupported) {\n    const cached = getCachedLanguages();\n\n    if (cached[language]) {\n      return cached[language];\n    }\n  }\n\n  try {\n    const [loginJson, countryJson] = await Promise.all([\n      fetchJson('login', language, assets),\n      fetchJson('country', language, assets)\n    ]);\n    if (localStorageIsSupported) {\n      addLanguageToCache(language, loginJson, countryJson);\n    }\n    return { login: loginJson, country: countryJson };\n  } catch(_e) {\n    // If there is an error, this will default to the bundled language and\n    // we will no longer try to load the language this session.\n    Logger.warn('Unable to load language: ' + language);\n    return {};\n  }\n}\n\nexport default {\n  login: login,\n  country: country,\n  // Courage components within the sign in widget point to courage bundle to look\n  // up i18nkeys. Since we dont have courage.properties inside the sign in widget\n  // we are pointing courage bundle to login.\n  courage: login,\n\n  currentLanguage: null,\n\n  isLoaded: function(language: string): boolean {\n    return this.currentLanguage === language;\n  },\n\n  remove: function(): void {\n    this.currentLanguage = null;\n  },\n\n  loadLanguage: async function(language: string, overrides: i18nOptions, assets: Assets, supportedLanguages: string[]): Promise<void> {\n    const parsedOverrides = parseOverrides(overrides);\n    const lowerCaseLanguage = language.toLowerCase();\n    const bundles = await getBundles(language, assets, supportedLanguages);\n    // Always extend from the built in defaults in the event that some\n    // properties are not translated\n    this.login = _.extend({}, login, bundles.login);\n    this.country = _.extend({}, country, bundles.country);\n    this.courage = _.extend({}, login, bundles.login);\n    if (parsedOverrides[lowerCaseLanguage]) {\n      _.extend(this.login, parsedOverrides[lowerCaseLanguage]['login']);\n      _.extend(this.country, parsedOverrides[lowerCaseLanguage]['country']);\n      _.extend(this.courage, parsedOverrides[lowerCaseLanguage]['login']);\n    }\n    this.currentLanguage = language;\n  },\n};\n"],"names":["STORAGE_KEY","parseOverrides","i18n","i18nWithLowerCaseKeys","_","each","keys","key","toLowerCase","mapObject","props","mapped","login","country","isObject","Error","val","split","length","getCachedLanguages","storage","JSON","parse","localStorage","getItem","version","config","addLanguageToCache","language","loginJson","countryJson","current","setItem","stringify","fetchJson","bundle","assets","languageCode","replace","path","rewrite","encodeURI","headers","Accept","mode","fetch","baseUrl","method","then","res","text","txt","getBundles","supportedLanguages","defaultLanguage","contains","localStorageIsSupported","BrowserFeatures","localStorageIsNotSupported","cached","Promise","all","_e","Logger","warn","courage","currentLanguage","isLoaded","remove","loadLanguage","overrides","parsedOverrides","lowerCaseLanguage","bundles","extend"],"mappings":"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"}