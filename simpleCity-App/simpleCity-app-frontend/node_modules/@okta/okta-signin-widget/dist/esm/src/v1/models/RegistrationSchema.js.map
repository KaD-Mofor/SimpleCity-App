{"version":3,"file":"RegistrationSchema.js","sources":["../../../../../src/v1/models/RegistrationSchema.js"],"sourcesContent":["/*!\n * Copyright (c) 2017, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { _, BaseModel, internal } from '@okta/courage';\nlet { BaseSchema, SchemaProperty } = internal.models;\nconst RegistrationSchemaRegistrationSchemaPropertyCollection = SchemaProperty.Collection.extend({\n  createModelProperties: function() {\n    const modelProperties = SchemaProperty.Collection.prototype.createModelProperties.apply(this);\n\n    _.each(\n      modelProperties,\n      function(modelProperty, name) {\n        modelProperty.required = !!this.get(name).get('required');\n      },\n      this\n    );\n    return modelProperties;\n  },\n});\nexport default BaseSchema.Model.extend({\n  expand: ['schema'],\n\n  constructor: function() {\n    this.properties = new RegistrationSchemaRegistrationSchemaPropertyCollection();\n    BaseModel.apply(this, arguments);\n  },\n\n  parse: function(resp) {\n    const parseResponseData = resp => {\n      const requireFields = resp.schema.required;\n\n      if (_.isArray(requireFields)) {\n        _.each(\n          requireFields,\n          function(requireField) {\n            const field = this.properties.get(requireField);\n\n            if (field) {\n              field.set('required', true);\n            }\n          },\n          this\n        );\n      }\n\n      const fieldOrderIds = resp.schema.fieldOrder;\n\n      if (_.isArray(fieldOrderIds)) {\n        _.each(\n          fieldOrderIds,\n          function(fieldOrderId, sortOrder) {\n            const field = this.properties.get(fieldOrderId);\n\n            if (field) {\n              field.set('sortOrder', sortOrder);\n            }\n          },\n          this\n        );\n        this.properties.comparator = 'sortOrder';\n        this.properties.sort();\n      }\n      this.properties.defaultPolicyId = resp.policyId;\n      return resp;\n    };\n\n    const self = this;\n    this.settings.parseRegistrationSchema(\n      resp,\n      function(resp) {\n        if (resp.profileSchema) {\n          resp.schema = resp.profileSchema;\n          BaseSchema.Model.prototype.parse.apply(self, [resp]);\n          resp = parseResponseData(resp);\n        }\n        self.trigger('parseComplete', { properties: self.properties });\n      },\n      function(error) {\n        self.trigger('parseComplete', { properties: self.properties, error: error });\n      }\n    );\n  },\n});\n"],"names":["BaseSchema","SchemaProperty","internal","models","RegistrationSchemaRegistrationSchemaPropertyCollection","Collection","extend","createModelProperties","modelProperties","prototype","apply","_","each","modelProperty","name","required","get","Model","expand","constructor","properties","BaseModel","arguments","parse","resp","parseResponseData","requireFields","schema","isArray","requireField","field","set","fieldOrderIds","fieldOrder","fieldOrderId","sortOrder","comparator","sort","defaultPolicyId","policyId","self","settings","parseRegistrationSchema","profileSchema","trigger","error"],"mappings":"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"}