{"version":3,"file":"EnrollProfileView.js","sources":["../../../../../../src/v2/view-builder/views/EnrollProfileView.js"],"sourcesContent":["import { loc, Model, _ } from '@okta/courage';\nimport { BaseForm, BaseFooter, BaseView, createIdpButtons } from '../internals';\nimport { FORMS as RemediationForms } from '../../ion/RemediationConstants';\nimport { getPasswordComplexityDescriptionForHtmlList } from '../utils/AuthenticatorUtil';\nimport { generatePasswordPolicyHtml } from './password/PasswordPolicyUtil';\nimport signInWithIdps from './signin/SignInWithIdps';\n\nconst Body = BaseForm.extend({\n  title() {\n    if (this.options.appState.getCurrentViewState().href.endsWith('idp/idx/enroll/update')) {\n      const attributes = this.options.appState.attributes;\n      if (attributes?.uiDisplay?.label) {\n        return loc('oie.registration.form.customize.label', 'login', [attributes.uiDisplay.label]);\n      } else {\n        return loc('oie.primaryauth.submit', 'login');\n      }\n    }\n    return loc('oie.registration.form.title', 'login');\n\n  },\n\n  save() {\n    if (this.options.appState.getCurrentViewState().href.endsWith('idp/idx/enroll/update')) {\n      const attributes = this.options.appState.attributes;\n      if (attributes?.uiDisplay?.buttonLabel) {\n        return loc('oie.registration.form.customize.buttonLabel', 'login', [attributes.uiDisplay.buttonLabel]);\n      } else {\n        return loc('oie.registration.form.update.submit', 'login');\n      }\n    }\n    return loc('oie.registration.form.submit', 'login');\n\n  },\n  saveForm() {\n    // SIW customization hook for registration\n    this.settings.preRegistrationSubmit(this.model.toJSON(),\n      (postData) => {\n        this.model.attributes = {...this.model.attributes, ...this.model.parse(postData)};\n        BaseForm.prototype.saveForm.call(this, this.model);\n      },\n      (error) => this.model.trigger('error', this.model, {\n        responseJSON: error,\n      })\n    );\n  },\n  triggerAfterError(model, error) {\n    // render errors to view\n    const hasErrors = error?.responseJSON?.errorCauses\n      && Array.isArray(error.responseJSON.errorCauses);\n\n    if (hasErrors) {\n      error.responseJSON.errorCauses.forEach((err) => {\n        // only do this for invalid password for password with SSR\n        if (err.errorKey?.includes('password.passwordRequirementsNotMet')) {\n          err.errorSummary = loc('registration.error.password.passwordRequirementsNotMet', 'login');\n        } \n      });\n    }\n\n    this.options.appState.trigger('afterError', error);\n  },\n});\n\nconst Footer = BaseFooter.extend({\n  links() {\n    const links = [];\n    if (this.options.appState.hasRemediationObject(RemediationForms.SELECT_IDENTIFY)) {\n      links.push({\n        'type': 'link',\n        'label': loc('haveaccount', 'login'),\n        'name': 'back',\n        'actionPath': RemediationForms.SELECT_IDENTIFY,\n      });\n    }\n    return links;\n  }\n});\n\nexport default BaseView.extend({\n  Body,\n  Footer,\n  createModelClass(currentViewState, optionUiSchemaConfig, settings) {\n    const currentSchema = JSON.parse(JSON.stringify((currentViewState.uiSchema)));\n    let ModelClass = BaseView.prototype.createModelClass.apply(this, arguments, currentViewState);\n\n    ModelClass = ModelClass.extend({\n      toJSON: function() {\n        const modelJSON = Model.prototype.toJSON.call(this, arguments, currentViewState);\n        // delete optional attributes if they are empty and not required\n        if(modelJSON.userProfile) {\n          const uiSchema = currentViewState.uiSchema;\n          const userProfile = modelJSON.userProfile;\n          _.each(userProfile, (value, name) => {\n            if (_.isEmpty(value)) {\n              const uiSchemaProperty = uiSchema.find(schema => schema.name === `userProfile.${name}`);\n              if (!_.isUndefined(uiSchemaProperty) && !uiSchemaProperty.required) {\n                delete userProfile[name];\n              }\n            }\n          });\n        }\n        return modelJSON;\n      }\n    });\n\n    settings.parseRegistrationSchema(currentSchema,\n      (schema) => {\n        if (!_.isEqual(schema, currentViewState.uiSchema)) {\n          currentViewState.uiSchema = schema;\n          ModelClass = BaseView.prototype.createModelClass.call(this, currentViewState, optionUiSchemaConfig);\n        }\n      },\n      (error) => {\n        ModelClass = ModelClass.extend({\n          local: {\n            parseSchemaError: {\n              value: error,\n              type: 'object',\n            },\n            ...ModelClass.prototype.local\n          },\n        });\n      }\n    );\n    return ModelClass;\n  },\n  postRender() {\n    BaseView.prototype.postRender.apply(this, arguments);\n\n    const modelError = this.model.get('parseSchemaError');\n\n    if (modelError) {\n      this.model.trigger('error', this.model, {\n        responseJSON: modelError,\n      });\n    }\n\n    // Prompt for password w/ SSR if enabled (credentials object in remediation)\n    this.renderPasswordPolicySettings();\n\n    const idpButtons = createIdpButtons(this.options);\n    if (Array.isArray(idpButtons) && idpButtons.length) {\n      this._addIdpView(idpButtons);\n    }\n    \n  },\n  renderPasswordPolicySettings() {\n    // retrieve password policy from \"credentials\" object in remediation\n    const currentViewState = this.options.currentViewState.value;\n    const credentials = currentViewState.filter((obj) => { return obj.name === 'credentials'; })[0];\n\n    // if \"passcode\" is present in \"credentials\", render password rules\n    const form = credentials?.form?.value;\n    if (form && form.filter((obj) => { return obj.name === 'passcode'; })) {\n      generatePasswordPolicyHtml(this,\n        getPasswordComplexityDescriptionForHtmlList(credentials?.relatesTo?.value?.settings),\n        false);\n    }\n  },\n\n  _addIdpView(idpButtons) {\n    // We check the 'idpDisplay' option config to determine whether to render the idp buttons \n    // above or below the login fields\n    const idpDisplay = this.options.settings.get('idpDisplay');\n    const isPrimaryIdpDisplay = idpDisplay && idpDisplay.toUpperCase() === 'PRIMARY';\n\n    this.add(signInWithIdps, {\n      prepend: isPrimaryIdpDisplay,\n      selector: isPrimaryIdpDisplay ? '.o-form-fieldset-container' : '.o-form-button-bar',\n      options: {\n        idpButtons,\n        isPrimaryIdpDisplay\n      }\n    });\n  },\n});\n"],"names":["Body","BaseForm","extend","title","options","appState","getCurrentViewState","href","endsWith","attributes","uiDisplay","label","loc","save","buttonLabel","saveForm","settings","preRegistrationSubmit","model","toJSON","postData","parse","prototype","call","error","trigger","responseJSON","triggerAfterError","hasErrors","errorCauses","Array","isArray","forEach","err","errorKey","includes","errorSummary","Footer","BaseFooter","links","hasRemediationObject","RemediationForms","SELECT_IDENTIFY","push","BaseView","createModelClass","currentViewState","optionUiSchemaConfig","currentSchema","JSON","stringify","uiSchema","ModelClass","apply","arguments","modelJSON","Model","userProfile","_","each","value","name","isEmpty","uiSchemaProperty","find","schema","isUndefined","required","parseRegistrationSchema","isEqual","local","parseSchemaError","type","postRender","modelError","get","renderPasswordPolicySettings","idpButtons","createIdpButtons","length","_addIdpView","credentials","filter","obj","form","generatePasswordPolicyHtml","getPasswordComplexityDescriptionForHtmlList","relatesTo","idpDisplay","isPrimaryIdpDisplay","toUpperCase","add","signInWithIdps","prepend","selector"],"mappings":"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"}