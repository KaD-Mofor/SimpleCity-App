{"version":3,"file":"EnrollUserController.js","sources":["../../../../../src/v1/controllers/EnrollUserController.js"],"sourcesContent":["/*!\n * Copyright (c) 2019, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport EnrollUser from 'v1/models/EnrollUser';\nimport BaseLoginController from 'v1/util/BaseLoginController';\nimport EnrollUserForm from 'v1/views/enrollUser/EnrollUserForm';\nimport FooterWithBackLink from 'v1/views/shared/FooterWithBackLink';\nexport default BaseLoginController.extend({\n  className: 'enroll-user',\n  initialize: function(options) {\n    this.options = options || {};\n    // create model\n    this.model = new EnrollUser(this.options);\n  },\n  fetchInitialData: function() {\n    // If user is unauthenticated and starts enroll flow make a post call to transition state to PROFILE_REQUIRED\n    if (this.options.appState.get('isUnauthenticated')) {\n      return this.model.getEnrollFormData();\n    } else {\n      return BaseLoginController.prototype.fetchInitialData.call();\n    }\n  },\n  trapAuthResponse: function() {\n    if (this.options.appState.get('isProfileRequired')) {\n      return true;\n    }\n  },\n  postRender: function() {\n    const form = new EnrollUserForm(this.toJSON());\n\n    this.add(form);\n    this.add(new FooterWithBackLink(this.toJSON()));\n    this.addListeners();\n  },\n});\n"],"names":["BaseLoginController","extend","className","initialize","options","model","EnrollUser","fetchInitialData","appState","get","getEnrollFormData","prototype","call","trapAuthResponse","postRender","form","EnrollUserForm","toJSON","add","FooterWithBackLink","addListeners"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,2BAAeA,mBAAmB,CAACC,MAAM,CAAC;AACxCC,EAAAA,SAAS,EAAE,aAAa;EACxBC,UAAU,EAAE,UAASC,OAAO,EAAE;AAC5B,IAAA,IAAI,CAACA,OAAO,GAAGA,OAAO,IAAI,EAAE,CAAA;AAC5B;IACA,IAAI,CAACC,KAAK,GAAG,IAAIC,UAAU,CAAC,IAAI,CAACF,OAAO,CAAC,CAAA;GAC1C;AACDG,EAAAA,gBAAgB,EAAE,YAAW;AAC3B;IACA,IAAI,IAAI,CAACH,OAAO,CAACI,QAAQ,CAACC,GAAG,CAAC,mBAAmB,CAAC,EAAE;AAClD,MAAA,OAAO,IAAI,CAACJ,KAAK,CAACK,iBAAiB,EAAE,CAAA;AACvC,KAAC,MAAM;AACL,MAAA,OAAOV,mBAAmB,CAACW,SAAS,CAACJ,gBAAgB,CAACK,IAAI,EAAE,CAAA;AAC9D,KAAA;GACD;AACDC,EAAAA,gBAAgB,EAAE,YAAW;IAC3B,IAAI,IAAI,CAACT,OAAO,CAACI,QAAQ,CAACC,GAAG,CAAC,mBAAmB,CAAC,EAAE;AAClD,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;GACD;AACDK,EAAAA,UAAU,EAAE,YAAW;IACrB,MAAMC,IAAI,GAAG,IAAIC,cAAc,CAAC,IAAI,CAACC,MAAM,EAAE,CAAC,CAAA;AAE9C,IAAA,IAAI,CAACC,GAAG,CAACH,IAAI,CAAC,CAAA;IACd,IAAI,CAACG,GAAG,CAAC,IAAIC,kBAAkB,CAAC,IAAI,CAACF,MAAM,EAAE,CAAC,CAAC,CAAA;IAC/C,IAAI,CAACG,YAAY,EAAE,CAAA;AACrB,GAAA;AACF,CAAC,CAAC;;;;"}