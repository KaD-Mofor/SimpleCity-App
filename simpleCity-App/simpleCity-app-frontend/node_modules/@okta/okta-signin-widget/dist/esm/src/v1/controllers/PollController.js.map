{"version":3,"file":"PollController.js","sources":["../../../../../src/v1/controllers/PollController.js"],"sourcesContent":["/*!\n * Copyright (c) 2020, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { loc } from '@okta/courage';\nimport FormController from 'v1/util/FormController';\nimport FormType from 'v1/util/FormType';\nexport default FormController.extend({\n  className: 'poll',\n  Model: {\n    save: function() {\n      this.trigger('cancelRequest');\n      return this.appState\n        .get('transaction')\n        .cancel()\n        .then(() => {\n          this.options.appState.trigger('navigate', '');\n        })\n        .catch(() => {\n          this._stopCountDown();\n        });\n    },\n  },\n\n  Form: {\n    autoSave: true,\n    hasSavingState: false,\n    title: function() {\n      return this.title;\n    },\n    className: 'poll-controller',\n    noCancelButton: true,\n    save: loc('oform.cancel', 'login'),\n    modelEvents: {\n      cancelRequest: '_stopCountDown',\n    },\n    formChildren: [\n      FormType.View({\n        View: '<div >\\\n               <div data-se=\"poll-waiting\" class=\"hide okta-waiting-spinner\"></div>\\\n             </div>',\n      }),\n    ],\n    _checkStatus: function() {\n      // start polling request\n      this.transactionObject\n        .poll()\n        .then(resp => {\n          if (resp.data && resp.status !== 'POLL') {\n            this.options.appState.set('transaction', resp);\n            return;\n          }\n          this.$('.okta-waiting-spinner').hide();\n          let factorPollingIntervalSeconds = Math.ceil(resp.transaction.profile.refresh / 1000);\n          this._startCountDown(factorPollingIntervalSeconds);\n        })\n        .catch(() => {\n          this._stopCountDown();\n        });\n    },\n\n    _startCountDown: function(factorPollingIntervalSeconds) {\n      // start one second countdown for next poll request\n      this.countDown = setInterval(() => {\n        // update title after every second and check if countdown == 1 to poll again\n        this._updateTitle(factorPollingIntervalSeconds);\n        if (factorPollingIntervalSeconds === 0) {\n          /* when countdown hits 0\n                       - stop current poll\n                       - show spinner\n                       - check status\n                      */\n          this._stopCountDown();\n          this.$('.okta-waiting-spinner').show();\n          // start after a small delay so that the spinner does not get hidden too soon\n          this.checkStatusTimeout = setTimeout(() => {\n            this._checkStatus();\n          }, 200);\n        } else {\n          // reduce countdown after every second\n          factorPollingIntervalSeconds = factorPollingIntervalSeconds - 1;\n        }\n      }, 1000);\n    },\n\n    _updateTitle: function(factorPollingIntervalSeconds) {\n      this.title = loc('polling.title', 'login', [factorPollingIntervalSeconds]);\n      this.$el.find('.okta-form-title').text(this.title);\n    },\n\n    _stopCountDown: function() {\n      // clear countdown setInterval\n      if (this.countDown) {\n        clearInterval(this.countDown);\n      }\n      // clear checkstatus setTimeout\n      if (this.checkStatusTimeout) {\n        clearInterval(this.checkStatusTimeout);\n      }\n    },\n\n    initialize: function(options) {\n      this.transactionObject = options.appState.get('transaction');\n      this.factorPollingIntervalSeconds = Math.ceil(this.transactionObject.transaction.profile.refresh / 1000);\n      this._updateTitle(this.factorPollingIntervalSeconds);\n      this._startCountDown(this.factorPollingIntervalSeconds);\n    },\n  },\n\n  back: function() {\n    // Empty function on verify controllers to prevent users\n    // from navigating back during 'verify' using the browser's\n    // back button. The URL will still change, but the view will not\n    // More details in OKTA-135060.\n  },\n\n  remove: function() {\n    this.form._stopCountDown();\n  },\n});\n"],"names":["FormController","extend","className","Model","save","trigger","appState","get","cancel","then","options","catch","_stopCountDown","Form","autoSave","hasSavingState","title","noCancelButton","loc","modelEvents","cancelRequest","formChildren","FormType","View","_checkStatus","transactionObject","poll","resp","data","status","set","$","hide","factorPollingIntervalSeconds","Math","ceil","transaction","profile","refresh","_startCountDown","countDown","setInterval","_updateTitle","show","checkStatusTimeout","setTimeout","$el","find","text","clearInterval","initialize","back","remove","form"],"mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,qBAAeA,cAAc,CAACC,MAAM,CAAC;AACnCC,EAAAA,SAAS,EAAE,MAAM;AACjBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,YAAW;AACf,MAAA,IAAI,CAACC,OAAO,CAAC,eAAe,CAAC,CAAA;AAC7B,MAAA,OAAO,IAAI,CAACC,QAAQ,CACjBC,GAAG,CAAC,aAAa,CAAC,CAClBC,MAAM,EAAE,CACRC,IAAI,CAAC,MAAM;QACV,IAAI,CAACC,OAAO,CAACJ,QAAQ,CAACD,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAA;AAC/C,OAAC,CAAC,CACDM,KAAK,CAAC,MAAM;QACX,IAAI,CAACC,cAAc,EAAE,CAAA;AACvB,OAAC,CAAC,CAAA;AACN,KAAA;GACD;AAEDC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,IAAI;AACdC,IAAAA,cAAc,EAAE,KAAK;AACrBC,IAAAA,KAAK,EAAE,YAAW;MAChB,OAAO,IAAI,CAACA,KAAK,CAAA;KAClB;AACDd,IAAAA,SAAS,EAAE,iBAAiB;AAC5Be,IAAAA,cAAc,EAAE,IAAI;AACpBb,IAAAA,IAAI,EAAEc,GAAG,CAAC,cAAc,EAAE,OAAO,CAAC;AAClCC,IAAAA,WAAW,EAAE;AACXC,MAAAA,aAAa,EAAE,gBAAA;KAChB;AACDC,IAAAA,YAAY,EAAE,CACZC,QAAQ,CAACC,IAAI,CAAC;AACZA,MAAAA,IAAI,EAAE;AACd;AACA,oBAAA;AACM,KAAC,CAAC,CACH;AACDC,IAAAA,YAAY,EAAE,YAAW;AACvB;MACA,IAAI,CAACC,iBAAiB,CACnBC,IAAI,EAAE,CACNjB,IAAI,CAACkB,IAAI,IAAI;QACZ,IAAIA,IAAI,CAACC,IAAI,IAAID,IAAI,CAACE,MAAM,KAAK,MAAM,EAAE;UACvC,IAAI,CAACnB,OAAO,CAACJ,QAAQ,CAACwB,GAAG,CAAC,aAAa,EAAEH,IAAI,CAAC,CAAA;AAC9C,UAAA,OAAA;AACF,SAAA;AACA,QAAA,IAAI,CAACI,CAAC,CAAC,uBAAuB,CAAC,CAACC,IAAI,EAAE,CAAA;AACtC,QAAA,IAAIC,4BAA4B,GAAGC,IAAI,CAACC,IAAI,CAACR,IAAI,CAACS,WAAW,CAACC,OAAO,CAACC,OAAO,GAAG,IAAI,CAAC,CAAA;AACrF,QAAA,IAAI,CAACC,eAAe,CAACN,4BAA4B,CAAC,CAAA;AACpD,OAAC,CAAC,CACDtB,KAAK,CAAC,MAAM;QACX,IAAI,CAACC,cAAc,EAAE,CAAA;AACvB,OAAC,CAAC,CAAA;KACL;IAED2B,eAAe,EAAE,UAASN,4BAA4B,EAAE;AACtD;AACA,MAAA,IAAI,CAACO,SAAS,GAAGC,WAAW,CAAC,MAAM;AACjC;AACA,QAAA,IAAI,CAACC,YAAY,CAACT,4BAA4B,CAAC,CAAA;QAC/C,IAAIA,4BAA4B,KAAK,CAAC,EAAE;AACtC;AACV;AACA;AACA;AACA;UACU,IAAI,CAACrB,cAAc,EAAE,CAAA;AACrB,UAAA,IAAI,CAACmB,CAAC,CAAC,uBAAuB,CAAC,CAACY,IAAI,EAAE,CAAA;AACtC;AACA,UAAA,IAAI,CAACC,kBAAkB,GAAGC,UAAU,CAAC,MAAM;YACzC,IAAI,CAACrB,YAAY,EAAE,CAAA;WACpB,EAAE,GAAG,CAAC,CAAA;AACT,SAAC,MAAM;AACL;UACAS,4BAA4B,GAAGA,4BAA4B,GAAG,CAAC,CAAA;AACjE,SAAA;OACD,EAAE,IAAI,CAAC,CAAA;KACT;IAEDS,YAAY,EAAE,UAAST,4BAA4B,EAAE;AACnD,MAAA,IAAI,CAACjB,KAAK,GAAGE,GAAG,CAAC,eAAe,EAAE,OAAO,EAAE,CAACe,4BAA4B,CAAC,CAAC,CAAA;AAC1E,MAAA,IAAI,CAACa,GAAG,CAACC,IAAI,CAAC,kBAAkB,CAAC,CAACC,IAAI,CAAC,IAAI,CAAChC,KAAK,CAAC,CAAA;KACnD;AAEDJ,IAAAA,cAAc,EAAE,YAAW;AACzB;MACA,IAAI,IAAI,CAAC4B,SAAS,EAAE;AAClBS,QAAAA,aAAa,CAAC,IAAI,CAACT,SAAS,CAAC,CAAA;AAC/B,OAAA;AACA;MACA,IAAI,IAAI,CAACI,kBAAkB,EAAE;AAC3BK,QAAAA,aAAa,CAAC,IAAI,CAACL,kBAAkB,CAAC,CAAA;AACxC,OAAA;KACD;IAEDM,UAAU,EAAE,UAASxC,OAAO,EAAE;MAC5B,IAAI,CAACe,iBAAiB,GAAGf,OAAO,CAACJ,QAAQ,CAACC,GAAG,CAAC,aAAa,CAAC,CAAA;AAC5D,MAAA,IAAI,CAAC0B,4BAA4B,GAAGC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACV,iBAAiB,CAACW,WAAW,CAACC,OAAO,CAACC,OAAO,GAAG,IAAI,CAAC,CAAA;AACxG,MAAA,IAAI,CAACI,YAAY,CAAC,IAAI,CAACT,4BAA4B,CAAC,CAAA;AACpD,MAAA,IAAI,CAACM,eAAe,CAAC,IAAI,CAACN,4BAA4B,CAAC,CAAA;AACzD,KAAA;GACD;AAEDkB,EAAAA,IAAI,EAAE,YAAW;AACf;AACA;AACA;AACA;GACD;AAEDC,EAAAA,MAAM,EAAE,YAAW;AACjB,IAAA,IAAI,CAACC,IAAI,CAACzC,cAAc,EAAE,CAAA;AAC5B,GAAA;AACF,CAAC,CAAC;;;;"}