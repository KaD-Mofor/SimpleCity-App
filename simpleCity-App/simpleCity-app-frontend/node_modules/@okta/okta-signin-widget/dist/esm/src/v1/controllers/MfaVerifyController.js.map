{"version":3,"file":"MfaVerifyController.js","sources":["../../../../../src/v1/controllers/MfaVerifyController.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint complexity: [2, 21] max-statements: [2, 25] max-params: 0 */\nimport { loc, internal } from '@okta/courage';\nimport BaseLoginController from 'v1/util/BaseLoginController';\nimport EmailMagicLinkForm from 'v1/views/factor-verify/EmailMagicLinkForm';\nimport InlineTOTPForm from 'v1/views/mfa-verify/InlineTOTPForm';\nimport PassCodeForm from 'v1/views/mfa-verify/PassCodeForm';\nimport PasswordForm from 'v1/views/mfa-verify/PasswordForm';\nimport PushForm from 'v1/views/mfa-verify/PushForm';\nimport SecurityQuestionForm from 'v1/views/mfa-verify/SecurityQuestionForm';\nimport SendEmailAndVerifyCodeForm from 'v1/views/mfa-verify/SendEmailAndVerifyCodeForm';\nimport TOTPForm from 'v1/views/mfa-verify/TOTPForm';\nimport YubikeyForm from 'v1/views/mfa-verify/YubikeyForm';\nimport FooterMFA from 'v1/views/shared/FooterMFA';\nlet { CheckBox } = internal.views.forms.inputs;\nexport default BaseLoginController.extend({\n  className: 'mfa-verify',\n\n  initialize: function(options) {\n    const factorType = options.factorType;\n    let View;\n\n    switch (factorType) {\n    case 'question':\n      View = SecurityQuestionForm;\n      break;\n    case 'email':\n      if (this.options.appState.get('isIdxStateToken')) {\n        View = EmailMagicLinkForm;\n      } else {\n        View = SendEmailAndVerifyCodeForm;\n      }\n      break;\n    case 'sms':\n    case 'call':\n      View = PassCodeForm;\n      break;\n    case 'token':\n    case 'token:software:totp':\n    case 'token:hotp':\n      View = TOTPForm;\n      break;\n    case 'token:hardware':\n      View = YubikeyForm;\n      break;\n    case 'push':\n      View = PushForm;\n      break;\n    case 'password':\n      View = PasswordForm;\n      break;\n    default:\n      throw new Error('Unrecognized factor type');\n    }\n\n    this.model = this.findModel(factorType, options);\n    if (!this.model) {\n      // TODO: recover from this more gracefully - probably to redirect\n      // to default factor\n      throw new Error('Unrecognized factor/provider');\n    }\n\n    this.addListeners();\n    this.add(new View(this.toJSON()));\n\n    // If Okta Verify Push and Okta Verify totp are both enabled,\n    // then we show Push first, and totp is the \"backup\" factor,\n    // which is rendered in an additional InlineTOTPForm\n    if (factorType === 'push' && this.model.get('isOktaFactor')) {\n      if (this.model.get('backupFactor')) {\n        this.inlineTotpForm = this.add(InlineTOTPForm, {\n          options: { model: this.model.get('backupFactor') },\n        }).last();\n      }\n\n      if (this.settings.get('features.autoPush')) {\n        this.autoPushCheckBox = this.add(CheckBox, {\n          options: {\n            model: this.model,\n            name: 'autoPush',\n            placeholder: loc('autoPush', 'login'),\n            label: false,\n            'label-top': false,\n            className: 'margin-btm-0',\n          },\n        }).last();\n      }\n\n      // Remember Device checkbox resides outside of the Push and TOTP forms.\n      if (this.options.appState.get('allowRememberDevice')) {\n        this.rememberDeviceCheckbox = this.add(CheckBox, {\n          options: {\n            model: this.model,\n            name: 'rememberDevice',\n            placeholder: this.options.appState.get('rememberDeviceLabel'),\n            label: false,\n            'label-top': true,\n            className: 'margin-btm-0',\n          },\n        }).last();\n      }\n      // Set rememberDevice on the backup factor (totp) if available\n      if (this.model.get('backupFactor')) {\n        this.listenTo(this.model, 'change:rememberDevice', function(model, rememberDevice) {\n          model.get('backupFactor').set('rememberDevice', rememberDevice);\n        });\n      }\n    }\n\n    this.listenTo(this.options.appState, 'change:isWaitingForNumberChallenge', function(\n      state,\n      isWaitingForNumberChallenge\n    ) {\n      if (isWaitingForNumberChallenge || this.options.appState.get('lastAuthResponse').status === 'SUCCESS') {\n        this.autoPushCheckBox && this.autoPushCheckBox.$el.hide();\n        this.rememberDeviceCheckbox && this.rememberDeviceCheckbox.$el.hide();\n        this.inlineTotpForm && this.inlineTotpForm.$el.hide();\n      } else {\n        this.autoPushCheckBox && this.autoPushCheckBox.$el.show();\n        this.rememberDeviceCheckbox && this.rememberDeviceCheckbox.$el.show();\n        this.inlineTotpForm && this.inlineTotpForm.$el.show();\n      }\n    });\n\n    this.add(new FooterMFA(this.toJSON()));\n  },\n\n  findModel: function(factorType, options) {\n    const factors = options.appState.get('factors');\n    const provider = options.provider;\n    const factorIndex = options.factorIndex;\n\n    if (!provider) {\n      return factors.findWhere({ factorType: factorType, isFactorTypeVerification: true });\n    } else if (factors.hasMultipleFactorsOfSameType(factorType) && factorIndex) {\n      return factors.getFactorByTypeAndIndex(factorType, factorIndex);\n    } else {\n      return factors.findWhere({ provider: provider, factorType: factorType });\n    }\n  },\n\n  trapAuthResponse: function() {\n    if (\n      (this.options.appState.get('isMfaRequired') && this.options.appState.get('trapMfaRequiredResponse')) ||\n      this.options.appState.get('isMfaChallenge')\n    ) {\n      this.options.appState.set('trapMfaRequiredResponse', false);\n      return true;\n    }\n    return false;\n  },\n\n  back: function() {\n    // Empty function on verify controllers to prevent users\n    // from navigating back during 'verify' using the browser's\n    // back button. The URL will still change, but the view will not\n    // More details in OKTA-135060.\n  },\n});\n"],"names":["CheckBox","internal","views","forms","inputs","BaseLoginController","extend","className","initialize","options","factorType","View","SecurityQuestionForm","appState","get","EmailMagicLinkForm","SendEmailAndVerifyCodeForm","PassCodeForm","TOTPForm","YubikeyForm","PushForm","PasswordForm","Error","model","findModel","addListeners","add","toJSON","inlineTotpForm","InlineTOTPForm","last","settings","autoPushCheckBox","name","placeholder","loc","label","rememberDeviceCheckbox","listenTo","rememberDevice","set","state","isWaitingForNumberChallenge","status","$el","hide","show","FooterMFA","factors","provider","factorIndex","findWhere","isFactorTypeVerification","hasMultipleFactorsOfSameType","getFactorByTypeAndIndex","trapAuthResponse","back"],"mappings":"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"}