{"version":3,"file":"EnrollActivateEmailController.js","sources":["../../../../../src/v1/controllers/EnrollActivateEmailController.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { _, loc, View } from '@okta/courage';\nimport hbs from '@okta/handlebars-inline-precompile';\nimport FormController from 'v1/util/FormController';\nimport FormType from 'v1/util/FormType';\nimport ResendEmailView from 'v1/views/ResendEmailView';\nimport Footer from 'v1/views/enroll-factors/Footer';\n\nconst Model = {\n  props: {\n    passCode: 'string',\n  },\n\n  resend: function() {\n    this.trigger('form:clear-errors');\n    return this.doTransaction(function(transaction) {\n      // authn support multiple `resend` hence has to specify name.\n      return transaction.resend('email');\n    });\n  },\n\n  save: function() {\n    this.trigger('save');\n    const formData = this.toJSON();\n    return this.doTransaction(function(transaction) {\n      return transaction.activate(formData);\n    });\n  },\n};\n\nconst Form = function() {\n  return {\n    title: _.partial(loc, 'email.enroll.title', 'login'),\n    noButtonBar: false,\n    autoSave: true,\n    save: _.partial(loc, 'oform.verify', 'login'), // TODO: deprecated by mfa.challenge.verify\n    formChildren: [\n      // message\n      FormType.View({\n        View: View.extend({\n          className: 'enroll-activate-email-content',\n          attributes: {\n            'data-se': 'enroll-activate-email-content',\n          },\n\n          // Why use `{{{` for the description?\n          // - factorEmail is actually an HTML fragment which\n          //   is created via another handlebar template and used for bold the email address.\n          template: hbs('{{{i18n code=\"email.mfa.email.sent.description\" bundle=\"login\" arguments=\"factorEmail\"}}}'),\n\n          getTemplateData: function() {\n            const factor = this.options.appState.get('factor');\n            const factorEmailVal = factor && factor.profile ? factor.profile.email : '';\n            const factorEmail = hbs('<span class=\"mask-email\">{{email}}</span>')({ email: factorEmailVal });\n            return {\n              factorEmail,\n            };\n          },\n        }),\n      }),\n      // send again callout message and link button\n      FormType.View({\n        View: ResendEmailView,\n      }),\n      // passcode input\n      FormType.Input({\n        label: loc('email.code.label', 'login'),\n        'label-top': true,\n        name: 'passCode',\n        type: 'text',\n        wide: true,\n      }),\n    ],\n  };\n};\n\nexport default FormController.extend({\n  className: 'enroll-activate-email',\n\n  Model: Model,\n\n  Form: Form,\n\n  Footer: Footer,\n});\n"],"names":["Model","props","passCode","resend","trigger","doTransaction","transaction","save","formData","toJSON","activate","Form","title","_","partial","loc","noButtonBar","autoSave","formChildren","FormType","View","extend","className","attributes","template","getTemplateData","factor","options","appState","get","factorEmailVal","profile","email","factorEmail","ResendEmailView","Input","label","name","type","wide","FormController","Footer"],"mappings":"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"}