{"version":3,"file":"i18nUtils.js","sources":["../../../../../src/v2/ion/i18nUtils.js"],"sourcesContent":["/* eslint-disable max-len */\n/* eslint max-statements: [2, 25], complexity: [2, 15] */\n\n/*!\n * Copyright (c) 2020, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport Bundles from 'util/Bundles';\nimport Logger from 'util/Logger';\nimport { loc } from '../../util/loc';\nimport { getAuthenticatorDisplayName } from '../view-builder/utils/AuthenticatorUtil';\nimport { FORMS, AUTHENTICATOR_KEY } from './RemediationConstants';\nimport { I18N_BASE_ATTRIBUTE_ENROLL_PROFILE_MAPPINGS } from '../view-builder/views/enroll-profile/i18nBaseAttributeMappings';\n\nconst WEBAUTHN_API_GENERIC_ERROR_KEY = 'authfactor.webauthn.error';\n\nconst SECURITY_QUESTION_PREFIXES = [\n  'enroll-authenticator.security_question.credentials.questionKey.',\n  'challenge-authenticator.security_question.credentials.questionKey.',\n];\n\nconst I18N_OVERRIDE_MAPPINGS = {\n  'identify.identifier': 'primaryauth.username.placeholder',\n  'select-authenticator-unlock-account.identifier': 'primaryauth.username.placeholder',\n  'identify.credentials.passcode': 'primaryauth.password.placeholder',\n  'identify.rememberMe': 'oie.remember',\n  'enroll-profile.userProfile.rememberMe': 'oie.remember',\n  \n  'identify-recovery.identifier': 'password.forgot.email.or.username.placeholder',\n\n  'select-authenticator-enroll.authenticator.duo': 'factor.duo',\n  'select-authenticator-enroll.authenticator.google_otp': 'oie.google_authenticator.label',\n  'select-authenticator-enroll.authenticator.okta_email': 'oie.email.label',\n  'select-authenticator-enroll.authenticator.okta_password': 'oie.password.label',\n  'select-authenticator-enroll.authenticator.okta_verify': 'oie.okta_verify.label',\n  'select-authenticator-enroll.authenticator.phone_number': 'oie.phone.label',\n  'select-authenticator-enroll.authenticator.rsa_token': 'factor.totpHard.rsaSecurId',\n  'select-authenticator-enroll.authenticator.security_question': 'oie.security.question.label',\n  'select-authenticator-enroll.authenticator.symantec_vip': 'factor.totpHard.symantecVip',\n  'select-authenticator-enroll.authenticator.webauthn': 'oie.webauthn.label',\n  'select-authenticator-enroll.authenticator.yubikey_token': 'oie.yubikey.label',\n\n  'select-authenticator-authenticate.authenticator.duo': 'factor.duo',\n  'select-authenticator-authenticate.authenticator.google_otp': 'oie.google_authenticator.label',\n  'select-authenticator-authenticate.authenticator.okta_email': 'oie.email.label',\n  'select-authenticator-authenticate.authenticator.okta_password': 'oie.password.label',\n  'select-authenticator-authenticate.authenticator.okta_verify.push': 'oie.okta_verify.push.title',\n  'select-authenticator-authenticate.authenticator.okta_verify.signed_nonce': 'oie.okta_verify.signed_nonce.label',\n  'select-authenticator-authenticate.authenticator.okta_verify.totp': 'oie.okta_verify.totp.title',\n  'select-authenticator-authenticate.authenticator.phone_number': 'oie.phone.label',\n  'select-authenticator-authenticate.authenticator.rsa_token': 'factor.totpHard.rsaSecurId',\n  'select-authenticator-authenticate.authenticator.security_question': 'oie.security.question.label',\n  'select-authenticator-authenticate.authenticator.symantec_vip': 'factor.totpHard.symantecVip',\n  'select-authenticator-authenticate.authenticator.webauthn': 'oie.webauthn.label',\n  'select-authenticator-authenticate.authenticator.yubikey_token': 'oie.yubikey.label',\n  'select-authenticator-authenticate.authenticator.custom_app': 'oie.custom.app.authenticator.title',\n\n  'select-authenticator-unlock-account.authenticator.okta_email': 'oie.email.label',\n  'select-authenticator-unlock-account.authenticator.phone_number': 'oie.phone.label',\n  'select-authenticator-unlock-account.authenticator.okta_verify.push': 'oie.okta_verify.push.title',\n\n  'authenticator-verification-data.okta_verify.authenticator.methodType.signed_nonce':\n    'oie.okta_verify.signed_nonce.label',\n  'authenticator-verification-data.okta_verify.authenticator.methodType.push': 'oie.okta_verify.push.title',\n  'authenticator-verification-data.okta_verify.authenticator.methodType.totp': 'oie.okta_verify.totp.title',\n\n  'authenticator-enrollment-data.phone_number.authenticator.phoneNumber': 'mfa.phoneNumber.placeholder',\n  'authenticator-enrollment-data.phone_number.authenticator.methodType.sms': 'oie.phone.enroll.sms.label',\n  'authenticator-enrollment-data.phone_number.authenticator.methodType.voice': 'oie.phone.enroll.voice.label',\n\n  'enroll-authenticator.okta_password.credentials.passcode': 'oie.password.passwordLabel',\n  'enroll-authenticator.okta_email.credentials.passcode': 'mfa.challenge.enterCode.placeholder',\n  'enroll-authenticator.phone_number.credentials.passcode': 'mfa.challenge.enterCode.placeholder',\n  'enroll-authenticator.security_question.sub_schema_local_credentials.0': 'oie.security.question.questionKey.label',\n  'enroll-authenticator.security_question.sub_schema_local_credentials.1': 'oie.security.question.createQuestion.label',\n  'enroll-authenticator.security_question.credentials.answer': 'mfa.challenge.answer.placeholder',\n  'enroll-authenticator.security_question.credentials.question': 'oie.security.question.createQuestion.label',\n  'enroll-authenticator.security_question.credentials.questionKey': 'oie.security.question.questionKey.label',\n  'enroll-authenticator.google_otp.credentials.passcode': 'oie.google_authenticator.otp.enterCodeText',\n  'enroll-authenticator.onprem_mfa.credentials.clientData': 'enroll.onprem.username.placeholder',\n  'enroll-authenticator.onprem_mfa.credentials.passcode': 'enroll.onprem.passcode.placeholder',\n  'enroll-authenticator.rsa_token.credentials.clientData': 'enroll.onprem.username.placeholder',\n  'enroll-authenticator.rsa_token.credentials.passcode': 'enroll.onprem.passcode.placeholder',\n  'enroll-authenticator.symantec_vip.credentials.credentialId': 'enroll.symantecVip.credentialId.placeholder',\n  'enroll-authenticator.symantec_vip.credentials.passcode': 'enroll.symantecVip.passcode1.placeholder',\n  'enroll-authenticator.symantec_vip.credentials.nextPasscode': 'enroll.symantecVip.passcode2.placeholder',\n  'enroll-authenticator.yubikey_token.credentials.passcode': 'oie.yubikey.passcode.label',\n\n  'enrollment-channel-data.email': 'oie.enroll.okta_verify.channel.email.label',\n  'enrollment-channel-data.phoneNumber': 'mfa.phoneNumber.placeholder',\n\n  'select-enrollment-channel.authenticator.channel.qrcode': 'oie.enroll.okta_verify.select.channel.qrcode.label',\n  'select-enrollment-channel.authenticator.channel.email': 'oie.enroll.okta_verify.select.channel.email.label',\n  'select-enrollment-channel.authenticator.channel.sms': 'oie.enroll.okta_verify.select.channel.sms.label',\n\n  'challenge-authenticator.okta_email.credentials.passcode': 'mfa.challenge.enterCode.placeholder',\n  'challenge-authenticator.okta_password.credentials.passcode': 'mfa.challenge.password.placeholder',\n  'challenge-authenticator.phone_number.credentials.passcode': 'mfa.challenge.enterCode.placeholder',\n  'challenge-authenticator.security_question.credentials.answer': 'mfa.challenge.answer.placeholder',\n  'challenge-authenticator.okta_verify.credentials.totp': 'oie.okta_verify.totp.enterCodeText',\n  'challenge-authenticator.google_otp.credentials.passcode': 'oie.google_authenticator.otp.enterCodeText',\n  'challenge-authenticator.onprem_mfa.credentials.passcode': 'mfa.challenge.enterCode.placeholder',\n  'challenge-authenticator.rsa_token.credentials.passcode': 'mfa.challenge.enterCode.placeholder',\n  'challenge-authenticator.custom_otp.credentials.passcode': 'oie.custom_otp.verify.passcode.label',\n  'challenge-authenticator.symantec_vip.credentials.passcode': 'oie.symantecVip.verify.passcode.label',\n  'challenge-authenticator.yubikey_token.credentials.passcode': 'oie.yubikey.passcode.label',\n  'challenge-authenticator.credentials.passcode': 'oie.password.label',\n\n  'reset-authenticator.okta_password.credentials.passcode': 'oie.password.newPasswordLabel',\n  'reset-authenticator.okta_password.confirmPassword': 'oie.password.confirmPasswordLabel',\n  'reset-authenticator.okta_password.credentials.revokeSessions': 'password.reset.revokeSessions',\n  'reenroll-authenticator.okta_password.credentials.passcode': 'oie.password.newPasswordLabel',\n  'reenroll-authenticator.okta_password.confirmPassword': 'oie.password.confirmPasswordLabel',\n  'reenroll-authenticator.okta_password.credentials.revokeSessions': 'password.reset.revokeSessions',\n  'reenroll-authenticator-warning.okta_password.credentials.passcode': 'oie.password.newPasswordLabel',\n  'reenroll-authenticator-warning.okta_password.confirmPassword': 'oie.password.confirmPasswordLabel',\n  'reenroll-authenticator-warning.okta_password.credentials.revokeSessions': 'password.reset.revokeSessions',\n  'enroll-authenticator.okta_password.confirmPassword': 'oie.password.confirmPasswordLabel',\n  'enroll-authenticator.okta_password.credentials.revokeSessions': 'password.reset.revokeSessions',\n  'incorrectPassword': 'oie.password.incorrect.message',\n\n  'profile-update.userProfile.secondEmail': 'oie.user.profile.secondary.email',\n\n  'user-code.userCode': 'device.code.activate.label',\n\n  // Remap authn API errors to OIE\n  'api.authn.poll.error.push_rejected': 'oktaverify.rejected',\n\n  // Remap duo API errors to OIE\n  'oie.authenticator.duo.method.duo.verification_timeout': 'oie.authenticator.duo.error',\n  'oie.authenticator.duo.method.duo.verification_failed': 'oie.authenticator.duo.error',\n\n  'idx.email.verification.required': 'registration.complete.confirm.text',\n  'tooManyRequests': 'oie.tooManyRequests',\n  'api.users.auth.error.POST_PASSWORD_UPDATE_AUTH_FAILURE': 'oie.post.password.update.auth.failure.error',\n  'security.access_denied': 'errors.E0000006',\n  'E0000009': 'errors.E0000009',\n  'E0000020': 'errors.E0000020',\n  'api.factors.error.sms.invalid_phone': 'oie.phone.invalid',\n  'app.ldap.password.reset.failed': 'errors.E0000017',\n  'oie.selfservice.unlock_user.challenge.failed.permissions': 'errors.E0000006',\n  'core.auth.factor.signedNonce.error.invalidEnrollment': 'core.auth.factor.signedNonce.error',\n  'core.auth.factor.signedNonce.error.invalidFactor': 'core.auth.factor.signedNonce.error',\n  'core.auth.factor.signedNonce.error.deletedDevice': 'core.auth.factor.signedNonce.error',\n  'core.auth.factor.signedNonce.error.invalidDeviceStatus': 'core.auth.factor.signedNonce.error.invalidDevice',\n\n  // re-map autoPush: \"Send push automatically\"\n  'challenge-poll.custom_app.autoChallenge': 'autoPush', // authenticator-verification-custom-app-push-autochallenge\n  'challenge-poll.okta_verify.autoChallenge': 'autoPush', // authenticator-verification-okta-verify-push-autoChallenge-on\n  'authenticator-verification-data.authenticator.autoChallenge': 'autoPush', // authenticator-verification-data-okta-verify-push-autoChallenge-off.json\n  'authenticator-verification-data.okta_verify.authenticator.autoChallenge': 'autoPush',\n  'authenticator-verification-data.custom_app.authenticator.autoChallenge': 'autoPush',\n  \n  // Existing overrides\n  ...I18N_BASE_ATTRIBUTE_ENROLL_PROFILE_MAPPINGS, //enroll-profile strings\n};\n\nconst I18N_PARAMS_MAPPING = {\n  [FORMS.ENROLL_AUTHENTICATOR]: {\n    [AUTHENTICATOR_KEY.ON_PREM]: {\n      getParam: getAuthenticatorDisplayName,\n    },\n    [AUTHENTICATOR_KEY.RSA]: {\n      getParam: getAuthenticatorDisplayName,\n    },\n  },\n};\n\n/**\n * For i18n keys that require string interpolation using values from \"params\".\n * {baseKey} : {params}\n */\nconst I18N_OVERRIDE_WITH_PARAMS_MAP = {\n  'registration.error.invalidLoginEmail': {\n    Email: 'Email',\n  },\n  'registration.error.doesNotMatchPattern': {\n    Email: 'Email',\n  },\n  'registration.error.notUniqueWithinOrg': {\n    Email: 'Email',\n  },\n};\n\n/**\n * For messages that need to be interpolated with param values.\n *\n * Enumerate each possible param interpolation and hardcode that into properties file.\n * This is to ensure proper translation.\n *\n * Example - a known param:\n *\n * input =\n *  \"i18n\": {\n      \"key\": \"registration.error.doesNotMatchPattern\",\n      \"params\": [\n        \"Email\"\n      ]\n    }\n * output = registration.error.doesNotMatchPattern.Email\n *\n * Example - an unknown param:\n *\n * input =\n *  \"i18n\": {\n      \"key\": \"registration.error.doesNotMatchPattern\",\n      \"params\": [\n        \"Custom Property\"\n      ]\n    }\n * output = registration.error.doesNotMatchPattern.custom\n *\n * @param {String} key\n * @param {String} param\n * @returns {String}\n */\nconst getI8nKeyUsingParams = (key, param) => {\n  let i18nKey = key;\n\n  if (I18N_OVERRIDE_WITH_PARAMS_MAP[i18nKey][param]) {\n    i18nKey += `.${param}`;\n  } else {\n    i18nKey += '.custom';\n  }\n  return i18nKey;\n};\n\nconst getI18NParams = (remediation, authenticatorKey) => {\n  const params = [];\n  const formName = remediation.name;\n  if (I18N_PARAMS_MAPPING[formName] &&\n    I18N_PARAMS_MAPPING[formName][authenticatorKey]) {\n    const config = I18N_PARAMS_MAPPING[formName][authenticatorKey];\n    const param = config.getParam(remediation);\n    params.push(param);\n  }\n  return params;\n};\n\nconst getI18nKey = (i18nPath) => {\n  let i18nKey;\n  // Extract security question value from i18nPath\n  SECURITY_QUESTION_PREFIXES.forEach(prefix => {\n    if (i18nPath.indexOf(prefix) === 0) {\n      const securityQuestionValue = i18nPath.replace(prefix, '');\n      i18nKey = `security.${securityQuestionValue}`;\n    }\n  });\n\n  if (I18N_OVERRIDE_MAPPINGS[i18nPath]) {\n    i18nKey = I18N_OVERRIDE_MAPPINGS[i18nPath];\n  }\n\n  if (i18nKey && !Bundles.login[i18nKey]) {\n    Logger.warn(`expect i18n key ${i18nKey} for ${i18nPath} but not found in 'login' bundle.`);\n    i18nKey = null;\n  }\n\n  return i18nKey;\n};\n\nconst doesI18NKeyExist = (i18nKey) => {\n  return !!Bundles.login[i18nKey];\n};\n\n/**\n * Find i18n value using {@code i18nPath} if it exists.\n * Otherwise return {@code defaultValue}.\n *\n * @param {string} i18nPath\n * @param {string} defaultValue\n * @param {string[]} params\n */\nconst getI18NValue = (i18nPath, defaultValue, params = []) => {\n  const i18nKey = getI18nKey(i18nPath);\n  if (i18nKey) {\n    return loc(i18nKey, 'login', params);\n  } else {\n    Logger.warn(`Avoid rendering unlocalized text sent from the API: ${defaultValue}`);\n    return defaultValue;\n  }\n};\n\nconst isWebAuthnAPIError = (i18nKey) => i18nKey.startsWith(WEBAUTHN_API_GENERIC_ERROR_KEY);\n\n/**\n * @typedef {Object} Message\n * @property {string} message\n * @property {Object=} i18n\n * @property {string} i18n.key\n * @property {string[]} i18n.params\n */\n/**\n * - If `message.i18n.key` exists and has a value in 'login.properties'\n *   through the given key or via I18N_OVERRIDE_MAPPINGS, return the value.\n *\n * - returns `message.message` otherwise\n *\n * @param {Message} message\n */\nconst getMessage = (message) => {\n  if (message.i18n?.key) {\n    let i18nKey = message.i18n.key;\n    let i18nParams = message.i18n.params || [];\n\n    // TODO - remove this block once API fix is done - OKTA-398080\n    // Sometimes API sends params: [\"\"] an array with empty string.\n    // example - error-authenticator-enroll-password-common mock\n    if (i18nParams.length === 1 && i18nParams[0] === '') {\n      i18nParams = [];\n    }\n\n    if (I18N_OVERRIDE_MAPPINGS[message.i18n?.key]) {\n      i18nKey = I18N_OVERRIDE_MAPPINGS[message.i18n?.key];\n    } else if (I18N_OVERRIDE_WITH_PARAMS_MAP[i18nKey]) {\n      const param = message.i18n.params?.[0];\n      i18nKey = getI8nKeyUsingParams(i18nKey, param);\n      i18nParams = i18nKey.endsWith('custom') ? [param] : [];\n    }\n\n    if (Bundles.login[i18nKey]) {\n      Logger.info(`Override messages using i18n key ${i18nKey}`);\n      // expect user config i18n properly.\n      // e.g. the i18n value shall have placeholders like `{0}`, when params is not empty.\n      return loc(i18nKey, 'login', i18nParams);\n    }\n\n    if (isWebAuthnAPIError(i18nKey)) {\n      // The WebAuthn api error doesn't make much sense to a typical end user, but useful for developer.\n      // So keep the api message in response, but show a generic error message on UI.\n      return loc(WEBAUTHN_API_GENERIC_ERROR_KEY, 'login');\n    }\n  }\n\n  Logger.warn(`Avoid rendering unlocalized text sent from the API: ${message.message}`);\n  return message.message;\n};\n\n/**\n * @param {Object} error\n */\nconst getMessageFromBrowserError = (error) => {\n  if (error.name) {\n    const key = `oie.browser.error.${error.name}`;\n    if (Bundles.login[key]) {\n      Logger.info(`Override messages using i18n key ${key}`);\n      // expect user config i18n properly.\n      return loc(key, 'login');\n    }\n  }\n  return error.message;\n};\n\n/**\n * - iff `message.i18n.key` exists return the key.\n *\n * @param {Message} message\n */\nconst getMessageKey = (message) => {\n  return message?.i18n?.key || '';\n};\n\n/**\n * Has this i18n key been overridden for customization?\n * @param {String} i18nKey\n * @param {Object} settings\n * @returns Boolean\n */\nconst isCustomizedI18nKey = (i18nKey, settings) => {\n  const language = settings.get('languageCode');\n  const i18n = settings.get('i18n');\n  const customizedProperty = i18n && i18n[language] && i18n[language][i18nKey];\n  return !!customizedProperty;\n};\n\nexport {\n  getMessage,\n  getMessageKey,\n  getI18NParams,\n  getI18nKey,\n  getI18NValue,\n  doesI18NKeyExist,\n  isCustomizedI18nKey,\n  getMessageFromBrowserError\n};\n"],"names":["WEBAUTHN_API_GENERIC_ERROR_KEY","SECURITY_QUESTION_PREFIXES","I18N_OVERRIDE_MAPPINGS","I18N_BASE_ATTRIBUTE_ENROLL_PROFILE_MAPPINGS","I18N_PARAMS_MAPPING","FORMS","ENROLL_AUTHENTICATOR","AUTHENTICATOR_KEY","ON_PREM","getParam","getAuthenticatorDisplayName","RSA","I18N_OVERRIDE_WITH_PARAMS_MAP","Email","getI8nKeyUsingParams","key","param","i18nKey","getI18NParams","remediation","authenticatorKey","params","formName","name","config","push","getI18nKey","i18nPath","forEach","prefix","indexOf","securityQuestionValue","replace","Bundles","login","Logger","warn","doesI18NKeyExist","getI18NValue","defaultValue","loc","isWebAuthnAPIError","startsWith","getMessage","message","i18n","i18nParams","length","endsWith","info","getMessageFromBrowserError","error","getMessageKey","isCustomizedI18nKey","settings","language","get","customizedProperty"],"mappings":"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"}