{"version":3,"file":"DeviceFingerprinting.js","sources":["../../../../../../src/v2/view-builder/utils/DeviceFingerprinting.js"],"sourcesContent":["/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// TODO: Use AuthJS for device fingerprinting: OKTA-418160\nimport { $ } from '@okta/courage';\n\nfunction getUserAgent() {\n  return navigator.userAgent;\n}\n\nfunction isWindowsPhone(userAgent) {\n  return userAgent.match(/windows phone|iemobile|wpdesktop/i);\n}\n\nexport default {\n  isMessageFromCorrectSource($iframe, event) {\n    return event.source === $iframe[0].contentWindow;\n  },\n\n  // NOTE: This utility is similar to the DeviceFingerprint.js file used for V1 authentication flows.\n  generateDeviceFingerprint(fingerprintData) {\n    return new Promise((resolve, reject) => {\n      const userAgent = getUserAgent();\n      if (!userAgent) {\n        return reject('user agent is not defined');\n      } else if (isWindowsPhone(userAgent)) {\n        return reject('device fingerprint is not supported on Windows phones');\n      }\n\n      let $iframe;\n      let iFrameTimeout;\n      const self = this; // Needed for mocking\n\n      function removeIframe() {\n        $iframe.off();\n        $iframe.remove();\n        window.removeEventListener('message', onMessageReceivedFromOkta, false);\n      }\n\n      function handleError(reason) {\n        removeIframe();\n        reject(reason);\n      }\n\n      function onMessageReceivedFromOkta(event) {\n        if (!self.isMessageFromCorrectSource($iframe, event)) {\n          return;\n        }\n        // deviceFingerprint service is available, clear timeout\n        clearTimeout(iFrameTimeout);\n        if (!event || !event.data || event.origin !== fingerprintData.oktaDomainUrl) {\n          handleError('no data');\n          return;\n        }\n        try {\n          const message = JSON.parse(event.data);\n\n          if (message && message.type === 'FingerprintServiceReady') {\n            sendMessageToOkta({\n              type: 'GetFingerprint',\n            });\n          } else if (message && message.type === 'FingerprintAvailable') {\n            removeIframe();\n            resolve(message.fingerprint);\n          } else {\n            handleError('no data');\n          }\n        } catch (error) {\n          //Ignore any errors since we could get other messages too\n        }\n      }\n\n      function sendMessageToOkta(message) {\n        const win = $iframe[0].contentWindow;\n\n        if (win) {\n          win.postMessage(JSON.stringify(message), fingerprintData.oktaDomainUrl);\n        }\n      }\n\n      // Attach listener\n      window.addEventListener('message', onMessageReceivedFromOkta, false);\n      // Create and Load devicefingerprint page inside the iframe\n      $iframe = $('<iframe>', {\n        css: {\n          display: 'none'\n        },\n        src: fingerprintData.oktaDomainUrl + '/auth/services/devicefingerprint',\n      });\n      fingerprintData.element.append($iframe);\n\n      iFrameTimeout = setTimeout(() => {\n        // If the iFrame does not load or there is a slow connection, throw an error\n        handleError('service not available');\n      }, 2000);\n    });\n  }\n};\n"],"names":["getUserAgent","navigator","userAgent","isWindowsPhone","match","isMessageFromCorrectSource","$iframe","event","source","contentWindow","generateDeviceFingerprint","fingerprintData","Promise","resolve","reject","iFrameTimeout","self","removeIframe","off","remove","window","removeEventListener","onMessageReceivedFromOkta","handleError","reason","clearTimeout","data","origin","oktaDomainUrl","message","JSON","parse","type","sendMessageToOkta","fingerprint","error","win","postMessage","stringify","addEventListener","$","css","display","src","element","append","setTimeout"],"mappings":"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"}