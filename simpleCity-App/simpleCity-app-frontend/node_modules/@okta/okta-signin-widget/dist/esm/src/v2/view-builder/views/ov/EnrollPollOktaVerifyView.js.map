{"version":3,"file":"EnrollPollOktaVerifyView.js","sources":["../../../../../../../src/v2/view-builder/views/ov/EnrollPollOktaVerifyView.js"],"sourcesContent":["import { loc } from '@okta/courage';\nimport { BaseFormWithPolling } from '../../internals';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView';\nimport polling from '../shared/polling';\nimport OVResendView from './OVResendView';\nimport SwitchEnrollChannelLinkView from './SwitchEnrollChannelLinkView';\nimport EnrollChannelPollDescriptionView from './EnrollChannelPollDescriptionView';\n\nconst OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_IOS =\n  'oie.authenticator.app.non_fips_compliant_enrollment_device_incompatible';\nconst OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_NON_IOS =\n  'oie.authenticator.app.non_fips_compliant_enrollment_app_update_required';\nconst OV_QR_ENROLL_ENABLE_BIOMETRICS_KEY = 'oie.authenticator.app.method.push.enroll.enable.biometrics';\nlet shouldStartPolling = true;\n\nconst Body = BaseFormWithPolling.extend(Object.assign(\n  {\n    title() {\n      const selectedChannel = this.options.appState.get('currentAuthenticator').contextualData.selectedChannel;\n      let title;\n      switch (selectedChannel) {\n      case 'email':\n        title = loc('oie.enroll.okta_verify.setup.email.title', 'login');\n        break;\n      case 'sms':\n        title = loc('oie.enroll.okta_verify.setup.sms.title', 'login');\n        break;\n      default:\n        title = loc('oie.enroll.okta_verify.setup.title', 'login');\n      }\n      return title;\n    },\n    className: 'oie-enroll-ov-poll',\n    noButtonBar: true,\n    initialize() {\n      BaseFormWithPolling.prototype.initialize.apply(this, arguments);\n      this.listenTo(this.model, 'error', this.stopPolling);\n      if (shouldStartPolling) {\n        this.startPolling();\n      }\n    },\n    showMessages() {\n      // override showMessages to display custom callout\n      const calloutOptions = {};\n      if (this.options.appState.containsMessageWithI18nKey(OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_IOS) ||\n        this.options.appState.containsMessageWithI18nKey(OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_NON_IOS)) {\n        // add a title for ov force upgrade\n        calloutOptions.title = loc('oie.okta_verify.enroll.force.upgrade.title', 'login');\n      } else if (this.options.appState.containsMessageWithI18nKey(OV_QR_ENROLL_ENABLE_BIOMETRICS_KEY)) {\n        // add a title for OV enable biometrics message during enrollment\n        calloutOptions.title = loc('oie.authenticator.app.method.push.enroll.enable.biometrics.title', 'login');\n      }\n      BaseFormWithPolling.prototype.showMessages.call(this, calloutOptions);\n    },\n    getUISchema() {\n      const schema = [];\n      const contextualData = this.options.appState.get('currentAuthenticator').contextualData;\n      const selectedChannel = contextualData.selectedChannel;\n      let selector;\n      if (selectedChannel === 'qrcode') {\n        selector = '.qrcode-container';\n        shouldStartPolling = true;\n      } else if (['email', 'sms'].includes(selectedChannel)) {\n        selector = '.switch-channel-content';\n        shouldStartPolling = true;\n      } else if (['samedevice', 'devicebootstrap'].includes(selectedChannel)) { \n        // no selector if the channel is same device or device bootstrap\n        // additionally, stop polling as it should be a terminal page\n        shouldStartPolling = false;\n      }\n      \n      schema.push({\n        View: EnrollChannelPollDescriptionView,\n      });\n      schema.push({\n        View: SwitchEnrollChannelLinkView,\n        options: {\n          selectedChannel\n        },\n        selector: selector,\n      });\n      if (['email', 'sms'].includes(selectedChannel)) {\n        schema.push({\n          View: OVResendView,\n          selector: '.o-form-error-container',\n        });\n      }\n      return schema;\n    },\n    remove() {\n      BaseFormWithPolling.prototype.remove.apply(this, arguments);\n      this.stopPolling();\n    },\n  },\n\n  polling,\n));\n\nexport default BaseAuthenticatorView.extend({\n  Body,\n});\n"],"names":["OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_IOS","OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_NON_IOS","OV_QR_ENROLL_ENABLE_BIOMETRICS_KEY","shouldStartPolling","Body","BaseFormWithPolling","extend","Object","assign","title","selectedChannel","options","appState","get","contextualData","loc","className","noButtonBar","initialize","prototype","apply","arguments","listenTo","model","stopPolling","startPolling","showMessages","calloutOptions","containsMessageWithI18nKey","call","getUISchema","schema","selector","includes","push","View","EnrollChannelPollDescriptionView","SwitchEnrollChannelLinkView","OVResendView","remove","polling","BaseAuthenticatorView"],"mappings":"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"}