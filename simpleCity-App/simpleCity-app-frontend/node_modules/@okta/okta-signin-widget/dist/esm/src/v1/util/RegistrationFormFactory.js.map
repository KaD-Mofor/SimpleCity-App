{"version":3,"file":"RegistrationFormFactory.js","sources":["../../../../../src/v1/util/RegistrationFormFactory.js"],"sourcesContent":["/* eslint max-statements: [2, 23],  max-depth: [2, 3], complexity: [2, 13] */\n/*!\n * Copyright (c) 2017, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { _, internal, $ } from '@okta/courage';\nimport TextBox from 'v1/views/shared/TextBox';\nlet { SchemaFormFactory } = internal.views.forms.helpers;\n\nconst getParts = function(username) {\n  const usernameArr = username.split('');\n  const minPartsLength = 3;\n  const userNameParts = [];\n  const delimiters = [',', '.', '-', '_', '#', '@'];\n  let userNamePart = '';\n\n  _.each(usernameArr, function(part) {\n    if (delimiters.indexOf(part) === -1) {\n      userNamePart += part;\n    } else {\n      if (userNamePart.length >= minPartsLength) {\n        userNameParts.push(_.clone(userNamePart));\n      }\n      userNamePart = '';\n    }\n  });\n  if (userNamePart.length >= minPartsLength) {\n    userNameParts.push(_.clone(userNamePart));\n  }\n  return userNameParts.filter(Boolean);\n};\n\nconst passwordContainsFormField = function(formField, password) {\n  if (!formField) {\n    return false;\n  }\n  formField = formField.toLowerCase();\n  password = password.toLowerCase();\n  const formFieldArr = getParts(formField);\n\n  //check if each formField part contains password\n  for (var i = 0; i < formFieldArr.length; i++) {\n    const formFieldPart = formFieldArr[i];\n\n    if (password.indexOf(formFieldPart) !== -1) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst checkSubSchema = function(subSchema, value, model) {\n  const minLength = subSchema.get('minLength');\n  const maxLength = subSchema.get('maxLength');\n  const regex = subSchema.get('format');\n\n  if (_.isNumber(minLength)) {\n    if (value.length < minLength) {\n      return false;\n    }\n  }\n\n  if (_.isNumber(maxLength)) {\n    if (value.length > maxLength) {\n      return false;\n    }\n  }\n  const password = value;\n\n  if (_.isString(regex)) {\n    // call passwordContainsFormField if regex is userName, firstName, lastName\n    if (regex === '^[#/userName]' || regex === '^[#/firstName]' || regex === '^[#/lastName]') {\n      const fieldName = regex.split('^[#/')[1].split(']')[0];\n      let fieldValue = model.get(fieldName);\n\n      if (fieldName === 'userName') {\n        // with email as login enabled, we only have email populated\n        // Therefore we fallback and run validation with email attribute.\n        fieldValue = model.has('userName') ? model.get('userName') : model.get('email');\n      }\n      return !passwordContainsFormField(fieldValue, password);\n    } else {\n      if (!new RegExp(regex).test(value)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n\nconst checkSubSchemas = function(fieldName, model, subSchemas, showError) {\n  const value = model.get(fieldName);\n\n  if (!_.isString(value)) {\n    return;\n  }\n\n  subSchemas.each(function(subSchema, index) {\n    const ele = $('#subschemas-' + fieldName + ' .subschema-' + index);\n\n    //hide password complexity if no password\n    if (value) {\n      ele.children('p').removeClass('default-schema');\n    } else {\n      ele.children('p').addClass('default-schema');\n    }\n\n    // clear aria role and live-region for re-validation\n    ele.children('p')\n      .removeAttr('role')\n      .removeAttr('aria-live');\n\n    // reset errors\n    ele.removeClass('subschema-satisfied subschema-unsatisfied subschema-error');\n\n    // validate\n    if (checkSubSchema(subSchema, value, model)) {\n      // passed\n      ele.addClass('subschema-satisfied');\n      ele.find('p span').removeClass('error error-16-small');\n      ele.find('p span').addClass('confirm-16');\n    } else {\n      // failed\n      if (showError) {\n        ele.find('p span').removeClass('confirm-16');\n        ele.find('p span').addClass('error error-16-small');\n        ele.addClass('subschema-error subschema-unsatisfied');\n\n        ele.find('p')\n          // set role=\"alert\" so the password requirement is read by\n          // screen-readers\n          .attr('role', 'alert')\n          // set aria-live=\"polite\" so it will \"debounce\" and wait to read the\n          // message between keystrokes\n          .attr('aria-live', 'polite');\n      }\n    }\n  });\n};\n\nconst fnCreateInputOptions = function(schemaProperty) {\n  let inputOptions = SchemaFormFactory.createInputOptions(schemaProperty);\n\n  if (inputOptions.type === 'select') {\n    inputOptions = _.extend(inputOptions, {\n      label: schemaProperty.get('title'),\n    });\n  } else {\n    let placeholder = schemaProperty.get('title');\n\n    if (schemaProperty.get('required')) {\n      placeholder += ' *';\n    }\n    inputOptions = _.extend(inputOptions, {\n      label: false,\n      'label-top': true,\n      placeholder: placeholder,\n    });\n  }\n\n  const fieldName = schemaProperty.get('name');\n\n  switch (fieldName) {\n  case 'userName':\n    inputOptions.input = TextBox;\n    inputOptions.params = {\n      icon: 'person-16-gray',\n    };\n    break;\n  case 'password':\n    inputOptions.type = 'password';\n    inputOptions.input = TextBox;\n    inputOptions.params = {\n      icon: 'remote-lock-16',\n    };\n  }\n\n  const subSchemas = schemaProperty.get('subSchemas');\n\n  if (subSchemas) {\n    inputOptions.events = {\n      input: function() {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      },\n      focusout: function() {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      },\n      'change:userName': function() {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      },\n      'change:firstName': function() {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      },\n      'change:lastName': function() {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      },\n      'change:email': function() {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      },\n    };\n  }\n\n  return inputOptions;\n};\n\nexport default {\n  createInputOptions: fnCreateInputOptions,\n  getUsernameParts: getParts,\n  passwordContainsFormField: passwordContainsFormField,\n};\n"],"names":["SchemaFormFactory","internal","views","forms","helpers","getParts","username","usernameArr","split","minPartsLength","userNameParts","delimiters","userNamePart","_","each","part","indexOf","length","push","clone","filter","Boolean","passwordContainsFormField","formField","password","toLowerCase","formFieldArr","i","formFieldPart","checkSubSchema","subSchema","value","model","minLength","get","maxLength","regex","isNumber","isString","fieldName","fieldValue","has","RegExp","test","checkSubSchemas","subSchemas","showError","index","ele","$","children","removeClass","addClass","removeAttr","find","attr","fnCreateInputOptions","schemaProperty","inputOptions","createInputOptions","type","extend","label","placeholder","input","TextBox","params","icon","events","focusout","getUsernameParts"],"mappings":"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"}