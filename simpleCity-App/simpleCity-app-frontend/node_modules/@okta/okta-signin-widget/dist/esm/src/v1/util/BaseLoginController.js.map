{"version":3,"file":"BaseLoginController.js","sources":["../../../../../src/v1/util/BaseLoginController.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { _, Form, Controller } from '@okta/courage';\nimport Q from 'q';\n\nfunction getForm(controller) {\n  return _.find(controller.getChildren(), function(item) {\n    return item instanceof Form;\n  });\n}\n\nexport default Controller.extend({\n  // Ideally we should be attaching the listeners in the constructor, but because of the way\n  // we construct the FormController (this.model is generated after the BaseLoginController's\n  // constructor is called), this.model is undefined in when try to attach the events and\n  // therefore we don't listen to events for such forms. And changing the order in which we call\n  // the constructor doesn't help either (JS errors etc.). This at least guarantees that we\n  // are listening to the model events.\n  // Note - Figure out a way to call the constructor in the right order.\n  addListeners: function() {\n    // Events to enable/disable the primary button on the forms\n    this.listenTo(this.model, 'save', function() {\n      const form = getForm(this);\n      //disable the submit button on forms while making the request\n      //to prevent users from hitting rate limiting exceptions of\n      //1 per second on the auth api\n\n      const disableSubmitButton = form.disableSubmitButton;\n\n      if (disableSubmitButton && !form.disableSubmitButton()) {\n        return;\n      }\n      this.toggleButtonState(true);\n    });\n\n    this.listenTo(this.model, 'error', function() {\n      this.toggleButtonState(false);\n    });\n\n    this.addModelListeners(this.model);\n  },\n\n  addModelListeners: function(model) {\n    const setTransactionHandler = transaction => {\n      this.options.appState.set('transaction', transaction);\n    };\n\n    const transactionErrorHandler = err => {\n      this.options.appState.set('transactionError', err);\n    };\n\n    // Events to set the transaction attributes on the app state.\n    this.listenTo(model, 'setTransaction', setTransactionHandler);\n    this.listenTo(model, 'setTransactionError', transactionErrorHandler);\n\n    // For TOTP factor model\n    // TOTP model is special, its model will not be attached to a controller, but will\n    // tag along with the push factor model. We need to listen to the transaction\n    // changes on this as well (in case of the push+totp form).\n    const totpModel = model.get('backupFactor');\n\n    if (totpModel) {\n      this.listenTo(totpModel, 'setTransaction', setTransactionHandler);\n      this.listenTo(totpModel, 'setTransactionError', transactionErrorHandler);\n    }\n  },\n\n  // Override this method to delay switching to this screen until return\n  // promise is resolved. This is useful for cases like enrolling a security\n  // question, which requires an additional request to fetch the question\n  // list.\n  fetchInitialData: function() {\n    return Q();\n  },\n\n  // Override this method to prevent route navigation. This is useful for\n  // intermediate status changes that do not trigger a full refresh of the\n  // page, like MFA_ENROLL_ACTIVATE and MFA_CHALLENGE.\n  trapAuthResponse: function() {\n    return false;\n  },\n\n  toJSON: function() {\n    const data = Controller.prototype.toJSON.apply(this, arguments);\n\n    return _.extend(_.pick(this.options, 'appState'), data);\n  },\n\n  toggleButtonState: function(state) {\n    const button = this.$el.find('.button');\n\n    button.toggleClass('link-button-disabled', state).prop('disabled', state);\n  },\n\n  postRenderAnimation: function() {\n    // Event triggered after a page is rendered along with the classname to identify the page\n    // TODO: Deprecate this event in the next major version in favor of 'afterRender'\n    this.trigger('pageRendered', { page: this.className });\n\n    this.trigger('afterRender', { controller: this.className });\n  },\n});\n"],"names":["getForm","controller","_","find","getChildren","item","Form","Controller","extend","addListeners","listenTo","model","form","disableSubmitButton","toggleButtonState","addModelListeners","setTransactionHandler","transaction","options","appState","set","transactionErrorHandler","err","totpModel","get","fetchInitialData","Q","trapAuthResponse","toJSON","data","prototype","apply","arguments","pick","state","button","$el","toggleClass","prop","postRenderAnimation","trigger","page","className"],"mappings":"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"}