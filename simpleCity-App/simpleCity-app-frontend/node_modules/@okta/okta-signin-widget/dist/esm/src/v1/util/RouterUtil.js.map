{"version":3,"file":"RouterUtil.js","sources":["../../../../../src/v1/util/RouterUtil.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint complexity: [2, 47], max-statements: [2, 63] */\n\nimport { _, loc } from '@okta/courage';\nimport hbs from '@okta/handlebars-inline-precompile';\nimport BrowserFeatures from 'util/BrowserFeatures';\nimport Enums from 'util/Enums';\nimport ErrorCodes from 'util/ErrorCodes';\nimport { ConfigError, UnsupportedBrowserError } from 'util/Errors';\nimport OAuth2Util from 'util/OAuth2Util';\nimport Util from 'util/Util';\nconst fn = {};\nconst verifyUrlTpl = hbs('signin/verify/{{provider}}/{{factorType}}');\nconst verifyUrlMultipleTpl = hbs('signin/verify/{{provider}}/{{factorType}}/{{factorIndex}}');\nconst verifyUrlNoProviderTpl = hbs('signin/verify/{{factorType}}');\nconst enrollFactorUrlTpl = hbs('signin/enroll/{{provider}}/{{factorType}}');\nconst activateFactorUrlTpl = hbs('signin/enroll-activate/{{provider}}/{{factorType}}{{#if step}}/{{step}}{{/if}}');\nconst recoveryUrlTpl = hbs('signin/recovery/{{recoveryToken}}');\nconst refreshUrlTpl = hbs('signin/refresh-auth-state{{#if token}}/{{token}}{{/if}}');\nconst signinWithUsernameUrlTpl = hbs('signin/okta/{{username}}');\nconst sessionCookieRedirectTpl = hbs(\n  // eslint-disable-next-line max-len\n  '{{baseUrl}}/login/sessionCookieRedirect?checkAccountSetupComplete=true&token={{{token}}}&redirectUrl={{{redirectUrl}}}'\n);\nconst deviceActivationStatuses = ['DEVICE_ACTIVATED', 'DEVICE_NOT_ACTIVATED_CONSENT_DENIED', 'DEVICE_NOT_ACTIVATED'];\n\nfn.isHostBackgroundChromeTab = function() {\n  // Checks if the SIW is loaded in a chrome webview and\n  // it is in an app that is in background.\n  if (navigator.userAgent.match(/Android/) && navigator.userAgent.match(/Chrome/) && document.hidden) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nfn.isDocumentVisible = function() {\n  return document.visibilityState === 'visible';\n};\n\nfn.createVerifyUrl = function(provider, factorType, factorIndex) {\n  if (provider && factorIndex) {\n    return verifyUrlMultipleTpl({\n      provider: encodeURIComponent(provider.toLowerCase()),\n      factorType: encodeURIComponent(factorType),\n      factorIndex: encodeURIComponent(factorIndex),\n    });\n  } else if (provider) {\n    return verifyUrlTpl({\n      provider: encodeURIComponent(provider.toLowerCase()),\n      factorType: encodeURIComponent(factorType),\n    });\n  } else {\n    return verifyUrlNoProviderTpl({\n      factorType: encodeURIComponent(factorType),\n    });\n  }\n};\n\nfn.createEnrollFactorUrl = function(provider, factorType) {\n  return enrollFactorUrlTpl({\n    provider: encodeURIComponent(provider.toLowerCase()),\n    factorType: encodeURIComponent(factorType),\n  });\n};\n\nfn.createActivateFactorUrl = function(provider, factorType, step) {\n  return activateFactorUrlTpl({\n    provider: encodeURIComponent(provider.toLowerCase()),\n    factorType: encodeURIComponent(factorType),\n    step: step ? encodeURIComponent(step) : false,\n  });\n};\n\nfn.createRecoveryUrl = function(recoveryToken) {\n  return recoveryUrlTpl({\n    recoveryToken: encodeURIComponent(recoveryToken),\n  });\n};\n\nfn.createRefreshUrl = function(stateToken) {\n  const token = stateToken ? encodeURIComponent(stateToken) : null;\n\n  return refreshUrlTpl({ token: token });\n};\n\nfn.createSigninUrl = function(username) {\n  return username ? signinWithUsernameUrlTpl({ username: encodeURIComponent(username) }) : 'signin';\n};\n\nfn.routeAfterAuthStatusChangeError = function(router, err) {\n  if (!err) {\n    return;\n  }\n\n  // Global error handling for CORS enabled errors\n  if (err.xhr && BrowserFeatures.corsIsNotEnabled(err.xhr)) {\n    router.settings.callGlobalError(new UnsupportedBrowserError(loc('error.enabled.cors')));\n    return;\n  }\n\n  // Token has expired - no longer valid. Navigate back to primary auth.\n  if (err.errorCode === ErrorCodes.INVALID_TOKEN_EXCEPTION) {\n    router.appState.set('flashError', err);\n    router.controller.state.set('navigateDir', Enums.DIRECTION_BACK);\n    if (router.settings.get('features.mfaOnlyFlow')) {\n      router.navigate('signin/error', { trigger: true });\n    } else {\n      router.navigate('', { trigger: true });\n    }\n    return;\n  }\n\n  Util.triggerAfterError(router.controller, err);\n};\n\nfn.routeAfterAuthStatusChange = function(router, res) {\n  // Other errors are handled by the function making the authClient request\n  if (!res || !res.status) {\n    router.appState.clearLastAuthResponse();\n    return;\n  }\n\n  router.appState.setAuthResponse(res);\n\n  if (router.controller && router.controller.trapAuthResponse(res)) {\n    return;\n  }\n\n  fn.handleResponseStatus(router, res);\n};\n\nfn.handleResponseStatus = function(router, res) {\n  switch (res.status) {\n  case 'SUCCESS': {\n    handleSuccessResponseStatus(router, res);\n    return;\n  }\n  case 'ADMIN_CONSENT_REQUIRED':\n    router.navigate('signin/admin-consent', { trigger: true });\n    return;\n  case 'CONSENT_REQUIRED':\n    router.navigate('signin/consent', { trigger: true });\n    return;\n  case 'DEVICE_ACTIVATE':\n    router.navigate('signin/device-activate', { trigger: true });\n    return;\n    // We want the same view for FACTOR_REQUIRED & FACTOR_CHALLENGE\n    // In the new idx pipeline FACTOR_CHALLENGE API response does not contain a prev link\n  case 'FACTOR_REQUIRED':\n  case 'FACTOR_CHALLENGE':\n  case 'MFA_REQUIRED': {\n    const lastFailedChallengeFactorData = router.appState.get('lastFailedChallengeFactorData');\n    // When the widget is bootstrapped with an error in MFA_CHALLENGE state, we pass the\n    // lastFailedChallengeFactorData to MFA_REQUIRED, in order to show the error message\n    // on the correct factor view\n\n    if (lastFailedChallengeFactorData && lastFailedChallengeFactorData.factor) {\n      router.appState.get('factors').lastUsedFactor = lastFailedChallengeFactorData.factor;\n    }\n    const factor = router.appState.get('factors').getDefaultFactor();\n    const url = fn.createVerifyUrl(factor.get('provider'), factor.get('factorType'));\n\n    router.navigate(url, { trigger: true });\n    router.appState.clearLastFailedChallengeFactorData();\n    return;\n  }\n  case 'POLL': {\n    const pollUrl = 'signin/poll';\n\n    router.navigate(pollUrl, { trigger: true });\n    return;\n  }\n  case 'MFA_CHALLENGE':\n    // Since we normally trap MFA_CHALLENGE, this will only get called on a\n    // page refresh or when an error is returned on verification with an IdP.\n    // We need to return to MFA_REQUIRED to initialize the\n    // page correctly (i.e. factors dropdown, etc)\n    if (router.appState.get('isFactorResultFailed')) {\n      router.appState.setLastFailedChallengeFactorData();\n    }\n    router.appState.get('transaction').prev().then(function(trans) {\n      router.appState.set('transaction', trans);\n    });\n    // TODO: catch/handle error here?\n    return;\n  case 'MFA_ENROLL':\n  case 'FACTOR_ENROLL':\n    router.navigate('signin/enroll', { trigger: true });\n    return;\n  case 'MFA_ENROLL_ACTIVATE':\n  case 'FACTOR_ENROLL_ACTIVATE': {\n    const activateUrl = fn.createActivateFactorUrl(\n      router.appState.get('activatedFactorProvider'),\n      router.appState.get('activatedFactorType')\n    );\n\n    router.navigate(activateUrl, { trigger: true });\n    return;\n  }\n  case 'PASSWORD_WARN':\n  case 'PASSWORD_EXPIRED':\n    if (router.settings.get('features.customExpiredPassword') && !router.appState.get('isPwdManagedByOkta')) {\n      router.navigate('signin/custom-password-expired', { trigger: true });\n    } else {\n      router.navigate('signin/password-expired', { trigger: true });\n    }\n    return;\n  case 'RECOVERY_CHALLENGE': {\n    const fromEmail = res.factorType.toLowerCase() === Enums.RECOVERY_FACTOR_TYPE_EMAIL.toLowerCase();\n    const isForgotPassword = res.recoveryType === Enums.RECOVERY_TYPE_PASSWORD;\n    const isUnlock = res.recoveryType === Enums.RECOVERY_TYPE_UNLOCK;\n    // Will use this workaround (lowercasing response) until OKTA-69083 is resolved\n\n    if (isForgotPassword && fromEmail) {\n      router.navigate('signin/recovery-emailed', { trigger: true });\n    } else if (isUnlock && fromEmail) {\n      router.navigate('signin/unlock-emailed', { trigger: true });\n    } else {\n      router.navigate('signin/recovery-challenge', { trigger: true });\n    }\n    return;\n  }\n  case 'RECOVERY':\n    router.navigate('signin/recovery-question', { trigger: true });\n    return;\n  case 'PASSWORD_RESET':\n    router.navigate('signin/password-reset', { trigger: true });\n    return;\n  case 'LOCKED_OUT': {\n    if (router.settings.get('features.selfServiceUnlock')) {\n      router.navigate('signin/unlock', { trigger: true });\n    } else {\n      const errorMessage = loc('error.auth.lockedOut', 'login');\n      const resError = {\n        responseJSON: {\n          errorCauses: [],\n          errorSummary: errorMessage,\n          errorCode: 'E0000119',\n        },\n      };\n      const err = {\n        name: 'AuthApiError',\n        message: errorMessage,\n        xhr: resError\n      };\n      router.controller.model.appState.trigger('removeLoading');\n      router.controller.model.trigger('error', router.controller.model, resError);\n      Util.triggerAfterError(router.controller, err);\n    }\n    return;\n  }\n  case 'PROFILE_REQUIRED':\n    router.navigate('signin/enroll-user', { trigger: true });\n    return;\n  case 'UNAUTHENTICATED':\n    // Either we have factors and we are in passwordlessAuth mode\n    if (router.appState.get('promptForFactorInUnauthenticated')) {\n      const defaultFactor = router.appState.get('factors').getDefaultFactor();\n      const factorURL = fn.createVerifyUrl(defaultFactor.get('provider'), defaultFactor.get('factorType'));\n\n      router.navigate(factorURL, { trigger: true });\n      return;\n    }\n    // Or we're in device flow and we need to force idp discovery check\n    if (router.appState.get('usingDeviceFlow')) {\n      router.navigate('signin/idp-discovery-check', { trigger: true });\n      return;\n    }\n    // Or we don't have anything and we need to show the login page\n    router.navigate('', { trigger: true });\n    return;\n  default:\n    throw new Error('Unknown status: ' + res.status);\n  }\n};\n\nfunction handleSuccessResponseStatus(router, res) {\n  if (res.recoveryType === Enums.RECOVERY_TYPE_UNLOCK) {\n    router.navigate('signin/account-unlocked', { trigger: true });\n    return;\n  }\n\n  if (_.contains(deviceActivationStatuses, res._embedded?.deviceActivationStatus)) {\n    router.navigate('signin/device-activate-complete', { trigger: true });\n    return;\n  }\n\n  // If the desired end result object needs to have idToken (and not sessionToken),\n  // get the id token from session token before calling the global success function.\n  if (router.settings.get('oauth2Enabled')) {\n    OAuth2Util.getTokens(router.settings, { sessionToken: res.sessionToken }, router.controller);\n    return;\n  }\n\n  const successData = {\n    user: res._embedded.user,\n    type: res.type || Enums.SESSION_SSO,\n  };\n\n  if (res.relayState) {\n    successData.relayState = res.relayState;\n  }\n\n  const redirectFn = router.settings.get('redirectUtilFn');\n  const nextUrl = res?._links?.original?.href || res?._links?.next?.href;\n\n  if (res.type === Enums.SESSION_STEP_UP) {\n    const targetUrl = res?._links?.next?.href;\n\n    successData.stepUp = {\n      url: targetUrl,\n      finish: function() {\n        redirectFn(targetUrl);\n      },\n    };\n  } else {\n    if (nextUrl) {\n      successData.next = function() {\n        redirectFn(nextUrl);\n      };\n    } else {\n      // Add the type for now until the API returns it.\n      successData.type = Enums.SESSION_SSO;\n    }\n\n    if (res.sessionToken) {\n      successData.session = {\n        token: res.sessionToken,\n        setCookieAndRedirect: function(redirectUri) {\n          if (redirectUri) {\n            Util.debugMessage(`\n              Passing a \"redirectUri\" to \"setCookieAndRedirect\" is strongly discouraged.\n              It is recommended to set a \"redirectUri\" option in the config object passed to the widget constructor.\n            `);\n          }\n\n          redirectUri = redirectUri || router.settings.get('redirectUri');\n          if (!redirectUri) {\n            throw new ConfigError('\"redirectUri\" is required');\n          }\n\n          redirectFn(\n            sessionCookieRedirectTpl({\n              baseUrl: router.settings.get('baseUrl'),\n              token: encodeURIComponent(res.sessionToken),\n              redirectUrl: encodeURIComponent(redirectUri),\n            })\n          );\n        },\n      };\n    }\n  }\n\n  // Check if we need to wait for redirect based on host.\n  if (fn.isHostBackgroundChromeTab()) {\n    document.addEventListener('visibilitychange', function checkVisibilityAndCallSuccess() {\n      if (fn.isDocumentVisible()) {\n        document.removeEventListener('visibilitychange', checkVisibilityAndCallSuccess);\n        router.settings.callGlobalSuccess(Enums.SUCCESS, successData);\n      }\n    });\n  } else {\n    router.settings.callGlobalSuccess(Enums.SUCCESS, successData);\n  }\n}\n\nexport default fn;\n"],"names":["fn","verifyUrlTpl","verifyUrlMultipleTpl","verifyUrlNoProviderTpl","enrollFactorUrlTpl","activateFactorUrlTpl","recoveryUrlTpl","refreshUrlTpl","signinWithUsernameUrlTpl","sessionCookieRedirectTpl","deviceActivationStatuses","isHostBackgroundChromeTab","navigator","userAgent","match","document","hidden","isDocumentVisible","visibilityState","createVerifyUrl","provider","factorType","factorIndex","encodeURIComponent","toLowerCase","createEnrollFactorUrl","createActivateFactorUrl","step","createRecoveryUrl","recoveryToken","createRefreshUrl","stateToken","token","createSigninUrl","username","routeAfterAuthStatusChangeError","router","err","xhr","BrowserFeatures","corsIsNotEnabled","settings","callGlobalError","UnsupportedBrowserError","loc","errorCode","ErrorCodes","INVALID_TOKEN_EXCEPTION","appState","set","controller","state","Enums","DIRECTION_BACK","get","navigate","trigger","Util","triggerAfterError","routeAfterAuthStatusChange","res","status","clearLastAuthResponse","setAuthResponse","trapAuthResponse","handleResponseStatus","handleSuccessResponseStatus","lastFailedChallengeFactorData","factor","lastUsedFactor","getDefaultFactor","url","clearLastFailedChallengeFactorData","pollUrl","setLastFailedChallengeFactorData","prev","then","trans","activateUrl","fromEmail","RECOVERY_FACTOR_TYPE_EMAIL","isForgotPassword","recoveryType","RECOVERY_TYPE_PASSWORD","isUnlock","RECOVERY_TYPE_UNLOCK","errorMessage","resError","responseJSON","errorCauses","errorSummary","name","message","model","defaultFactor","factorURL","Error","_","contains","_embedded","deviceActivationStatus","OAuth2Util","getTokens","sessionToken","successData","user","type","SESSION_SSO","relayState","redirectFn","nextUrl","_links","original","href","next","SESSION_STEP_UP","targetUrl","stepUp","finish","session","setCookieAndRedirect","redirectUri","debugMessage","ConfigError","baseUrl","redirectUrl","addEventListener","checkVisibilityAndCallSuccess","removeEventListener","callGlobalSuccess","SUCCESS"],"mappings":"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"}