{"version":3,"file":"VerifyU2FController.js","sources":["../../../../../src/v1/controllers/VerifyU2FController.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* global u2f */\nimport { _, loc, View } from '@okta/courage';\nimport hbs from '@okta/handlebars-inline-precompile';\nimport Q from 'q';\nimport 'u2f-api-polyfill';\nimport { U2FError } from 'util/Errors';\nimport FactorUtil from 'util/FactorUtil';\nimport FidoUtil from 'util/FidoUtil';\nimport FormController from 'v1/util/FormController';\nimport FormType from 'v1/util/FormType';\nimport HtmlErrorMessageView from 'v1/views/mfa-verify/HtmlErrorMessageView';\nimport FooterMFA from 'v1/views/shared/FooterMFA';\n\nfunction getRegisteredKeysSequence(factors) {\n  const keys = [];\n\n  _.each(factors, function(factor) {\n    keys.push({\n      version: factor.profile.version,\n      keyHandle: factor.profile.credentialId,\n    });\n  });\n  return keys;\n}\n\nexport default FormController.extend({\n  className: 'mfa-verify verify-u2f',\n  Model: {\n    props: {\n      rememberDevice: 'boolean',\n    },\n\n    initialize: function() {\n      const rememberDevice = FactorUtil.getRememberDeviceValue(this.appState);\n\n      // set the initial value for remember device (Cannot do this while defining the\n      // local property because this.settings would not be initialized there yet).\n      this.set('rememberDevice', rememberDevice);\n    },\n\n    save: function() {\n      this.trigger('request');\n\n      return this.doTransaction(function(transaction) {\n        let factor;\n\n        if (transaction.factorTypes) {\n          factor = _.findWhere(transaction.factorTypes, {\n            factorType: 'u2f',\n          });\n        } else {\n          factor = _.findWhere(transaction.factors, {\n            factorType: 'u2f',\n            provider: 'FIDO',\n          });\n        }\n        const self = this;\n\n        return factor.verify().then(function(transaction) {\n          let registeredKeys;\n          let appId;\n          let nonce;\n\n          if (transaction.factors) {\n            const factors = transaction.factors;\n\n            appId = factors[0]['profile']['appId'];\n            nonce = transaction.challenge.nonce;\n            registeredKeys = getRegisteredKeysSequence(factors);\n          } else {\n            const factorData = transaction.factor;\n\n            appId = factorData.profile.appId;\n            nonce = factorData.challenge.nonce;\n            registeredKeys = [{ version: FidoUtil.getU2fVersion(), keyHandle: factorData.profile.credentialId }];\n          }\n          self.trigger('request');\n\n          const deferred = Q.defer();\n\n          u2f.sign(appId, nonce, registeredKeys, function(data) {\n            self.trigger('errors:clear');\n            if (data.errorCode && data.errorCode !== 0) {\n              const isOneFactor = self.options.appState.get('factors').length === 1;\n\n              deferred.reject(\n                new U2FError({\n                  xhr: {\n                    responseJSON: {\n                      errorSummary: FidoUtil.getU2fVerifyErrorMessageByCode(data.errorCode, isOneFactor),\n                    },\n                  },\n                })\n              );\n            } else {\n              const rememberDevice = !!self.get('rememberDevice');\n\n              return factor\n                .verify({\n                  clientData: data.clientData,\n                  signatureData: data.signatureData,\n                  rememberDevice: rememberDevice,\n                })\n                .then(deferred.resolve);\n            }\n          });\n          return deferred.promise;\n        });\n      })\n        .catch(() => {});\n    },\n  },\n\n  Form: {\n    autoSave: true,\n    hasSavingState: false,\n    title: _.partial(loc, 'factor.u2f', 'login'),\n    className: 'verify-u2f-form',\n    noCancelButton: true,\n    save: _.partial(loc, 'verify.u2f.retry', 'login'),\n    noButtonBar: function() {\n      return !FidoUtil.isU2fAvailable();\n    },\n    modelEvents: {\n      request: '_startEnrollment',\n      error: '_stopEnrollment',\n    },\n\n    formChildren: function() {\n      const result = [];\n\n      if (!FidoUtil.isU2fAvailable()) {\n        let errorMessageKey = 'u2f.error.factorNotSupported';\n\n        if (this.options.appState.get('factors').length === 1) {\n          errorMessageKey = 'u2f.error.factorNotSupported.oneFactor';\n        }\n        result.push(\n          FormType.View(\n            { View: new HtmlErrorMessageView({ message: loc(errorMessageKey, 'login') }) },\n            { selector: '.o-form-error-container' }\n          )\n        );\n      } else {\n        result.push(\n          FormType.View({\n            View: View.extend({\n              template: hbs(\n                '\\\n            <div class=\"u2f-verify-text\">\\\n              <p>{{i18n code=\"verify.u2f.instructions\" bundle=\"login\"}}</p>\\\n              <p>{{i18n code=\"verify.u2f.instructionsBluetooth\" bundle=\"login\"}}</p>\\\n              <div data-se=\"u2f-waiting\" class=\"okta-waiting-spinner\"></div>\\\n            </div>'\n              ),\n            }),\n          })\n        );\n      }\n\n      if (this.options.appState.get('allowRememberDevice')) {\n        result.push(\n          FormType.Input({\n            label: false,\n            'label-top': true,\n            placeholder: this.options.appState.get('rememberDeviceLabel'),\n            className: 'margin-btm-0',\n            name: 'rememberDevice',\n            type: 'checkbox',\n          })\n        );\n      }\n\n      return result;\n    },\n\n    postRender: function() {\n      _.defer(() => {\n        if (FidoUtil.isU2fAvailable()) {\n          this.model.save();\n        } else {\n          this.$('[data-se=\"u2f-waiting\"]').addClass('hide');\n        }\n      });\n    },\n\n    _startEnrollment: function() {\n      this.$('.okta-waiting-spinner').removeClass('hide');\n      this.$('.o-form-button-bar').hide();\n    },\n\n    _stopEnrollment: function() {\n      this.$('.okta-waiting-spinner').addClass('hide');\n      this.$('.o-form-button-bar').show();\n    },\n  },\n\n  back: function() {\n    // Empty function on verify controllers to prevent users\n    // from navigating back during 'verify' using the browser's\n    // back button. The URL will still change, but the view will not\n    // More details in OKTA-135060.\n  },\n\n  Footer: FooterMFA,\n});\n"],"names":["getRegisteredKeysSequence","factors","keys","_","each","factor","push","version","profile","keyHandle","credentialId","FormController","extend","className","Model","props","rememberDevice","initialize","FactorUtil","getRememberDeviceValue","appState","set","save","trigger","doTransaction","transaction","factorTypes","findWhere","factorType","provider","self","verify","then","registeredKeys","appId","nonce","challenge","factorData","FidoUtil","getU2fVersion","deferred","Q","defer","u2f","sign","data","errorCode","isOneFactor","options","get","length","reject","U2FError","xhr","responseJSON","errorSummary","getU2fVerifyErrorMessageByCode","clientData","signatureData","resolve","promise","catch","Form","autoSave","hasSavingState","title","partial","loc","noCancelButton","noButtonBar","isU2fAvailable","modelEvents","request","error","formChildren","result","errorMessageKey","FormType","View","HtmlErrorMessageView","message","selector","template","Input","label","placeholder","name","type","postRender","model","$","addClass","_startEnrollment","removeClass","hide","_stopEnrollment","show","back","Footer","FooterMFA"],"mappings":"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"}