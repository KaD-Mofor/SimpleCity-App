{"version":3,"file":"uiSchemaTransformer.js","sources":["../../../../../src/v2/ion/uiSchemaTransformer.js"],"sourcesContent":["/*!\n * Copyright (c) 2020, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/**\n * Create UI Schema into remedation object base on remediation values\n */\nimport { _ } from '@okta/courage';\nimport createUiSchemaForBoolean from './ui-schema/ion-boolean-handler';\nimport createUiSchemaForObject from './ui-schema/ion-object-handler';\nimport createUiSchemaForString from './ui-schema/ion-string-handler';\n\nconst UISchemaHandlers = {\n  string: createUiSchemaForString,\n  boolean: createUiSchemaForBoolean,\n  object: createUiSchemaForObject,\n};\n\n/**\n *\n * @param {AuthResult} transformedResp\n * @param {IONForm} remeditationForm\n */\nconst createUISchema = (transformedResp, remediationForm, settings) => {\n\n  // For cases where field itself is a form, it has a formname and we are appending the formname to each field.\n  // Sort of flat the structure in order to align Courage flatten Model. The flatten structure will be converted\n  // back to object hierarchy through `Model.toJSON`.\n  // For simplicity we are assuming that when field itself is a form its only one level deep.\n  const remediationValue = _.chain(remediationForm.value || [])\n    .filter(v => v.visible !== false)\n    .map(v => {\n      let nestedForm;\n      if (v.form) {\n        nestedForm = v.form;\n      } else if (v.value?.form) {\n        nestedForm = v.value.form;\n      }\n\n      if (nestedForm) {\n        const inputGroupName = v.name;\n        return nestedForm.value.map(input => {\n          return Object.assign({}, input, { name: inputGroupName + '.' + input.name });\n        });\n      } else {\n        return v;\n      }\n    })\n    .flatten()\n    .value();\n\n  return remediationValue.map(ionFormField => {\n    const uiSchemaDefaultConfig = {\n      'label-top': true,\n      'multirowError': true,\n      'data-se': `o-form-fieldset-${ionFormField.name}`,\n    };\n    const fieldType = ionFormField.type || 'string';\n    const uiSchemaHandler = UISchemaHandlers[fieldType];\n    const uiSchemaResult = uiSchemaHandler(ionFormField, remediationForm, transformedResp, createUISchema, settings);\n\n    return Object.assign(\n      {},\n      ionFormField,\n      uiSchemaDefaultConfig,\n      uiSchemaResult,\n    );\n  });\n};\n\n/**\n *\n * @param {AuthResult} transformedResp\n */\nconst insertUISchema = (settings, transformedResp) => {\n  if (transformedResp) {\n    transformedResp.remediations = transformedResp.remediations.map(obj => {\n      obj.uiSchema = createUISchema(transformedResp, obj, settings);\n      return obj;\n    });\n  }\n  return transformedResp;\n};\n\nexport default insertUISchema;\n\n/**\n * @typedef {Object} Authenticator\n * @property {string} label\n * @property {AuthenticatorValue} value\n */\n/**\n * @typedef {Object} AuthenticatorValue\n * @property {string} type Authenticator Type\n * @property {string} id Authenticator Org Authenticator ID\n * @property {AuthenticatorMethod[]} methods\n */\n/**\n * @typedef {Object} AuthenticatorEnrollment\n * @property {string} label\n * @property {AuthenticatorEnrollmentValue} value\n */\n/**\n * @typedef {Object} AuthenticatorEnrollmentValue\n * @property {string} authenticatorId Org Authenticator ID\n * @property {string} type Authenticator Type\n * @property {string} id Authenticator Enrollment ID\n * @property {AuthenticatorMethod[]} methods\n */\n/**\n * @typedef {Object} AuthenticatorMethod\n * @property {string} type Authenticator method type\n */\n/**\n * @typedef {Object} AuthenticatorOption\n * @property {string} label\n * @property {Object} form\n * @property {AuthenticatorOption[]} form.value\n */\n/**\n * @typedef {Object} AuthenticatorOptionValue\n * @property {string} name\n * @property {boolean} required\n * @property {string} value\n * @property {boolean} mutable\n */\n/**\n * @typedef {Object} IONForm\n * @property {string} name\n * @property {string[]} rel\n * @property {string} method\n * @property {string} href\n * @property {string} accepts\n * @property {IONFormField[]} value\n */\n/**\n * @typedef {Object} IONFormField\n * @property {string} name\n * @property {string=} type\n * @property {string=} required\n * @property {string=} secret\n * @property {string=} label\n * @property {Object[]} options\n * @property {Object=} form\n * @property {IONFormField[]} form.value\n */\n"],"names":["UISchemaHandlers","string","createUiSchemaForString","boolean","createUiSchemaForBoolean","object","createUiSchemaForObject","createUISchema","transformedResp","remediationForm","settings","remediationValue","_","chain","value","filter","v","visible","map","nestedForm","form","inputGroupName","name","input","Object","assign","flatten","ionFormField","uiSchemaDefaultConfig","fieldType","type","uiSchemaHandler","uiSchemaResult","insertUISchema","remediations","obj","uiSchema"],"mappings":"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"}