{"version":3,"file":"AdminConsentView.js","sources":["../../../../../../../src/v2/view-builder/views/consent/AdminConsentView.js"],"sourcesContent":["import { BaseView } from '../../internals';\nimport { loc } from '@okta/courage';\nimport AdminConsentViewHeader from './AdminConsentViewHeader';\nimport ConsentViewForm from './ConsentViewForm';\nimport { doesI18NKeyExist } from '../../../ion/i18nTransformer';\n\nexport default BaseView.extend({\n  Header: AdminConsentViewHeader,\n  Body: ConsentViewForm,\n  createModelClass(currentViewState) {\n    const ModelClass = BaseView.prototype.createModelClass.apply(this, arguments);\n    const { uiSchema } = currentViewState;\n    const { scopes } = uiSchema[0];\n\n    const i18nKeyPrefix = 'consent.scopes';\n\n    const localizedScopes = scopes.map(({ name, displayName, description }) => {\n      const scopeKey = `${i18nKeyPrefix}.${name}`;\n      const labelKey = `${scopeKey}.label`;\n      const descKey = `${scopeKey}.desc`;\n      const doesLabelExist = doesI18NKeyExist(labelKey);\n      const doesDescExist = doesI18NKeyExist(descKey);\n      const i18nDisplayName = doesLabelExist ? loc(labelKey, 'login') : displayName;\n      const i18nDescription = doesDescExist ? loc(descKey, 'login'): description;\n\n      return {\n        name,\n        displayName: i18nDisplayName,\n        description: i18nDescription,\n        isCustomized: !doesLabelExist,\n      };\n    });\n\n    return ModelClass.extend({\n      props: {\n        scopes: {type: 'array', value: localizedScopes},\n      },\n      local: {\n        consent: {type: 'boolean', value: false},\n      },\n      toJSON: function() {\n        return {consent: this.get('consent')};\n      }\n    });\n  }\n});\n"],"names":["BaseView","extend","Header","AdminConsentViewHeader","Body","ConsentViewForm","createModelClass","currentViewState","ModelClass","prototype","apply","arguments","uiSchema","scopes","i18nKeyPrefix","localizedScopes","map","name","displayName","description","scopeKey","labelKey","descKey","doesLabelExist","doesI18NKeyExist","doesDescExist","i18nDisplayName","loc","i18nDescription","isCustomized","props","type","value","local","consent","toJSON","get"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,uBAAeA,QAAQ,CAACC,MAAM,CAAC;AAC7BC,EAAAA,MAAM,EAAEC,sBAAsB;AAC9BC,EAAAA,IAAI,EAAEC,eAAe;EACrBC,gBAAgB,EAAA,UAACC,gBAAgB,EAAE;AACjC,IAAA,MAAMC,UAAU,GAAGR,QAAQ,CAACS,SAAS,CAACH,gBAAgB,CAACI,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,CAAA;IAC7E,MAAM;AAAEC,MAAAA,QAAQ,EAARA,QAAAA;AAAS,KAAC,GAAGL,gBAAgB,CAAA;IACrC,MAAM;AAAEM,MAAAA,MAAM,EAANA,MAAAA;AAAO,KAAC,GAAGD,QAAQ,CAAC,CAAC,CAAC,CAAA;IAE9B,MAAME,aAAa,GAAG,gBAAgB,CAAA;AAEtC,IAAA,MAAMC,eAAe,GAAGF,MAAM,CAACG,GAAG,CAAC,CAAC;AAAEC,MAAAA,IAAI,EAAJA,IAAI;AAAEC,MAAAA,WAAW,EAAXA,WAAW;AAAEC,MAAAA,WAAW,EAAXA,WAAAA;AAAY,KAAC,KAAK;AACzE,MAAA,MAAMC,QAAQ,GAAI,CAAA,EAAEN,aAAc,CAAA,CAAA,EAAGG,IAAK,CAAC,CAAA,CAAA;AAC3C,MAAA,MAAMI,QAAQ,GAAI,CAAED,EAAAA,QAAS,CAAO,MAAA,CAAA,CAAA;AACpC,MAAA,MAAME,OAAO,GAAI,CAAEF,EAAAA,QAAS,CAAM,KAAA,CAAA,CAAA;AAClC,MAAA,MAAMG,cAAc,GAAGC,gBAAgB,CAACH,QAAQ,CAAC,CAAA;AACjD,MAAA,MAAMI,aAAa,GAAGD,gBAAgB,CAACF,OAAO,CAAC,CAAA;MAC/C,MAAMI,eAAe,GAAGH,cAAc,GAAGI,GAAG,CAACN,QAAQ,EAAE,OAAO,CAAC,GAAGH,WAAW,CAAA;MAC7E,MAAMU,eAAe,GAAGH,aAAa,GAAGE,GAAG,CAACL,OAAO,EAAE,OAAO,CAAC,GAAEH,WAAW,CAAA;MAE1E,OAAO;AACLF,QAAAA,IAAI,EAAJA,IAAI;AACJC,QAAAA,WAAW,EAAEQ,eAAe;AAC5BP,QAAAA,WAAW,EAAES,eAAe;AAC5BC,QAAAA,YAAY,EAAE,CAACN,cAAAA;OAChB,CAAA;AACH,KAAC,CAAC,CAAA;IAEF,OAAOf,UAAU,CAACP,MAAM,CAAC;AACvB6B,MAAAA,KAAK,EAAE;AACLjB,QAAAA,MAAM,EAAE;AAACkB,UAAAA,IAAI,EAAE,OAAO;AAAEC,UAAAA,KAAK,EAAEjB,eAAAA;AAAe,SAAA;OAC/C;AACDkB,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE;AAACH,UAAAA,IAAI,EAAE,SAAS;AAAEC,UAAAA,KAAK,EAAE,KAAA;AAAK,SAAA;OACxC;AACDG,MAAAA,MAAM,EAAE,YAAW;QACjB,OAAO;AAACD,UAAAA,OAAO,EAAE,IAAI,CAACE,GAAG,CAAC,SAAS,CAAA;SAAE,CAAA;AACvC,OAAA;AACF,KAAC,CAAC,CAAA;AACJ,GAAA;AACF,CAAC,CAAC;;;;"}