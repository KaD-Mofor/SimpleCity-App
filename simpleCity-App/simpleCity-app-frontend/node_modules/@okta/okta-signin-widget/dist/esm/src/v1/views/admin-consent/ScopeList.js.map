{"version":3,"file":"ScopeList.js","sources":["../../../../../../src/v1/views/admin-consent/ScopeList.js"],"sourcesContent":["/*!\n * Copyright (c) 2017, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* eslint max-len: [2, 131] */\nimport hbs from '@okta/handlebars-inline-precompile';\nimport { _, View, loc } from '@okta/courage';\nimport ScopeItem from './ScopeItem';\n\nconst SCOPE_N_GROUP_CONFIG = {\n  groups: 'user',\n  myAccount: 'user',\n  users: 'user',\n  apps: 'resource',\n  authenticators: 'resource',\n  authorizationServers: 'resource',\n  clients: 'resource',\n  domains: 'resource',\n  factors: 'resource',\n  idps: 'resource',\n  linkedObjects: 'resource',\n  policies: 'resource',\n  templates: 'resource',\n  eventHooks: 'hook',\n  inlineHooks: 'hook',\n  events: 'system',\n  logs: 'system',\n  orgs: 'system',\n  roles: 'system',\n  schemas: 'system',\n  sessions: 'system',\n  trustedOrigins: 'system',\n};\n\nconst DEFAULT_GROUP = 'system';\n\nconst findScopeGroupKey = ({ name = '' }) => {\n  const xs = name.split('.');\n  const groupType = xs[1];\n\n  return SCOPE_N_GROUP_CONFIG[groupType] || DEFAULT_GROUP;\n};\n\nconst ScopeGroupHeaderView = View.extend({\n  className: 'scope-group',\n\n  events: {\n    'click': 'expandScopes',\n  },\n\n  template: hbs`\n    <div class=\"scope-group--header\">\n    <h3>{{groupName}}</h3>\n    <span class=\"scope-group--toggle\">\n      <svg class=\"caret\"\n           width=\"12\" height=\"12\"\n           viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path class=\"path\" fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M5.99967 4.66663L10.2663 8.66663L11.333 7.66663L5.99967 2.66663L0.666342 7.73636L1.73301 8.66663L5.99967 4.66663Z\"\n              fill=\"#A0A7AC\">\n        </path>\n      </svg>\n    </span>\n    </div>`,\n\n  expandScopes() {\n    this.$el.toggleClass('scope-group--is-expanded');\n    this.$('.caret').toggleClass('caret--is-rotated');\n  },\n\n  preRender() {\n    _.chain(this.options.scopes)\n      .sortBy(({ name }) => name)\n      .each(({ name, displayName, description }) => {\n        this.add(ScopeItem, {\n          options: {\n            name: displayName || name,\n            description,\n          },\n        });\n      });\n  }\n});\n\nexport default View.extend({\n  className: 'scope-list detail-row',\n\n  postRender: function() {\n    const allScopes = this.model.get('scopes');\n    const scopesWithGroup = _.groupBy(allScopes, findScopeGroupKey);\n\n    const SCOPE_GROUP_NAMES_CONFIG = {\n      'user': loc('admin.consent.group.user.group', 'login'),\n      'resource': loc('admin.consent.group.resource.policy', 'login'),\n      'hook': loc('admin.consent.group.hook', 'login'),\n      'system': loc('admin.consent.group.system', 'login'),\n    };\n\n    // loop through SCOPE_GROUP_NAMES_CONFIG to keep group order consistent in UI.\n    _.each(SCOPE_GROUP_NAMES_CONFIG, (groupName, groupKey) => {\n      const scopes = scopesWithGroup[groupKey];\n      if (!Array.isArray(scopes)) {\n        return;\n      }\n      // add scope group header and scopes\n      this.add(ScopeGroupHeaderView, {\n        options: {\n          groupName,\n          scopes,\n        }\n      });\n    });\n  },\n});\n"],"names":["SCOPE_N_GROUP_CONFIG","groups","myAccount","users","apps","authenticators","authorizationServers","clients","domains","factors","idps","linkedObjects","policies","templates","eventHooks","inlineHooks","events","logs","orgs","roles","schemas","sessions","trustedOrigins","DEFAULT_GROUP","findScopeGroupKey","name","xs","split","groupType","ScopeGroupHeaderView","View","extend","className","template","expandScopes","$el","toggleClass","$","preRender","_","chain","options","scopes","sortBy","each","displayName","description","add","ScopeItem","postRender","allScopes","model","get","scopesWithGroup","groupBy","SCOPE_GROUP_NAMES_CONFIG","loc","groupName","groupKey","Array","isArray"],"mappings":"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"}