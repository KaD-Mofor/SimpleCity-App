{"version":3,"file":"EnrollDuoController.js","sources":["../../../../../src/v1/controllers/EnrollDuoController.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint camelcase: 0*/\nimport { $, _, loc } from '@okta/courage';\nimport Duo from '@okta/duo';\nimport Q from 'q';\nimport FormController from 'v1/util/FormController';\nimport Footer from 'v1/views/enroll-factors/Footer';\nexport default FormController.extend({\n  className: 'enroll-duo duo-form',\n\n  Model: {\n    props: {\n      host: 'string',\n      signature: 'string',\n      postAction: 'string',\n      factorId: 'string',\n      stateToken: 'string',\n    },\n\n    getInitOptions: function() {\n      return this.doTransaction(function(transaction) {\n        const factor = _.findWhere(transaction.factors, {\n          factorType: 'web',\n          provider: 'DUO',\n        });\n\n        return factor.enroll();\n      });\n    },\n\n    activate: function(signedResponse) {\n      const url = this.get('postAction');\n      const factorId = this.get('factorId');\n      const self = this;\n      const data = {\n        id: factorId,\n        stateToken: this.get('stateToken'),\n        sig_response: signedResponse,\n      };\n      // Note: We should be doing this in OktaAuth! Fix when it's updated.\n\n      // We don't actually use authClient.post() here (unlike all the other cases in the\n      // sign-in widget) since the endpoint is wired to accept serialized form post instead\n      // of a JSON post ($.post() is different from authClient.post() in that in $.post(),\n      // jquery decides the Content-Type instead of it being a JSON type). Enroll/Verify DUO\n      // are the only two places where we actually do this.\n      // NOTE - If we ever decide to change this, we should test this very carefully.\n      return Q($.post(url, data))\n        .then(function() {\n          return self.doTransaction(function(transaction) {\n            return transaction.poll();\n          });\n        })\n        .catch(function(err) {\n          self.trigger('error', self, err.xhr);\n        });\n    },\n  },\n\n  Form: {\n    autoSave: true,\n    noButtonBar: true,\n    title: _.partial(loc, 'enroll.duo.title', 'login'),\n\n    postRender: function() {\n      this.add('<iframe frameborder=\"0\" title=\"' + this.title() + '\"></iframe>');\n      Duo.init({\n        host: this.model.get('host'),\n        sig_request: this.model.get('signature'),\n        iframe: this.$('iframe').get(0),\n        post_action: _.bind(this.model.activate, this.model),\n      });\n    },\n  },\n\n  Footer: Footer,\n\n  fetchInitialData: function() {\n    const self = this;\n\n    return this.model.getInitOptions(this.options.appState).then(function(trans) {\n      const res = trans.data;\n\n      if (\n        !res ||\n        !res._embedded ||\n        !res._embedded.factor ||\n        !res._embedded.factor._embedded ||\n        !res._embedded.factor._embedded.activation\n      ) {\n        throw new Error('Response does not have duo activation options');\n      }\n\n      const factor = res._embedded.factor;\n      const activation = factor._embedded.activation;\n\n      self.model.set({\n        host: activation.host,\n        signature: activation.signature,\n        postAction: activation._links.complete.href,\n        factorId: factor.id,\n        stateToken: res.stateToken,\n      });\n    });\n  },\n\n  trapAuthResponse: function() {\n    if (this.options.appState.get('isMfaEnrollActivate')) {\n      return true;\n    }\n  },\n});\n"],"names":["FormController","extend","className","Model","props","host","signature","postAction","factorId","stateToken","getInitOptions","doTransaction","transaction","factor","_","findWhere","factors","factorType","provider","enroll","activate","signedResponse","url","get","self","data","id","sig_response","Q","$","post","then","poll","catch","err","trigger","xhr","Form","autoSave","noButtonBar","title","partial","loc","postRender","add","Duo","init","model","sig_request","iframe","post_action","bind","Footer","fetchInitialData","options","appState","trans","res","_embedded","activation","Error","set","_links","complete","href","trapAuthResponse"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA,0BAAeA,cAAc,CAACC,MAAM,CAAC;AACnCC,EAAAA,SAAS,EAAE,qBAAqB;AAEhCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,QAAQ;AACdC,MAAAA,SAAS,EAAE,QAAQ;AACnBC,MAAAA,UAAU,EAAE,QAAQ;AACpBC,MAAAA,QAAQ,EAAE,QAAQ;AAClBC,MAAAA,UAAU,EAAE,QAAA;KACb;AAEDC,IAAAA,cAAc,EAAE,YAAW;AACzB,MAAA,OAAO,IAAI,CAACC,aAAa,CAAC,UAASC,WAAW,EAAE;QAC9C,MAAMC,MAAM,GAAGC,cAAC,CAACC,SAAS,CAACH,WAAW,CAACI,OAAO,EAAE;AAC9CC,UAAAA,UAAU,EAAE,KAAK;AACjBC,UAAAA,QAAQ,EAAE,KAAA;AACZ,SAAC,CAAC,CAAA;QAEF,OAAOL,MAAM,CAACM,MAAM,EAAE,CAAA;AACxB,OAAC,CAAC,CAAA;KACH;IAEDC,QAAQ,EAAE,UAASC,cAAc,EAAE;AACjC,MAAA,MAAMC,GAAG,GAAG,IAAI,CAACC,GAAG,CAAC,YAAY,CAAC,CAAA;AAClC,MAAA,MAAMf,QAAQ,GAAG,IAAI,CAACe,GAAG,CAAC,UAAU,CAAC,CAAA;MACrC,MAAMC,IAAI,GAAG,IAAI,CAAA;AACjB,MAAA,MAAMC,IAAI,GAAG;AACXC,QAAAA,EAAE,EAAElB,QAAQ;AACZC,QAAAA,UAAU,EAAE,IAAI,CAACc,GAAG,CAAC,YAAY,CAAC;AAClCI,QAAAA,YAAY,EAAEN,cAAAA;OACf,CAAA;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAA,OAAOO,CAAC,CAACC,gBAAC,CAACC,IAAI,CAACR,GAAG,EAAEG,IAAI,CAAC,CAAC,CACxBM,IAAI,CAAC,YAAW;AACf,QAAA,OAAOP,IAAI,CAACb,aAAa,CAAC,UAASC,WAAW,EAAE;UAC9C,OAAOA,WAAW,CAACoB,IAAI,EAAE,CAAA;AAC3B,SAAC,CAAC,CAAA;AACJ,OAAC,CAAC,CACDC,KAAK,CAAC,UAASC,GAAG,EAAE;QACnBV,IAAI,CAACW,OAAO,CAAC,OAAO,EAAEX,IAAI,EAAEU,GAAG,CAACE,GAAG,CAAC,CAAA;AACtC,OAAC,CAAC,CAAA;AACN,KAAA;GACD;AAEDC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,IAAI;AACdC,IAAAA,WAAW,EAAE,IAAI;IACjBC,KAAK,EAAE1B,cAAC,CAAC2B,OAAO,CAACC,GAAG,EAAE,kBAAkB,EAAE,OAAO,CAAC;AAElDC,IAAAA,UAAU,EAAE,YAAW;MACrB,IAAI,CAACC,GAAG,CAAC,iCAAiC,GAAG,IAAI,CAACJ,KAAK,EAAE,GAAG,aAAa,CAAC,CAAA;MAC1EK,GAAG,CAACC,IAAI,CAAC;QACPzC,IAAI,EAAE,IAAI,CAAC0C,KAAK,CAACxB,GAAG,CAAC,MAAM,CAAC;QAC5ByB,WAAW,EAAE,IAAI,CAACD,KAAK,CAACxB,GAAG,CAAC,WAAW,CAAC;QACxC0B,MAAM,EAAE,IAAI,CAACpB,CAAC,CAAC,QAAQ,CAAC,CAACN,GAAG,CAAC,CAAC,CAAC;AAC/B2B,QAAAA,WAAW,EAAEpC,cAAC,CAACqC,IAAI,CAAC,IAAI,CAACJ,KAAK,CAAC3B,QAAQ,EAAE,IAAI,CAAC2B,KAAK,CAAA;AACrD,OAAC,CAAC,CAAA;AACJ,KAAA;GACD;AAEDK,EAAAA,MAAM,EAAEA,MAAM;AAEdC,EAAAA,gBAAgB,EAAE,YAAW;IAC3B,MAAM7B,IAAI,GAAG,IAAI,CAAA;AAEjB,IAAA,OAAO,IAAI,CAACuB,KAAK,CAACrC,cAAc,CAAC,IAAI,CAAC4C,OAAO,CAACC,QAAQ,CAAC,CAACxB,IAAI,CAAC,UAASyB,KAAK,EAAE;AAC3E,MAAA,MAAMC,GAAG,GAAGD,KAAK,CAAC/B,IAAI,CAAA;AAEtB,MAAA,IACE,CAACgC,GAAG,IACJ,CAACA,GAAG,CAACC,SAAS,IACd,CAACD,GAAG,CAACC,SAAS,CAAC7C,MAAM,IACrB,CAAC4C,GAAG,CAACC,SAAS,CAAC7C,MAAM,CAAC6C,SAAS,IAC/B,CAACD,GAAG,CAACC,SAAS,CAAC7C,MAAM,CAAC6C,SAAS,CAACC,UAAU,EAC1C;AACA,QAAA,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC,CAAA;AAClE,OAAA;AAEA,MAAA,MAAM/C,MAAM,GAAG4C,GAAG,CAACC,SAAS,CAAC7C,MAAM,CAAA;AACnC,MAAA,MAAM8C,UAAU,GAAG9C,MAAM,CAAC6C,SAAS,CAACC,UAAU,CAAA;AAE9CnC,MAAAA,IAAI,CAACuB,KAAK,CAACc,GAAG,CAAC;QACbxD,IAAI,EAAEsD,UAAU,CAACtD,IAAI;QACrBC,SAAS,EAAEqD,UAAU,CAACrD,SAAS;AAC/BC,QAAAA,UAAU,EAAEoD,UAAU,CAACG,MAAM,CAACC,QAAQ,CAACC,IAAI;QAC3CxD,QAAQ,EAAEK,MAAM,CAACa,EAAE;QACnBjB,UAAU,EAAEgD,GAAG,CAAChD,UAAAA;AAClB,OAAC,CAAC,CAAA;AACJ,KAAC,CAAC,CAAA;GACH;AAEDwD,EAAAA,gBAAgB,EAAE,YAAW;IAC3B,IAAI,IAAI,CAACX,OAAO,CAACC,QAAQ,CAAChC,GAAG,CAAC,qBAAqB,CAAC,EAAE;AACpD,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;AACF,GAAA;AACF,CAAC,CAAC;;;;"}