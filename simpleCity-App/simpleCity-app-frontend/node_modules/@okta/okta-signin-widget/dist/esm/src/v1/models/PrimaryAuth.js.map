{"version":3,"file":"PrimaryAuth.js","sources":["../../../../../src/v1/models/PrimaryAuth.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { _, loc, Model } from '@okta/courage';\nimport CookieUtil from 'util/CookieUtil';\nimport Enums from 'util/Enums';\nimport BaseLoginModel from './BaseLoginModel';\n\nexport default BaseLoginModel.extend({\n  props: function() {\n    const cookieUsername = CookieUtil.getCookieUsername();\n    const properties = this.getUsernameAndRemember(cookieUsername);\n    const props = {\n      username: {\n        type: 'string',\n        validate: function(value) {\n          if (_.isEmpty(value)) {\n            return loc('error.username.required', 'login');\n          }\n        },\n        value: properties.username,\n      },\n      lastUsername: ['string', false, cookieUsername],\n      context: ['object', false],\n      remember: ['boolean', true, properties.remember],\n      multiOptionalFactorEnroll: ['boolean', true],\n    };\n\n    if (!(this.settings && this.settings.get('features.passwordlessAuth'))) {\n      props.password = {\n        type: 'string',\n        validate: function(value) {\n          if (_.isEmpty(value)) {\n            return loc('error.password.required', 'login');\n          }\n        },\n      };\n    }\n    return props;\n  },\n\n  getUsernameAndRemember: function(cookieUsername) {\n    const settingsUsername = this.settings && this.settings.get('username');\n    const rememberMeEnabled = this.settings && this.settings.get('features.rememberMe');\n    let remember = false;\n    let username;\n\n    if (settingsUsername) {\n      username = settingsUsername;\n      remember = rememberMeEnabled && username === cookieUsername;\n    } else if (rememberMeEnabled && cookieUsername) {\n      // Only respect the cookie if the feature is enabled.\n      // Allows us to force prompting when necessary, e.g. SAML ForceAuthn\n      username = cookieUsername;\n      remember = true;\n    }\n\n    return {\n      username: username,\n      remember: remember,\n    };\n  },\n\n  constructor: function(options) {\n    this.settings = options && options.settings;\n    this.appState = options && options.appState;\n    Model.apply(this, arguments);\n    this.listenTo(this, 'change:username', function(model, username) {\n      this.set({ remember: username === this.get('lastUsername') });\n    });\n  },\n  parse: function(options) {\n    return _.omit(options, ['settings', 'appState']);\n  },\n\n  save: function() {\n    const username = this.settings.transformUsername(this.get('username'), Enums.PRIMARY_AUTH);\n    const remember = this.get('remember');\n    const lastUsername = this.get('lastUsername');\n\n    this.setUsernameCookie(username, remember, lastUsername);\n\n    //the 'save' event here is triggered and used in the BaseLoginController\n    //to disable the primary button on the primary auth form\n    this.trigger('save');\n\n    this.appState.trigger('loading', true);\n\n    const signInArgs = this.getSignInArgs(username);\n    let primaryAuthPromise;\n\n    if (this.appState.get('isUnauthenticated')) {\n      const authClient = this.appState.settings.getAuthClient();\n\n      // bootstrapped with stateToken\n      if (this.appState.get('isIdxStateToken')) {\n        // if its an idx stateToken, we send the parameter as identifier to login API\n        primaryAuthPromise = this.doTransaction(function(transaction) {\n          return this.doPrimaryAuth(authClient, signInArgs, transaction.login);\n        });\n      } else {\n        primaryAuthPromise = this.doTransaction(function(transaction) {\n          return this.doPrimaryAuth(authClient, signInArgs, transaction.authenticate);\n        }, true);\n      }\n    } else {\n      //normal username/password flow without stateToken\n      primaryAuthPromise = this.startTransaction(function(authClient) {\n        return this.doPrimaryAuth(authClient, signInArgs, _.bind(authClient.signInWithCredentials, authClient));\n      });\n    }\n\n    return primaryAuthPromise\n      .catch(() => {\n        // Specific event handled by the Header for the case where the security image is not\n        // enabled and we want to show a spinner. (Triggered only here and handled only by Header).\n        this.appState.trigger('removeLoading');\n        CookieUtil.removeUsernameCookie();\n      })\n      .finally(() => {\n        this.appState.trigger('loading', false);\n      });\n  },\n\n  getSignInArgs: function(username) {\n    const multiOptionalFactorEnroll = this.get('multiOptionalFactorEnroll');\n    const signInArgs = {};\n\n    if (!this.settings.get('features.passwordlessAuth')) {\n      signInArgs.password = this.get('password');\n    }\n\n    // if its an idx stateToken, we send the parameter as identifier to login API\n    if (this.appState.get('isIdxStateToken')) {\n      signInArgs.identifier = username;\n    } else {\n      //only post options param for non-idx flows\n      signInArgs.username = username;\n      signInArgs.options = {\n        warnBeforePasswordExpired: true,\n        multiOptionalFactorEnroll: multiOptionalFactorEnroll,\n      };\n    }\n    return signInArgs;\n  },\n\n  setUsernameCookie: function(username, remember, lastUsername) {\n    // Do not modify the cookie when feature is disabled, relevant for SAML ForceAuthn prompts\n    if (this.settings.get('features.rememberMe')) {\n      // Only delete the cookie if its owner says so. This allows other\n      // users to log in on a one-off basis.\n      if (!remember && lastUsername === username) {\n        CookieUtil.removeUsernameCookie();\n      } else if (remember) {\n        CookieUtil.setUsernameCookie(username);\n      }\n    }\n  },\n\n  doPrimaryAuth: function(authClient, signInArgs, func) {\n    const deviceFingerprintEnabled = this.settings.get('features.deviceFingerprinting');\n    const typingPatternEnabled = this.settings.get('features.trackTypingPattern');\n\n    // Add the custom header for fingerprint, typing pattern if needed, and then remove it afterwards\n    // Since we only need to send it for primary auth\n    if (deviceFingerprintEnabled && this.appState.get('deviceFingerprint')) {\n      authClient.http.setRequestHeader('X-Device-Fingerprint', this.appState.get('deviceFingerprint'));\n    }\n    if (typingPatternEnabled && this.appState.get('typingPattern')) {\n      authClient.http.setRequestHeader('X-Typing-Pattern', this.appState.get('typingPattern'));\n    }\n\n    const self = this;\n\n    return func(signInArgs).finally(function() {\n      if (deviceFingerprintEnabled) {\n        authClient.http.setRequestHeader('X-Device-Fingerprint', undefined);\n        self.appState.unset('deviceFingerprint'); //Fingerprint can only be used once\n      }\n      if (typingPatternEnabled) {\n        authClient.http.setRequestHeader('X-Typing-Pattern', undefined);\n        self.appState.unset('typingPattern');\n      }\n    });\n  },\n});\n"],"names":["BaseLoginModel","extend","props","cookieUsername","CookieUtil","getCookieUsername","properties","getUsernameAndRemember","username","type","validate","value","_","isEmpty","loc","lastUsername","context","remember","multiOptionalFactorEnroll","settings","get","password","settingsUsername","rememberMeEnabled","constructor","options","appState","Model","apply","arguments","listenTo","model","set","parse","omit","save","transformUsername","Enums","PRIMARY_AUTH","setUsernameCookie","trigger","signInArgs","getSignInArgs","primaryAuthPromise","authClient","getAuthClient","doTransaction","transaction","doPrimaryAuth","login","authenticate","startTransaction","bind","signInWithCredentials","catch","removeUsernameCookie","finally","identifier","warnBeforePasswordExpired","func","deviceFingerprintEnabled","typingPatternEnabled","http","setRequestHeader","self","undefined","unset"],"mappings":"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"}