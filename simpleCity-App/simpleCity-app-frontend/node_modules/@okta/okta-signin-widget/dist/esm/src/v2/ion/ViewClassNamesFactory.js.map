{"version":3,"file":"ViewClassNamesFactory.js","sources":["../../../../../src/v2/ion/ViewClassNamesFactory.js"],"sourcesContent":["/* eslint complexity: [2, 25] */\nimport { AUTHENTICATOR_KEY, FORMS } from './RemediationConstants';\n\nconst FORMNAME_CLASSNAME_MAPPINGS = {\n  [FORMS.IDENTIFY]: {\n    [FORMS.IDENTIFY]: 'primary-auth',\n    [AUTHENTICATOR_KEY.PASSWORD]: 'primary-auth'\n  },\n  [FORMS.IDENTIFY_RECOVERY]: {\n    [FORMS.IDENTIFY_RECOVERY]: 'forgot-password',\n  },\n  [FORMS.ENROLL_PROFILE]: {\n    [FORMS.ENROLL_PROFILE]: 'registration',\n  },\n  [FORMS.CHALLENGE_AUTHENTICATOR]: {\n    [AUTHENTICATOR_KEY.EMAIL]: 'mfa-verify-passcode',\n    [AUTHENTICATOR_KEY.PASSWORD]: 'mfa-verify-password',\n    sms: 'mfa-verify-passcode',\n    voice: 'mfa-verify-passcode',\n    [AUTHENTICATOR_KEY.SECURITY_QUESTION]: 'mfa-verify-question',\n    [AUTHENTICATOR_KEY.WEBAUTHN]: 'mfa-verify-webauthn',\n    [AUTHENTICATOR_KEY.ON_PREM]: 'mfa-verify-totp',\n    [AUTHENTICATOR_KEY.RSA]: 'mfa-verify-totp',\n    [AUTHENTICATOR_KEY.OV]: 'mfa-verify',\n    [AUTHENTICATOR_KEY.GOOGLE_OTP]: 'mfa-verify',\n    [AUTHENTICATOR_KEY.DUO]: 'mfa-verify-duo',\n    [AUTHENTICATOR_KEY.SYMANTEC_VIP]: 'mfa-verify',\n    [AUTHENTICATOR_KEY.YUBIKEY]: 'mfa-verify',\n    [AUTHENTICATOR_KEY.CUSTOM_APP]: 'mfa-verify',\n  },\n  [FORMS.CHALLENGE_POLL]: {\n    [AUTHENTICATOR_KEY.OV]: 'mfa-verify',\n    [AUTHENTICATOR_KEY.CUSTOM_APP]: 'mfa-verify',\n  },\n  [FORMS.RESEND_PUSH]: {\n    [AUTHENTICATOR_KEY.OV]: 'mfa-verify',\n    [AUTHENTICATOR_KEY.CUSTOM_APP]: 'mfa-verify',\n  },\n  [FORMS.ENROLL_AUTHENTICATOR]: {\n    [AUTHENTICATOR_KEY.EMAIL]: 'enroll-email',\n    [AUTHENTICATOR_KEY.PASSWORD]: 'enroll-password',\n    sms: 'enroll-sms',\n    voice: 'enroll-call',\n    [AUTHENTICATOR_KEY.SECURITY_QUESTION]: 'enroll-question',\n    [AUTHENTICATOR_KEY.WEBAUTHN]: 'enroll-webauthn',\n    [AUTHENTICATOR_KEY.ON_PREM]: 'enroll-onprem',\n    [AUTHENTICATOR_KEY.RSA]: 'enroll-rsa',\n    [AUTHENTICATOR_KEY.DUO]: 'enroll-duo',\n    [AUTHENTICATOR_KEY.SYMANTEC_VIP]: 'enroll-symantec',\n    [AUTHENTICATOR_KEY.YUBIKEY]: 'enroll-yubikey',\n  },\n\n  [FORMS.SELECT_AUTHENTICATOR_ENROLL]: {\n    'select-authenticator-enroll': 'enroll-choices'\n  },\n  [FORMS.SELECT_AUTHENTICATOR_AUTHENTICATE]: {\n    [AUTHENTICATOR_KEY.PASSWORD]: 'forgot-password'\n  },\n  [FORMS.REENROLL_AUTHENTICATOR]: {\n    [AUTHENTICATOR_KEY.PASSWORD]: 'password-expired'\n  },\n  [FORMS.REENROLL_CUSTOM_PASSWORD_EXPIRY]: {\n    [AUTHENTICATOR_KEY.PASSWORD]: 'custom-password-expired'\n  },\n  [FORMS.REENROLL_CUSTOM_PASSWORD_EXPIRY_WARNING]: {\n    [AUTHENTICATOR_KEY.PASSWORD]: 'custom-password-expiry-warning'\n  },\n\n  [FORMS.RESET_AUTHENTICATOR]: {\n    [AUTHENTICATOR_KEY.PASSWORD]: 'forgot-password'\n  },\n\n  [FORMS.CONSENT_ADMIN]: {\n    [FORMS.CONSENT_ADMIN]: 'admin-consent-required',\n  },\n\n  [FORMS.CONSENT_ENDUSER]: {\n    [FORMS.CONSENT_ENDUSER]: 'consent-required',\n  }\n};\n\nconst getV1ClassName = (formName, authenticatorKey, methodType, isPasswordRecoveryFlow) => {\n  // if password reset flow from identifier page with recoveryAuthenticator add forgot-password class\n  if (isPasswordRecoveryFlow && formName === FORMS.IDENTIFY) {\n    return 'forgot-password';\n  } else {\n    let key = formName;\n    if (authenticatorKey === AUTHENTICATOR_KEY.PHONE) {\n      // Both sms and call have same type phone\n      // currentAuthenticatorEnrollment is during verify and currentAuthenticator during enroll flows\n      key = `${methodType}`;\n    }\n    else if (authenticatorKey) {\n      key = `${authenticatorKey}`;\n    }\n\n    if (FORMNAME_CLASSNAME_MAPPINGS[formName] && FORMNAME_CLASSNAME_MAPPINGS[formName][key]) {\n      return FORMNAME_CLASSNAME_MAPPINGS[formName][key];\n    } else {\n      return null;\n    }\n  }\n};\n\nconst getClassNameMapping = (formName, authenticatorKey, methodType, isPasswordRecoveryFlow) => {\n\n  // 1. Generates V2 class name\n  // If we have a type which is authenticatorType/methodType use that to generate a V2 className\n  // Otherwise just use formName\n  let v2ClassName = formName;\n  if (authenticatorKey) {\n    v2ClassName = v2ClassName + '--' + authenticatorKey;\n  }\n\n  // 2. do a lookup for any V1 classNames and concat\n  let v1ClassName = getV1ClassName(\n    formName,\n    authenticatorKey,\n    methodType,\n    isPasswordRecoveryFlow,\n  );\n  const result = [v2ClassName];\n  if (v1ClassName) {\n    result.push(v1ClassName);\n  }\n\n  return result;\n};\n\nexport {\n  getClassNameMapping,\n  getV1ClassName\n};\n\n"],"names":["FORMNAME_CLASSNAME_MAPPINGS","FORMS","IDENTIFY","AUTHENTICATOR_KEY","PASSWORD","IDENTIFY_RECOVERY","ENROLL_PROFILE","CHALLENGE_AUTHENTICATOR","EMAIL","sms","voice","SECURITY_QUESTION","WEBAUTHN","ON_PREM","RSA","OV","GOOGLE_OTP","DUO","SYMANTEC_VIP","YUBIKEY","CUSTOM_APP","CHALLENGE_POLL","RESEND_PUSH","ENROLL_AUTHENTICATOR","SELECT_AUTHENTICATOR_ENROLL","SELECT_AUTHENTICATOR_AUTHENTICATE","REENROLL_AUTHENTICATOR","REENROLL_CUSTOM_PASSWORD_EXPIRY","REENROLL_CUSTOM_PASSWORD_EXPIRY_WARNING","RESET_AUTHENTICATOR","CONSENT_ADMIN","CONSENT_ENDUSER","getV1ClassName","formName","authenticatorKey","methodType","isPasswordRecoveryFlow","key","PHONE","getClassNameMapping","v2ClassName","v1ClassName","result","push"],"mappings":"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"}