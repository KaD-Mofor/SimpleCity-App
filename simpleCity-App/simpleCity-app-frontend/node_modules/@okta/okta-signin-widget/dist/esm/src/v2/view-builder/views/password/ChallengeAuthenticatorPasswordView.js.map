{"version":3,"file":"ChallengeAuthenticatorPasswordView.js","sources":["../../../../../../../src/v2/view-builder/views/password/ChallengeAuthenticatorPasswordView.js"],"sourcesContent":["import { loc } from '@okta/courage';\nimport { BaseForm } from '../../internals';\nimport AuthenticatorFooter from '../../components/AuthenticatorFooter';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView';\nimport { getForgotPasswordLink } from '../../utils/LinksUtil';\nimport { isCustomizedI18nKey } from '../../../ion/i18nTransformer';\n\n\nconst Body = BaseForm.extend({\n\n  title: function() {\n    return loc('oie.password.challenge.title', 'login');\n  },\n\n  save: function() {\n    return loc('mfa.challenge.verify', 'login');\n  },\n\n  /**\n   * Update UI schemas for customization from .widgetrc.js or Admin Customization settings page.\n   * @returns Array\n   */\n  getUISchema() {\n    const schemas = BaseForm.prototype.getUISchema.apply(this, arguments);\n\n    const { settings } = this.options;\n    const passwordExplainLabeli18nKey = 'primaryauth.password.tooltip';\n\n    const passwordSchema = schemas.find(({name}) => name === 'credentials.passcode');\n\n    if (passwordSchema && isCustomizedI18nKey(passwordExplainLabeli18nKey, settings)) {\n      passwordSchema.explain = loc(passwordExplainLabeli18nKey, 'login');\n      passwordSchema['explain-top'] = true;\n    }\n\n    return schemas;\n  },\n\n});\n\nconst Footer = AuthenticatorFooter.extend({\n  links: function() {\n    let links = AuthenticatorFooter.prototype.links.apply(this, arguments);\n\n    links = getForgotPasswordLink(this.options.appState, this.options.settings).concat(links);\n\n    return links;\n  }\n});\n\nexport default BaseAuthenticatorView.extend({\n  Body,\n  Footer,\n});\n"],"names":["Body","BaseForm","extend","title","loc","save","getUISchema","schemas","prototype","apply","arguments","settings","options","passwordExplainLabeli18nKey","passwordSchema","find","name","isCustomizedI18nKey","explain","Footer","AuthenticatorFooter","links","getForgotPasswordLink","appState","concat","BaseAuthenticatorView"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,MAAMA,IAAI,GAAGC,QAAQ,CAACC,MAAM,CAAC;AAE3BC,EAAAA,KAAK,EAAE,YAAW;AAChB,IAAA,OAAOC,GAAG,CAAC,8BAA8B,EAAE,OAAO,CAAC,CAAA;GACpD;AAEDC,EAAAA,IAAI,EAAE,YAAW;AACf,IAAA,OAAOD,GAAG,CAAC,sBAAsB,EAAE,OAAO,CAAC,CAAA;GAC5C;AAED;AACF;AACA;AACA;AACEE,EAAAA,WAAW,EAAG,YAAA;AACZ,IAAA,MAAMC,OAAO,GAAGN,QAAQ,CAACO,SAAS,CAACF,WAAW,CAACG,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,CAAA;IAErE,MAAM;AAAEC,MAAAA,QAAQ,EAARA,QAAAA;KAAU,GAAG,IAAI,CAACC,OAAO,CAAA;IACjC,MAAMC,2BAA2B,GAAG,8BAA8B,CAAA;AAElE,IAAA,MAAMC,cAAc,GAAGP,OAAO,CAACQ,IAAI,CAAC,CAAC;AAACC,MAAAA,IAAI,EAAJA,IAAAA;AAAI,KAAC,KAAKA,IAAI,KAAK,sBAAsB,CAAC,CAAA;IAEhF,IAAIF,cAAc,IAAIG,mBAAmB,CAACJ,2BAA2B,EAAEF,QAAQ,CAAC,EAAE;MAChFG,cAAc,CAACI,OAAO,GAAGd,GAAG,CAACS,2BAA2B,EAAE,OAAO,CAAC,CAAA;AAClEC,MAAAA,cAAc,CAAC,aAAa,CAAC,GAAG,IAAI,CAAA;AACtC,KAAA;AAEA,IAAA,OAAOP,OAAO,CAAA;AAChB,GAAA;AAEF,CAAC,CAAC,CAAA;AAEF,MAAMY,MAAM,GAAGC,mBAAmB,CAAClB,MAAM,CAAC;AACxCmB,EAAAA,KAAK,EAAE,YAAW;AAChB,IAAA,IAAIA,KAAK,GAAGD,mBAAmB,CAACZ,SAAS,CAACa,KAAK,CAACZ,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,CAAA;AAEtEW,IAAAA,KAAK,GAAGC,qBAAqB,CAAC,IAAI,CAACV,OAAO,CAACW,QAAQ,EAAE,IAAI,CAACX,OAAO,CAACD,QAAQ,CAAC,CAACa,MAAM,CAACH,KAAK,CAAC,CAAA;AAEzF,IAAA,OAAOA,KAAK,CAAA;AACd,GAAA;AACF,CAAC,CAAC,CAAA;AAEF,yCAAeI,qBAAqB,CAACvB,MAAM,CAAC;AAC1CF,EAAAA,IAAI,EAAJA,IAAI;AACJmB,EAAAA,MAAM,EAANA,MAAAA;AACF,CAAC,CAAC;;;;"}