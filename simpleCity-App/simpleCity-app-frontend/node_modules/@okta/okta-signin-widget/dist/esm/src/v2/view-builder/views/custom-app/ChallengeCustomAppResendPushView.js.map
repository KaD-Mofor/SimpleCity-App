{"version":3,"file":"ChallengeCustomAppResendPushView.js","sources":["../../../../../../../src/v2/view-builder/views/custom-app/ChallengeCustomAppResendPushView.js"],"sourcesContent":["import { loc, createCallout } from '@okta/courage';\nimport { BaseForm } from '../../internals';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView';\n\nconst CUSTOM_APP_UV_ENABLE_BIOMETRIC_SERVER_KEY = 'oie.authenticator.custom_app.method.push.verify.enable.biometrics';\n\nconst Body = BaseForm.extend(Object.assign(\n  {\n    className: 'custom-app-verify-resend-push',\n\n    title() {\n      return loc('oie.verify.custom_app.title', 'login', [this.options.appState.getAuthenticatorDisplayName()]);\n    },\n\n    save() {\n      return loc('oie.custom_app.push.resend', 'login');\n    },\n\n    showMessages() {\n      let options = {};\n      if (this.options.appState.containsMessageWithI18nKey(CUSTOM_APP_UV_ENABLE_BIOMETRIC_SERVER_KEY)) {\n        // add a title, subtitle, and bullet-points for \n        // Custom App enable biometrics message during verification\n        options.content = null;\n        options.className = 'okta-verify-uv-callout-content';\n        options.title = loc('oie.authenticator.custom_app.method.push.verify.enable.biometrics.title',\n          'login', [this.options.appState.getAuthenticatorDisplayName()]);\n        options.subtitle =\n        loc('oie.authenticator.custom_app.method.push.verify.enable.biometrics.description', 'login');\n        options.type = 'error';\n        options.bullets = [\n          loc('oie.authenticator.custom_app.method.push.verify.enable.biometrics.point1', 'login'),\n          loc('oie.authenticator.custom_app.method.push.verify.enable.biometrics.point2',\n            'login', [this.options.appState.getAuthenticatorDisplayName()]),\n          loc('oie.authenticator.custom_app.method.push.verify.enable.biometrics.point3',\n            'login', [this.options.appState.getAuthenticatorDisplayName()])\n        ];\n        options = createCallout(options);\n      }\n      BaseForm.prototype.showMessages.call(this, options);\n    },\n  },\n));\n\nexport default BaseAuthenticatorView.extend({\n  Body,\n});\n"],"names":["CUSTOM_APP_UV_ENABLE_BIOMETRIC_SERVER_KEY","Body","BaseForm","extend","Object","assign","className","title","loc","options","appState","getAuthenticatorDisplayName","save","showMessages","containsMessageWithI18nKey","content","subtitle","type","bullets","createCallout","prototype","call","BaseAuthenticatorView"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAMA,yCAAyC,GAAG,mEAAmE,CAAA;AAErH,MAAMC,IAAI,GAAGC,QAAQ,CAACC,MAAM,CAACC,MAAM,CAACC,MAAM,CACxC;AACEC,EAAAA,SAAS,EAAE,+BAA+B;AAE1CC,EAAAA,KAAK,EAAG,YAAA;AACN,IAAA,OAAOC,GAAG,CAAC,6BAA6B,EAAE,OAAO,EAAE,CAAC,IAAI,CAACC,OAAO,CAACC,QAAQ,CAACC,2BAA2B,EAAE,CAAC,CAAC,CAAA;GAC1G;AAEDC,EAAAA,IAAI,EAAG,YAAA;AACL,IAAA,OAAOJ,GAAG,CAAC,4BAA4B,EAAE,OAAO,CAAC,CAAA;GAClD;AAEDK,EAAAA,YAAY,EAAG,YAAA;IACb,IAAIJ,OAAO,GAAG,EAAE,CAAA;IAChB,IAAI,IAAI,CAACA,OAAO,CAACC,QAAQ,CAACI,0BAA0B,CAACd,yCAAyC,CAAC,EAAE;AAC/F;AACA;MACAS,OAAO,CAACM,OAAO,GAAG,IAAI,CAAA;MACtBN,OAAO,CAACH,SAAS,GAAG,gCAAgC,CAAA;AACpDG,MAAAA,OAAO,CAACF,KAAK,GAAGC,GAAG,CAAC,yEAAyE,EAC3F,OAAO,EAAE,CAAC,IAAI,CAACC,OAAO,CAACC,QAAQ,CAACC,2BAA2B,EAAE,CAAC,CAAC,CAAA;MACjEF,OAAO,CAACO,QAAQ,GAChBR,GAAG,CAAC,+EAA+E,EAAE,OAAO,CAAC,CAAA;MAC7FC,OAAO,CAACQ,IAAI,GAAG,OAAO,CAAA;MACtBR,OAAO,CAACS,OAAO,GAAG,CAChBV,GAAG,CAAC,0EAA0E,EAAE,OAAO,CAAC,EACxFA,GAAG,CAAC,0EAA0E,EAC5E,OAAO,EAAE,CAAC,IAAI,CAACC,OAAO,CAACC,QAAQ,CAACC,2BAA2B,EAAE,CAAC,CAAC,EACjEH,GAAG,CAAC,0EAA0E,EAC5E,OAAO,EAAE,CAAC,IAAI,CAACC,OAAO,CAACC,QAAQ,CAACC,2BAA2B,EAAE,CAAC,CAAC,CAClE,CAAA;AACDF,MAAAA,OAAO,GAAGU,aAAa,CAACV,OAAO,CAAC,CAAA;AAClC,KAAA;IACAP,QAAQ,CAACkB,SAAS,CAACP,YAAY,CAACQ,IAAI,CAAC,IAAI,EAAEZ,OAAO,CAAC,CAAA;AACrD,GAAA;AACF,CAAC,CACF,CAAC,CAAA;AAEF,uCAAea,qBAAqB,CAACnB,MAAM,CAAC;AAC1CF,EAAAA,IAAI,EAAJA,IAAAA;AACF,CAAC,CAAC;;;;"}