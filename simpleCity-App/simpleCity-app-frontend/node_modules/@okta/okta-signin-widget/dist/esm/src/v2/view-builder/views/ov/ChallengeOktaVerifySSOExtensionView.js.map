{"version":3,"file":"ChallengeOktaVerifySSOExtensionView.js","sources":["../../../../../../../src/v2/view-builder/views/ov/ChallengeOktaVerifySSOExtensionView.js"],"sourcesContent":["import BaseAuthenticatorView from '../../components/BaseAuthenticatorView';\nimport { BaseForm } from '../../internals';\nimport { loc, createCallout, _ } from '@okta/courage';\nimport { getBiometricsErrorOptions } from '../../utils/ChallengeViewUtil';\n\n// for EA,\n// redirect is needed for Apple SSO Extension to intercept the request, because\n// - XHR request is not interceptable\n// - form post is interceptable, but some app (Outlook) closes the app after\n// We may have a different approach/UX for GA\nconst Body = BaseForm.extend({\n  noButtonBar: true,\n\n  className: 'ion-form device-challenge-poll',\n\n  title() {\n    return loc('deviceTrust.sso.redirectText', 'login');\n  },\n\n  initialize() {\n    BaseForm.prototype.initialize.apply(this, arguments);\n\n    this.listenTo(this.model, 'error', () => {\n      this.$('.spinner').hide();\n    });\n    this.add('<div class=\"credential-sso-extension\"><div class=\"spinner\"></div></div>');\n\n    const isGetMethod = this.options.currentViewState?.method?.toLowerCase() === 'get';\n    this.model.set('useRedirect', isGetMethod);\n    this.trigger('save', this.model);\n  },\n\n  showCustomFormErrorCallout(error) {\n    const options = getBiometricsErrorOptions(error, false);\n    \n    // If not biometrics error, just show the returned error message\n    if (_.isEmpty(options)) {\n      return false;\n    }\n\n    this.showMessages(createCallout(options));\n    return true;\n  },\n});\n\nexport default BaseAuthenticatorView.extend({\n  Body,\n});\n"],"names":["Body","BaseForm","extend","noButtonBar","className","title","loc","initialize","prototype","apply","arguments","listenTo","model","$","hide","add","isGetMethod","options","currentViewState","method","toLowerCase","set","trigger","showCustomFormErrorCallout","error","getBiometricsErrorOptions","_","isEmpty","showMessages","createCallout","BaseAuthenticatorView"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA,MAAMA,IAAI,GAAGC,QAAQ,CAACC,MAAM,CAAC;AAC3BC,EAAAA,WAAW,EAAE,IAAI;AAEjBC,EAAAA,SAAS,EAAE,gCAAgC;AAE3CC,EAAAA,KAAK,EAAG,YAAA;AACN,IAAA,OAAOC,GAAG,CAAC,8BAA8B,EAAE,OAAO,CAAC,CAAA;GACpD;AAEDC,EAAAA,UAAU,EAAG,YAAA;AAAA,IAAA,IAAA,qBAAA,EAAA,sBAAA,CAAA;IACXN,QAAQ,CAACO,SAAS,CAACD,UAAU,CAACE,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,CAAA;IAEpD,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACC,KAAK,EAAE,OAAO,EAAE,MAAM;AACvC,MAAA,IAAI,CAACC,CAAC,CAAC,UAAU,CAAC,CAACC,IAAI,EAAE,CAAA;AAC3B,KAAC,CAAC,CAAA;AACF,IAAA,IAAI,CAACC,GAAG,CAAC,yEAAyE,CAAC,CAAA;AAEnF,IAAA,MAAMC,WAAW,GAAG,CAAI,CAAA,qBAAA,GAAA,IAAA,CAACC,OAAO,CAACC,gBAAgB,MAA7B,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,sBAAA,GAAA,qBAAA,CAA+BC,MAAM,MAArC,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,sBAAA,CAAuCC,WAAW,EAAE,MAAK,KAAK,CAAA;IAClF,IAAI,CAACR,KAAK,CAACS,GAAG,CAAC,aAAa,EAAEL,WAAW,CAAC,CAAA;IAC1C,IAAI,CAACM,OAAO,CAAC,MAAM,EAAE,IAAI,CAACV,KAAK,CAAC,CAAA;GACjC;EAEDW,0BAA0B,EAAA,UAACC,KAAK,EAAE;AAChC,IAAA,MAAMP,OAAO,GAAGQ,yBAAyB,CAACD,KAAK,EAAE,KAAK,CAAC,CAAA;;AAEvD;AACA,IAAA,IAAIE,cAAC,CAACC,OAAO,CAACV,OAAO,CAAC,EAAE;AACtB,MAAA,OAAO,KAAK,CAAA;AACd,KAAA;AAEA,IAAA,IAAI,CAACW,YAAY,CAACC,aAAa,CAACZ,OAAO,CAAC,CAAC,CAAA;AACzC,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;AACF,CAAC,CAAC,CAAA;AAEF,0CAAea,qBAAqB,CAAC5B,MAAM,CAAC;AAC1CF,EAAAA,IAAI,EAAJA,IAAAA;AACF,CAAC,CAAC;;;;"}