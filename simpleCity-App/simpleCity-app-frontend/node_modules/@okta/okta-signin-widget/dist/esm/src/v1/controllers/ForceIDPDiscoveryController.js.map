{"version":3,"file":"ForceIDPDiscoveryController.js","sources":["../../../../../src/v1/controllers/ForceIDPDiscoveryController.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2017, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport Spinner from 'v1/views/shared/Spinner';\nimport BaseLoginController from 'v1/util/BaseLoginController';\nimport Util from 'util/Util';\n\nexport default BaseLoginController.extend({\n  className: 'force-idp-discovery',\n\n  View: Spinner,\n\n  Model: {},\n\n  initialize: function() {\n    const OKTA_IDP_TYPE = 'OKTA';\n    const RESOURCE = 'okta:acct:';\n\n    const options = this.options;\n    const lastAuthResponse = options.appState.get('lastAuthResponse');\n    const stateToken = lastAuthResponse && lastAuthResponse?.stateToken;\n\n    const webfingerArgs = {\n      resource: RESOURCE,\n      requestContext: stateToken,\n    };\n\n    options.appState.settings.getAuthClient()\n      .webfinger(webfingerArgs)\n      .then(res => {\n        if (res?.links && res.links[0]) {\n          if (res.links[0].properties['okta:idp:type'] !== OKTA_IDP_TYPE && res.links[0].href) {\n            const redirectFn = res.links[0].href.includes('OKTA_INVALID_SESSION_REPOST%3Dtrue')\n              ? Util.redirectWithFormGet.bind(Util)\n              : this.settings.get('redirectUtilFn');\n            //override redirectFn to only use Util.redirectWithFormGet if OKTA_INVALID_SESSION_REPOST is included\n            //it will be encoded since it will be included in the encoded fromURI\n\n            redirectFn(res.links[0].href);\n            return;\n          }\n        }\n        options.appState.trigger('navigate', '');\n      })\n      .catch(() => {\n        // TODO: OKTA-436775 Show error instead of navigating to default route\n        options.appState.trigger('navigate', '');\n      });\n  },\n\n});\n"],"names":["BaseLoginController","extend","className","View","Spinner","Model","initialize","OKTA_IDP_TYPE","RESOURCE","options","lastAuthResponse","appState","get","stateToken","webfingerArgs","resource","requestContext","settings","getAuthClient","webfinger","then","res","links","properties","href","redirectFn","includes","Util","redirectWithFormGet","bind","trigger","catch"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA,kCAAeA,mBAAmB,CAACC,MAAM,CAAC;AACxCC,EAAAA,SAAS,EAAE,qBAAqB;AAEhCC,EAAAA,IAAI,EAAEC,OAAO;EAEbC,KAAK,EAAE,EAAE;AAETC,EAAAA,UAAU,EAAE,YAAW;IACrB,MAAMC,aAAa,GAAG,MAAM,CAAA;IAC5B,MAAMC,QAAQ,GAAG,YAAY,CAAA;AAE7B,IAAA,MAAMC,OAAO,GAAG,IAAI,CAACA,OAAO,CAAA;IAC5B,MAAMC,gBAAgB,GAAGD,OAAO,CAACE,QAAQ,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAAA;IACjE,MAAMC,UAAU,GAAGH,gBAAgB,KAAIA,gBAAgB,aAAhBA,gBAAgB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhBA,gBAAgB,CAAEG,UAAU,CAAA,CAAA;AAEnE,IAAA,MAAMC,aAAa,GAAG;AACpBC,MAAAA,QAAQ,EAAEP,QAAQ;AAClBQ,MAAAA,cAAc,EAAEH,UAAAA;KACjB,CAAA;AAEDJ,IAAAA,OAAO,CAACE,QAAQ,CAACM,QAAQ,CAACC,aAAa,EAAE,CACtCC,SAAS,CAACL,aAAa,CAAC,CACxBM,IAAI,CAACC,GAAG,IAAI;AACX,MAAA,IAAIA,GAAG,KAAA,IAAA,IAAHA,GAAG,KAAA,KAAA,CAAA,IAAHA,GAAG,CAAEC,KAAK,IAAID,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;QAC9B,IAAID,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,UAAU,CAAC,eAAe,CAAC,KAAKhB,aAAa,IAAIc,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,EAAE;AACnF,UAAA,MAAMC,UAAU,GAAGJ,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,CAACE,QAAQ,CAAC,oCAAoC,CAAC,GAC/EC,IAAI,CAACC,mBAAmB,CAACC,IAAI,CAACF,IAAI,CAAC,GACnC,IAAI,CAACV,QAAQ,CAACL,GAAG,CAAC,gBAAgB,CAAC,CAAA;AACvC;AACA;;UAEAa,UAAU,CAACJ,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAA;AAC7B,UAAA,OAAA;AACF,SAAA;AACF,OAAA;MACAf,OAAO,CAACE,QAAQ,CAACmB,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAA;AAC1C,KAAC,CAAC,CACDC,KAAK,CAAC,MAAM;AACX;MACAtB,OAAO,CAACE,QAAQ,CAACmB,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAA;AAC1C,KAAC,CAAC,CAAA;AACN,GAAA;AAEF,CAAC,CAAC;;;;"}