{"version":3,"file":"EnrollementChannelDataOktaVerifyView.js","sources":["../../../../../../../src/v2/view-builder/views/ov/EnrollementChannelDataOktaVerifyView.js"],"sourcesContent":["import { loc, _, Model } from '@okta/courage';\nimport { BaseForm, BaseView } from '../../internals';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView';\nimport CountryUtil from '../../../../util/CountryUtil';\nimport SwitchEnrollChannelLinkView from './SwitchEnrollChannelLinkView';\n\nconst Body = BaseForm.extend({\n  className: 'oie-enroll-ov-data',\n  title() {\n    return this.options.appState.get('currentAuthenticator').contextualData.selectedChannel === 'email' ?\n      loc('oie.enroll.okta_verify.enroll.channel.email.title', 'login'):\n      loc('oie.enroll.okta_verify.enroll.channel.sms.title', 'login');\n  },\n\n  save() {\n    return loc('oie.enroll.okta_verify.setupLink', 'login');\n  },\n\n  getUISchema() {\n    const uiSchemas = BaseForm.prototype.getUISchema.apply(this, arguments);\n    const phoneNumberUISchema = _.find(uiSchemas, ({ name }) => name === 'phoneNumber');\n    const phoneNumberUISchemaIndex = _.findIndex(uiSchemas, ({ name }) => name === 'phoneNumber');\n\n    const countryUISchema = {\n      'label-top': true,\n      label: loc('country.label', 'login'),\n      type: 'select',\n      options: CountryUtil.getCountries(),\n      name: 'country',\n      wide: true,\n    };\n\n    // Create an input group - serves as a display wrapper\n    const phoneNumberWithCodeUISchema = {\n      label: loc('mfa.phoneNumber.placeholder', 'login'),\n      type: 'group',\n      modelType: 'string',\n      'label-top': true,\n      name: 'phoneCode',\n      input: [\n        {\n          type: 'label',\n          /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n          label: `+${this.model.get('phoneCode')}`,\n          className: 'country-code-label no-translate',\n        },\n        Object.assign({}, phoneNumberUISchema),\n      ],\n    };\n\n    if (phoneNumberUISchemaIndex !== -1) {\n      // Replace phoneNumberUISchema and add countryUISchema before phone.\n      uiSchemas.splice(phoneNumberUISchemaIndex, 1, countryUISchema, phoneNumberWithCodeUISchema);\n    }\n\n    const description = {\n      View: this.options.appState.get('currentAuthenticator').contextualData.selectedChannel === 'email' ?\n        loc('oie.enroll.okta_verify.channel.email.description', 'login'):\n        loc('oie.enroll.okta_verify.channel.sms.description', 'login'),\n      selector: '.o-form-fieldset-container',\n    };\n\n    uiSchemas.push(description);\n    return uiSchemas;\n  },\n\n  handlePhoneCodeChange() {\n    const countryCodeField = this.el.querySelector('.country-code-label');\n    countryCodeField.innerText = `+${this.model.get('phoneCode')}`;\n  },\n\n  initialize() {\n    BaseForm.prototype.initialize.apply(this, arguments);\n    if (this.options.appState.get('currentAuthenticator').contextualData.selectedChannel === 'sms') {\n      this.listenTo(this.model, 'change:phoneCode', this.handlePhoneCodeChange.bind(this));\n    }\n  },\n});\n\nexport default BaseAuthenticatorView.extend({\n  Body,\n  createModelClass() {\n    const ModelClass = BaseView.prototype.createModelClass.apply(this, arguments);\n    if (this.options.appState.get('currentAuthenticator').contextualData.selectedChannel !== 'sms') {\n      return ModelClass;\n    }\n    const local = Object.assign(\n      {\n        country: {\n          // Set default country to \"US\"\n          'value': this.settings.get('defaultCountryCode'),\n          'type': 'string',\n        },\n      },\n      ModelClass.prototype.local,\n    );\n    const derived = Object.assign(\n      {\n        phoneCode: {\n          deps: [ 'country'],\n          fn: function(country) {\n            return CountryUtil.getCallingCodeForCountry(country);\n          },\n        },\n      },\n      ModelClass.prototype.derived,\n    );\n    return ModelClass.extend({\n      local,\n      derived,\n      toJSON: function() {\n        const modelJSON = Model.prototype.toJSON.call(this, arguments);\n        const phoneCode = this.get('phoneCode');\n\n        // Add country code..\n        let formattedPhoneNumber = `+${phoneCode}${modelJSON.phoneNumber}`;\n\n        // Override phone with formatted number..\n        modelJSON.phoneNumber = formattedPhoneNumber;\n        return modelJSON;\n      },\n    });\n  },\n  postRender() {\n    this.add(SwitchEnrollChannelLinkView, 'form');\n  },\n});\n"],"names":["Body","BaseForm","extend","className","title","options","appState","get","contextualData","selectedChannel","loc","save","getUISchema","uiSchemas","prototype","apply","arguments","phoneNumberUISchema","_","find","name","phoneNumberUISchemaIndex","findIndex","countryUISchema","label","type","CountryUtil","getCountries","wide","phoneNumberWithCodeUISchema","modelType","input","model","Object","assign","splice","description","View","selector","push","handlePhoneCodeChange","countryCodeField","el","querySelector","innerText","initialize","listenTo","bind","BaseAuthenticatorView","createModelClass","ModelClass","BaseView","local","country","settings","derived","phoneCode","deps","fn","getCallingCodeForCountry","toJSON","modelJSON","Model","call","formattedPhoneNumber","phoneNumber","postRender","add","SwitchEnrollChannelLinkView"],"mappings":"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"}