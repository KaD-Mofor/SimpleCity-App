{"version":3,"file":"OAuth2Util.js","sources":["../../../../src/util/OAuth2Util.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport _ from 'underscore';\nimport { loc } from './loc';\nimport Enums from './Enums';\nimport { getTypedOAuthError, NonRecoverableError } from './OAuthErrors';\nimport Util from './Util';\nconst util = {};\n\n// https://github.com/okta/okta-auth-js#authorize-options\nconst AUTH_PARAMS = [\n  'responseType',\n  'scopes',\n  'state',\n  'nonce',\n  'idp',\n  'idpScope',\n  'display',\n  'prompt',\n  'maxAge',\n  'loginHint'\n];\nutil.AUTH_PARAMS = AUTH_PARAMS;\n\n/**\n * Get the tokens in the OIDC/OAUTH flows\n *\n * @param settings - settings model object\n * @param params - {idp: 'xxx'} for social auth\n *                 {sessionToken: 'xxx'} for okta idp\n */\nutil.getTokens = function(settings, params, controller) {\n  function success(result) {\n    settings.callGlobalSuccess(Enums.SUCCESS, result);\n  }\n\n  function error(error) {\n    const typedError = getTypedOAuthError(error);\n    if (typedError.is('terminal')) {\n      controller.model.appState.set('flashError', typedError);\n      controller.model.appState.trigger('navigate', 'signin/error');\n    } else if (typedError.is('inline')) {\n      controller.model.trigger('error', controller.model, {\n        responseJSON: {\n          errorSummary: typedError.errorDetails.errorSummary\n        }\n      });\n      controller.model.appState.trigger('removeLoading');\n    }\n\n    if (!typedError.is('terminal')) {\n      Util.triggerAfterError(controller, typedError, settings);\n    }\n\n    if (typedError instanceof NonRecoverableError) {\n      settings.callGlobalError(typedError);\n    }\n  }\n\n  const authClient = settings.getAuthClient();\n  const isAuthorizationCodeFlow = authClient.isAuthorizationCodeFlow() && !authClient.isPKCE();\n  const options = settings.toJSON({ verbose: true });\n  const getTokenOptions = {};\n\n  _.extend(\n    getTokenOptions,\n    _.pick(options, 'clientId', 'redirectUri'),\n    _.pick(options.authParams, AUTH_PARAMS),\n    params\n  );\n\n  // Extra Options for Social Idp popup window title and id_token response timeout\n  getTokenOptions.popupTitle = loc('socialauth.popup.title', 'login');\n  getTokenOptions.timeout = options.oAuthTimeout;\n\n  // Redirect flow - this can be used when logging into an external IDP, or\n  // converting the Okta sessionToken to an access_token, id_token, and/or\n  // authorization code. Note: The authorization code flow will always redirect.\n  if (options.redirect === 'always' || isAuthorizationCodeFlow) {\n    authClient.token.getWithRedirect(getTokenOptions).catch(error);\n  } else if (getTokenOptions.sessionToken) {\n    // Default flow if logging in with Okta as the IDP - convert sessionToken to\n    // tokens in a hidden iframe. Used in Single Page Apps where the app does\n    // not want to redirect away from the page to convert the token.\n    authClient.token.getWithoutPrompt(getTokenOptions).then(success).catch(error);\n  } else {\n    // Default flow if logging in with an external IDP - opens a popup and\n    // gets the token from a postMessage response.\n    authClient.token.getWithPopup(getTokenOptions).then(success).catch(error);\n  }\n};\n\nexport default util;\n"],"names":["util","AUTH_PARAMS","getTokens","settings","params","controller","success","result","callGlobalSuccess","Enums","SUCCESS","error","typedError","getTypedOAuthError","is","model","appState","set","trigger","responseJSON","errorSummary","errorDetails","Util","triggerAfterError","NonRecoverableError","callGlobalError","authClient","getAuthClient","isAuthorizationCodeFlow","isPKCE","options","toJSON","verbose","getTokenOptions","_","extend","pick","authParams","popupTitle","loc","timeout","oAuthTimeout","redirect","token","getWithRedirect","catch","sessionToken","getWithoutPrompt","then","getWithPopup"],"mappings":"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"}