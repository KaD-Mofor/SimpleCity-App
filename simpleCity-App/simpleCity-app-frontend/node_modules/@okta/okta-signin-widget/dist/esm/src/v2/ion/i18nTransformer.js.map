{"version":3,"file":"i18nTransformer.js","sources":["../../../../../src/v2/ion/i18nTransformer.js"],"sourcesContent":["/* eslint-disable max-len */\n/* eslint max-statements: [2, 25], complexity: [2, 15] */\n\n/*!\n * Copyright (c) 2020, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n///////////////////////////////////////////////////////////////////////////////\n//                                  How this transformer work?               //\n//\n// ## For Labels inside remediation forms\n// 1. Figure out Path for all Labels (for normal field, or options) or Placeholder (for checkbox),e.g.\n//   - `identify.identifier`, this is the label for user name at identify page\n//   - `select-authenticator-enroll.authenticator.email`,\n//      this is for label for email authenticator at `select-authenticator-enroll` page\n// 2. Define a mapping between the path and i18n key. see `I18N_OVERRIDE_MAPPINGS`\n//   - This mapping is subject to change when API starts sending i18n key along with label.\n//     It probably becomes a mapping between API's i18n key and key in login.properties\n//     in order to be backward compatible.\n// 3. Now find i18n value using such route: `i18n Path -> i18n key -> login.properties`\n//    If found an i18n value, replace label by this i18n value.\n//\n// ## For top level messages\n// 1. Overwrite `message.message` if `message.i18n.key` exists in `login.properties`\n//\n// ## How to override mappings in I18N_OVERRIDE_MAPPINGS for localization?\n// Step 1. First search the string in login.properties and see if already exists or not\n// Step 2. Find idx response path, for eg. select-authenticator-enroll.authenticator.email\n// Step 3. Make that path a key and add it to I18N_OVERRIDE_MAPPINGS if doesn't exist already\n// Step 4. If you find a key in Step 1 that already exists, use it as value of key created in Step 3, \n//          else create a new label `oie.your.new.label` and add it.\n// Step 5. If you create a new label then add that to login.properties file with proper string\n//         oie.your.new.label = Your new string\n///////////////////////////////////////////////////////////////////////////////\n\n\nimport { _, $ } from '@okta/courage';\nimport Logger from 'util/Logger';\nimport { AUTHENTICATOR_KEY } from './RemediationConstants';\nimport {\n  getMessage,\n  getI18NParams,\n  getI18NValue,\n} from './i18nUtils';\nexport * from './i18nUtils';\n\nconst updateLabelForUiSchema = (remediation, uiSchema) => {\n  if (uiSchema.mutable === false && uiSchema.name.indexOf('questionKey') < 0) {\n    return;\n  }\n  Logger.info('i18n label transformer');\n  Logger.info('\\t remediationName: ', remediation.name);\n  Logger.info('\\t uiSchema: ', JSON.stringify(uiSchema));\n\n  const authenticatorKey = remediation.relatesTo?.value?.key;\n  const authenticatorKeyPath = authenticatorKey\n    ? `.${remediation.relatesTo.value.key}`\n    : '';\n\n  const i18nPrefix = `${remediation.name}${authenticatorKeyPath}.`;\n  let i18nPath = `${i18nPrefix}${uiSchema.name}`;\n\n  if (uiSchema.type === 'text' && uiSchema.name.indexOf('questionKey') >= 0 && uiSchema.value !== 'custom') {\n    i18nPath = `${i18nPath}.${uiSchema.value}`;\n  }\n\n  if (uiSchema.type === 'checkbox' && uiSchema.placeholder) {\n    Logger.info('\\t 1: ', i18nPath);\n    uiSchema.placeholder = getI18NValue(i18nPath, uiSchema.placeholder);\n  }\n\n  if (uiSchema.label) {\n    Logger.info('\\t 2: ', i18nPath);\n    const params = getI18NParams(remediation, authenticatorKey);\n    uiSchema.label = uiSchema.customLabel ? uiSchema.label : getI18NValue(i18nPath, uiSchema.label, params);\n  }\n  if ($.isPlainObject(uiSchema.options)) {\n    uiSchema.options = _.mapObject(uiSchema.options, (value, key) => {\n      const i18nPathOption = `${i18nPath}.${key}`;\n      Logger.info('\\t 3: ', i18nPathOption);\n      return getI18NValue(i18nPathOption, value);\n    });\n  }\n  if (Array.isArray(uiSchema.options)) {\n    uiSchema.options.forEach(o => {\n      if (!o.label) {\n        return;\n      }\n      let i18nPathOption;\n      if (o.authenticatorKey) {\n        i18nPathOption = `${i18nPath}.${o.authenticatorKey}`;\n\n        const methodType = o.value?.methodType;\n        if (o.authenticatorKey === AUTHENTICATOR_KEY.OV && methodType) {\n          i18nPathOption = `${i18nPathOption}.${methodType}`;\n        }\n      } else if (typeof o.value === 'string' || typeof o.value === 'number') { // value could be string, number, object or undefined.\n        i18nPathOption = `${i18nPath}.${o.value}`;\n      } else {\n        i18nPathOption = i18nPath;\n      }\n      Logger.info('\\t 4: ', i18nPathOption);\n      o.label = getI18NValue(i18nPathOption, o.label);\n    });\n  }\n\n  if (Array.isArray(uiSchema.optionsUiSchemas)) {\n    uiSchema.optionsUiSchemas.forEach(optionsUiSchema => {\n      optionsUiSchema.forEach(uiSchema => updateLabelForUiSchema(remediation, uiSchema));\n    });\n  }\n\n};\n\nexport default (transformedResp) => {\n  // Try to override label using i18n value\n  if (Array.isArray(transformedResp.remediations)) {\n    transformedResp.remediations\n      .filter(remediation => Array.isArray(remediation.uiSchema) && remediation.uiSchema.length)\n      .forEach(remediation => {\n        remediation.uiSchema.forEach(uiSchema => updateLabelForUiSchema(remediation, uiSchema));\n      });\n  }\n\n  // Try to override `messages` using i18n value.\n  // 1. This is only handling top level `messages` object when response status is 200.\n  // 2. See `IonResponseHelper.js` where handle `messages` object when none 200 response.\n  // 3. Handling `messages` in remediation forms on 200 response is not considered yet.\n  //    Is that possible?\n  if (Array.isArray(transformedResp.messages?.value)) {\n    transformedResp.messages.value.forEach(message => {\n      message.message = getMessage(message);\n    });\n  }\n  return transformedResp;\n};\n"],"names":["updateLabelForUiSchema","remediation","uiSchema","mutable","name","indexOf","Logger","info","JSON","stringify","authenticatorKey","relatesTo","value","key","authenticatorKeyPath","i18nPrefix","i18nPath","type","placeholder","getI18NValue","label","params","getI18NParams","customLabel","$","isPlainObject","options","_","mapObject","i18nPathOption","Array","isArray","forEach","o","methodType","AUTHENTICATOR_KEY","OV","optionsUiSchemas","optionsUiSchema","transformedResp","remediations","filter","length","messages","message","getMessage"],"mappings":"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"}