{"version":3,"file":"oie.js","sources":["../../../../src/authClient/oie.ts"],"sourcesContent":["// OIE supports only IDX pipeline\nimport {\n  createOktaAuthOAuth,\n  mixinIdx,\n  IdxTransactionMeta,\n  IdxStorageManagerInterface,\n  createIdxStorageManager,\n  createIdxOptionsConstructor,\n  OktaAuthIdxOptions,\n  IdxTransactionManagerInterface,\n  createIdxTransactionManager\n} from '@okta/okta-auth-js';\n\n// okta-auth-js supports a mixin pattern that allows us to compose a custom version containing only the code we need\n// build an AuthJS client that supports only the OIE engine\n\ntype M = IdxTransactionMeta;\ntype S = IdxStorageManagerInterface<M>;\ntype O = OktaAuthIdxOptions;\ntype TM = IdxTransactionManagerInterface;\n\nconst OptionsConstructor = createIdxOptionsConstructor();\nconst StorageManager = createIdxStorageManager<M>();\nconst IdxTransactionManager = createIdxTransactionManager();\n\n// Start with OAuth as base\nconst OktaAuthOAuth = createOktaAuthOAuth<M, S, O, TM>(StorageManager, OptionsConstructor, IdxTransactionManager);\n\n// Mixin IDX support\nconst OktaAuth = mixinIdx(OktaAuthOAuth);\n\nexport { OktaAuth };\n"],"names":["OptionsConstructor","createIdxOptionsConstructor","StorageManager","createIdxStorageManager","IdxTransactionManager","createIdxTransactionManager","OktaAuthOAuth","createOktaAuthOAuth","OktaAuth","mixinIdx"],"mappings":";;AAAA;;AAaA;AACA;;AAOA,MAAMA,kBAAkB,GAAGC,2BAA2B,EAAE,CAAA;AACxD,MAAMC,cAAc,GAAGC,uBAAuB,EAAK,CAAA;AACnD,MAAMC,qBAAqB,GAAGC,2BAA2B,EAAE,CAAA;;AAE3D;AACA,MAAMC,aAAa,GAAGC,mBAAmB,CAAcL,cAAc,EAAEF,kBAAkB,EAAEI,qBAAqB,CAAC,CAAA;;AAEjH;AACA,MAAMI,QAAQ,GAAGC,QAAQ,CAACH,aAAa;;;;"}