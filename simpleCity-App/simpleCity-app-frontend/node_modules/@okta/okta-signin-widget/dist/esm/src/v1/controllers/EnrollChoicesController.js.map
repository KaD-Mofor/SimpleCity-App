{"version":3,"file":"EnrollChoicesController.js","sources":["../../../../../src/v1/controllers/EnrollChoicesController.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint complexity: [2, 13] */\n\nimport { _, loc, Collection } from '@okta/courage';\nimport hbs from '@okta/handlebars-inline-precompile';\nimport FactorList from 'v1/views/enroll-choices/FactorList';\nimport Footer from 'v1/views/enroll-choices/Footer';\nimport RequiredFactorList from 'v1/views/enroll-choices/RequiredFactorList';\nimport Enums from 'util/Enums';\nimport FormController from 'v1/util/FormController';\nimport RouterUtil from 'v1/util/RouterUtil';\nconst subtitleTpl = hbs('<span>{{{subtitle}}}</span>');\nexport default FormController.extend({\n  className: 'enroll-choices',\n  state: {\n    pageType: null,\n  },\n\n  Model: {},\n\n  Form: {\n    noCancelButton: true,\n\n    title: _.partial(loc, 'enroll.choices.title', 'login'),\n\n    noButtonBar: function() {\n      return this.state.get('pageType') === Enums.ALL_OPTIONAL_NONE_ENROLLED;\n    },\n\n    subtitle: ' ',\n\n    getSubtitle: function() {\n      switch (this.state.get('pageType')) {\n      case Enums.ALL_OPTIONAL_SOME_ENROLLED:\n      case Enums.HAS_REQUIRED_ALL_REQUIRED_ENROLLED:\n        return loc('enroll.choices.optional', 'login');\n      case Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED: {\n        const remainingDays = this.options.appState.get('gracePeriodRemainingDays');\n\n        // remainingDays is null if there is no grace period, 0 if we are still in grace period\n        return (remainingDays !== null && remainingDays >= 0)\n          ? this.getGracePeriodSubtitle(remainingDays)\n          : this.getDefaultSubtitle();\n      }\n      default:\n        return this.getDefaultSubtitle();\n      }\n    },\n\n    getDefaultSubtitle: function() {\n      return this.settings.get('brandName')\n        ? loc('enroll.choices.description.specific', 'login', [this.settings.get('brandName')])\n        : loc('enroll.choices.description.generic', 'login');\n    },\n\n    getGracePeriodSubtitle: function(remainingDays) {\n      return remainingDays >= 1\n        ? loc('enroll.choices.description.gracePeriod.bold', 'login', [remainingDays])\n        : loc('enroll.choices.description.gracePeriod.oneDay.bold', 'login');\n    },\n\n    save: function() {\n      switch (this.state.get('pageType')) {\n      case Enums.ALL_OPTIONAL_SOME_ENROLLED:\n      case Enums.HAS_REQUIRED_ALL_REQUIRED_ENROLLED:\n        return loc('enroll.choices.submit.finish', 'login');\n      case Enums.HAS_REQUIRED_NONE_ENROLLED:\n        return loc('enroll.choices.submit.configure', 'login');\n      case Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED:\n        return loc('enroll.choices.submit.next', 'login');\n      default:\n        return '';\n      }\n    },\n\n    initialize: function(options) {\n      this.listenTo(this, 'save', function() {\n        let current;\n\n        switch (this.state.get('pageType')) {\n        case Enums.HAS_REQUIRED_NONE_ENROLLED:\n        case Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED:\n          current = options.appState.get('factors').getFirstUnenrolledRequiredFactor();\n          options.appState.trigger(\n            'navigate',\n            RouterUtil.createEnrollFactorUrl(current.get('provider'), current.get('factorType'))\n          );\n          break;\n        default:\n          return this.model.doTransaction(function(transaction) {\n            return transaction.skip();\n          });\n        }\n      });\n    },\n\n    preRender: function() {\n      // form subtitle does not support unescaped strings, and we need some html elements\n      // in the subtitle for this form. So instead of a regular subtitle, we add a <span>\n      // with the text we need\n      this.add(subtitleTpl({ subtitle: this.getSubtitle() }), 'p.okta-form-subtitle');\n\n      const factors = this.options.appState.get('factors');\n\n      switch (this.state.get('pageType')) {\n      case Enums.HAS_REQUIRED_NONE_ENROLLED:\n      case Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED:\n        this.add(\n          new RequiredFactorList({\n            minimize: true,\n            collection: new Collection(factors.where({ required: true })),\n            appState: this.options.appState,\n          })\n        );\n        break;\n      case Enums.HAS_REQUIRED_ALL_REQUIRED_ENROLLED:\n      case Enums.ALL_OPTIONAL_SOME_ENROLLED:\n      case Enums.ALL_OPTIONAL_NONE_ENROLLED: {\n        const enrolled = factors.where({ enrolled: true });\n        const notEnrolled = factors.filter(function(factor) {\n          // pick factors that are not enrolled or have additional enrollments\n          return !factor.get('enrolled') || factor.get('additionalEnrollment');\n        });\n        let notEnrolledListTitle;\n\n        if (enrolled.length > 0) {\n          notEnrolledListTitle = loc('enroll.choices.list.optional', 'login');\n          this.add(\n            new FactorList({\n              listTitle: loc('enroll.choices.list.enrolled', 'login'),\n              minimize: true,\n              collection: new Collection(enrolled),\n              appState: this.options.appState,\n            })\n          );\n        }\n        this.add(\n          new FactorList({\n            listTitle: notEnrolledListTitle,\n            collection: new Collection(notEnrolled),\n            appState: this.options.appState,\n            showInlineSetupButton: true,\n          })\n        );\n        break;\n      }\n      }\n    },\n  },\n\n  initialize: function(options) {\n    let numRequiredEnrolled = 0;\n    let numRequiredNotEnrolled = 0;\n    let numOptionalEnrolled = 0;\n    let numOptionalNotEnrolled = 0;\n    let hasRequired;\n    let pageType;\n\n    options.appState.get('factors').each(function(factor) {\n      const required = factor.get('required');\n      const enrolled = factor.get('enrolled');\n      const additionalEnrollment = factor.get('additionalEnrollment');\n\n      if (required && enrolled) {\n        numRequiredEnrolled++;\n      } else if (required && !enrolled) {\n        numRequiredNotEnrolled++;\n      } else if (!required && enrolled) {\n        numOptionalEnrolled++;\n      } else if (!required && !enrolled) {\n        numOptionalNotEnrolled++;\n      }\n      // If a factor has multiple instances and\n      // additional optional enrollments\n      if (enrolled && additionalEnrollment) {\n        numOptionalNotEnrolled++;\n      }\n    });\n\n    hasRequired = numRequiredEnrolled > 0 || numRequiredNotEnrolled > 0;\n\n    // There are 5 possible states this screen can be in:\n\n    // 1. Has required, but none have been enrolled. Wizard start page.\n    if (hasRequired && numRequiredEnrolled === 0) {\n      pageType = Enums.HAS_REQUIRED_NONE_ENROLLED;\n    } else if (hasRequired && numRequiredNotEnrolled > 0) {\n      // 2. Has required, and have enrolled at least one. The page layout\n      //    to configure the remaining required factors.\n      pageType = Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED;\n    } else if (hasRequired && numOptionalNotEnrolled > 0) {\n      // 3. Has required, and finished enrolling all required factors. The\n      //    page layout you see to configure any optional factors or skip.\n      pageType = Enums.HAS_REQUIRED_ALL_REQUIRED_ENROLLED;\n    } else if (numOptionalEnrolled === 0 && numOptionalNotEnrolled > 0) {\n      // 4. Factors are all optional, no factors enrolled.\n      pageType = Enums.ALL_OPTIONAL_NONE_ENROLLED;\n    } else if (numOptionalNotEnrolled > 0) {\n      // 5. Factors are all optional, some factors have already been\n      //    enrolled (can either enroll more or skip).\n      pageType = Enums.ALL_OPTIONAL_SOME_ENROLLED;\n    } else {\n      // 6. Factors are all optional, all factors have already been\n      //    enrolled, among them there is OktaVerify with Push enrolled as totp\n      //    (API return OktaVerify push factor as unenrolled in this case and as we always merge\n      //    push and totp in UI so we redirect to skip link here).\n      this.model.doTransaction(function(transaction) {\n        return transaction.skip();\n      });\n    }\n\n    this.state.set('pageType', pageType);\n\n    if (this.options.appState.get('skipLink') && pageType === Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED) {\n      this.add(new Footer(this.toJSON()));\n    }\n  },\n});\n"],"names":["subtitleTpl","FormController","extend","className","state","pageType","Model","Form","noCancelButton","title","_","partial","loc","noButtonBar","get","Enums","ALL_OPTIONAL_NONE_ENROLLED","subtitle","getSubtitle","ALL_OPTIONAL_SOME_ENROLLED","HAS_REQUIRED_ALL_REQUIRED_ENROLLED","HAS_REQUIRED_SOME_REQUIRED_ENROLLED","remainingDays","options","appState","getGracePeriodSubtitle","getDefaultSubtitle","settings","save","HAS_REQUIRED_NONE_ENROLLED","initialize","listenTo","current","getFirstUnenrolledRequiredFactor","trigger","RouterUtil","createEnrollFactorUrl","model","doTransaction","transaction","skip","preRender","add","factors","RequiredFactorList","minimize","collection","Collection","where","required","enrolled","notEnrolled","filter","factor","notEnrolledListTitle","length","FactorList","listTitle","showInlineSetupButton","numRequiredEnrolled","numRequiredNotEnrolled","numOptionalEnrolled","numOptionalNotEnrolled","hasRequired","each","additionalEnrollment","set","Footer","toJSON"],"mappings":"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"}