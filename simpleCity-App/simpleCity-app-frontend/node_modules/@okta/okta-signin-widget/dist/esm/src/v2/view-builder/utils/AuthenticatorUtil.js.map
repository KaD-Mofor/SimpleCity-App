{"version":3,"file":"AuthenticatorUtil.js","sources":["../../../../../../src/v2/view-builder/utils/AuthenticatorUtil.js"],"sourcesContent":["/*!\n * Copyright (c) 2020, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport _ from 'underscore';\nimport { loc } from '../../../util/loc';\nimport FactorUtil from 'util/FactorUtil';\nimport { AUTHENTICATOR_KEY } from '../../ion/RemediationConstants';\n\nconst { getPasswordComplexityDescriptionForHtmlList } = FactorUtil;\n\nconst getButtonDataSeAttr = function(authenticator) {\n  if (authenticator.authenticatorKey) {\n    const method = authenticator.value?.methodType ?\n      '-' + authenticator.value?.methodType : '';\n    return authenticator.authenticatorKey + method;\n  }\n  return '';\n};\n\n/* eslint complexity: [0, 0], max-statements: [2, 25] */\nconst getAuthenticatorData = function(authenticator, isVerifyAuthenticator) {\n  const authenticatorKey = authenticator.authenticatorKey;\n  const key = _.isString(authenticatorKey) ? authenticatorKey.toLowerCase() : '';\n  let authenticatorData = {};\n  let nicknameText = isVerifyAuthenticator ? authenticator.relatesTo?.nickname : undefined;\n  switch (key) {\n  case AUTHENTICATOR_KEY.EMAIL:\n    Object.assign(authenticatorData, {\n      description: isVerifyAuthenticator\n        ? authenticator.relatesTo?.profile?.email || ''\n        : loc('oie.email.authenticator.description', 'login'),\n      iconClassName: 'mfa-okta-email',\n      buttonDataSeAttr: getButtonDataSeAttr(authenticator),\n      ariaLabel: isVerifyAuthenticator\n        ? getVerifyEmailAriaLabel(authenticator.relatesTo?.profile?.email)\n        : loc('oie.select.authenticator.enroll.email.label', 'login')\n    });\n    break;\n\n  case AUTHENTICATOR_KEY.PASSWORD:\n    Object.assign(authenticatorData, {\n      description: isVerifyAuthenticator\n        ? ''\n        : loc('oie.password.authenticator.description', 'login'),\n      iconClassName: 'mfa-okta-password',\n      buttonDataSeAttr: getButtonDataSeAttr(authenticator),\n      ariaLabel: isVerifyAuthenticator\n        ? loc('oie.select.authenticator.verify.password.label', 'login')\n        : loc('oie.select.authenticator.enroll.password.label', 'login')\n    });\n    break;\n\n  case AUTHENTICATOR_KEY.PHONE:\n    Object.assign(authenticatorData, {\n      nickname: nicknameText,\n      description: isVerifyAuthenticator\n        ? authenticator.relatesTo?.profile?.phoneNumber\n        : loc('oie.phone.authenticator.description', 'login'),\n      iconClassName: 'mfa-okta-phone',\n      noTranslateClassName: isVerifyAuthenticator ? 'no-translate' : '',\n      buttonDataSeAttr: getButtonDataSeAttr(authenticator),\n      ariaLabel: isVerifyAuthenticator\n        ? getVerifyPhoneAriaLabel(authenticator.relatesTo?.profile?.phoneNumber)\n        : loc('oie.select.authenticator.enroll.phone.label', 'login')\n    });\n    break;\n\n  case AUTHENTICATOR_KEY.SECURITY_QUESTION:\n    Object.assign(authenticatorData, {\n      description: isVerifyAuthenticator\n        ? ''\n        : loc('oie.security.question.authenticator.description', 'login'),\n      iconClassName: 'mfa-okta-security-question',\n      buttonDataSeAttr: getButtonDataSeAttr(authenticator),\n      ariaLabel: isVerifyAuthenticator\n        ? loc('oie.select.authenticator.verify.security.question.label', 'login')\n        : loc('oie.select.authenticator.enroll.security.question.label', 'login')\n    });\n    break;\n\n  case AUTHENTICATOR_KEY.WEBAUTHN:\n    Object.assign(authenticatorData, {\n      description: isVerifyAuthenticator\n        ? ''\n        : loc('oie.webauthn.description', 'login'),\n      iconClassName: 'mfa-webauthn',\n      buttonDataSeAttr: getButtonDataSeAttr(authenticator),\n      ariaLabel: isVerifyAuthenticator\n        ? loc('oie.select.authenticator.verify.webauthn.label', 'login')\n        : loc('oie.select.authenticator.enroll.webauthn.label', 'login')\n    });\n    break;\n\n  case AUTHENTICATOR_KEY.OV:\n    Object.assign(authenticatorData, {\n      description: isVerifyAuthenticator\n        ? loc('oie.okta_verify.label', 'login')\n        : loc('oie.okta_verify.authenticator.description', 'login'),\n      iconClassName: 'mfa-okta-verify',\n      buttonDataSeAttr: getButtonDataSeAttr(authenticator),\n      ariaLabel: getOktaVerifyAriaLabel(isVerifyAuthenticator, authenticator?.value?.methodType),\n    });\n    break;\n\n  case AUTHENTICATOR_KEY.GOOGLE_OTP:\n    Object.assign(authenticatorData, {\n      description: isVerifyAuthenticator\n        ? ''\n        : loc('oie.google_authenticator.authenticator.description', 'login'),\n      iconClassName: 'mfa-google-auth',\n      buttonDataSeAttr: getButtonDataSeAttr(authenticator),\n      ariaLabel: isVerifyAuthenticator\n        ? loc('oie.select.authenticator.verify.named.authenticator.label', 'login', [authenticator.label])\n        : loc('oie.select.authenticator.enroll.named.authenticator.label', 'login', [authenticator.label])\n    });\n    break;\n\n  case AUTHENTICATOR_KEY.ON_PREM: {\n    const vendorName =  authenticator.relatesTo?.displayName ||\n      loc('oie.on_prem.authenticator.default.vendorName', 'login');\n    Object.assign(authenticatorData, {\n      description: isVerifyAuthenticator\n        ? ''\n        : loc('oie.on_prem.authenticator.description', 'login', [vendorName]),\n      iconClassName: 'mfa-onprem',\n      buttonDataSeAttr: getButtonDataSeAttr(authenticator),\n      ariaLabel: isVerifyAuthenticator\n        ? loc('oie.select.authenticator.verify.named.authenticator.label', 'login', [authenticator.label])\n        : loc('oie.select.authenticator.enroll.named.authenticator.label', 'login', [authenticator.label])\n    });\n    break;\n  }\n\n  case AUTHENTICATOR_KEY.RSA:\n    Object.assign(authenticatorData, {\n      description: isVerifyAuthenticator\n        ? ''\n        : loc('oie.rsa.authenticator.description', 'login'),\n      iconClassName: 'mfa-rsa',\n      buttonDataSeAttr: getButtonDataSeAttr(authenticator),\n      ariaLabel: isVerifyAuthenticator\n        ? loc('oie.select.authenticator.verify.named.authenticator.label', 'login', [authenticator.label])\n        : loc('oie.select.authenticator.enroll.named.authenticator.label', 'login', [authenticator.label])\n    });\n    break;\n\n  case AUTHENTICATOR_KEY.DUO:\n    Object.assign(authenticatorData, {\n      description: isVerifyAuthenticator\n        ? ''\n        : loc('oie.duo.authenticator.description', 'login'),\n      iconClassName: 'mfa-duo',\n      buttonDataSeAttr: getButtonDataSeAttr(authenticator),\n      ariaLabel: isVerifyAuthenticator\n        ? loc('oie.select.authenticator.verify.named.authenticator.label', 'login', [authenticator.label])\n        : loc('oie.select.authenticator.enroll.named.authenticator.label', 'login', [authenticator.label])\n    });\n    break;\n\n  case AUTHENTICATOR_KEY.IDP: {\n    const idpName =  authenticator.relatesTo?.displayName;\n    Object.assign(authenticatorData, {\n      description: isVerifyAuthenticator\n        ? ''\n        : loc('oie.idp.authenticator.description', 'login', [idpName]),\n      iconClassName: 'mfa-custom-factor',\n      buttonDataSeAttr: getButtonDataSeAttr(authenticator),\n      logoUri : authenticator?.relatesTo?.logoUri || '',\n      ariaLabel: isVerifyAuthenticator\n        ? loc('oie.select.authenticator.verify.named.authenticator.label', 'login', [authenticator.label])\n        : loc('oie.select.authenticator.enroll.named.authenticator.label', 'login', [authenticator.label])\n    });\n    break;\n  }\n  case AUTHENTICATOR_KEY.CUSTOM_OTP: {\n    Object.assign(authenticatorData, {\n      description: isVerifyAuthenticator\n        ? ''\n        : loc('oie.custom_otp.description', 'login'),\n      iconClassName: 'mfa-hotp',\n      buttonDataSeAttr: getButtonDataSeAttr(authenticator),\n      ariaLabel: isVerifyAuthenticator\n        ? loc('oie.select.authenticator.verify.named.authenticator.label', 'login', [authenticator.label])\n        : loc('oie.select.authenticator.enroll.named.authenticator.label', 'login', [authenticator.label])\n    });\n    break;\n  }\n\n  case AUTHENTICATOR_KEY.SYMANTEC_VIP: {\n    const appName =  authenticator.relatesTo?.displayName;\n    Object.assign(authenticatorData, {\n      description: isVerifyAuthenticator\n        ? ''\n        : loc('oie.symantecVip.authenticator.description', 'login', [appName]),\n      iconClassName: 'mfa-symantec',\n      buttonDataSeAttr: getButtonDataSeAttr(authenticator),\n      ariaLabel: isVerifyAuthenticator\n        ? loc('oie.select.authenticator.verify.named.authenticator.label', 'login', [authenticator.label])\n        : loc('oie.select.authenticator.enroll.named.authenticator.label', 'login', [authenticator.label])\n    });\n    break;\n  }\n\n  case AUTHENTICATOR_KEY.YUBIKEY: {\n    Object.assign(authenticatorData, {\n      description: isVerifyAuthenticator\n        ? ''\n        : loc('oie.yubikey.authenticator.description', 'login'),\n      iconClassName: 'mfa-yubikey',\n      buttonDataSeAttr: getButtonDataSeAttr(authenticator),\n      ariaLabel: isVerifyAuthenticator\n        ? loc('oie.select.authenticator.verify.named.authenticator.label', 'login', [authenticator.label])\n        : loc('oie.select.authenticator.enroll.named.authenticator.label', 'login', [authenticator.label])\n    });\n    break;\n  }\n\n  case AUTHENTICATOR_KEY.CUSTOM_APP: {\n    Object.assign(authenticatorData, {\n      description: isVerifyAuthenticator\n        ? authenticator?.relatesTo?.displayName\n        : loc('oie.custom.app.authenticator.description', 'login', [authenticator.label]),\n      noTranslateClassName: isVerifyAuthenticator ? 'no-translate' : '',\n      buttonDataSeAttr: getButtonDataSeAttr(authenticator),\n      iconClassName: 'mfa-custom-app-logo',\n      logoUri : authenticator?.relatesTo?.logoUri || '',\n      ariaLabel: isVerifyAuthenticator\n        ? loc(\n          'oie.select.authenticator.verify.named.authenticator.label',\n          'login',\n          [authenticator?.relatesTo?.displayName])\n        : loc('oie.select.authenticator.enroll.named.authenticator.label', 'login', [authenticator.label])\n    });\n    break;\n  }\n\n  case AUTHENTICATOR_KEY.SMARTCARD: {\n    Object.assign(authenticatorData, {\n      description: isVerifyAuthenticator\n        ? ''  \n        : loc('oie.smartcard.authenticator.description', 'login'),\n      iconClassName: 'mfa-smartcard',\n      buttonDataSeAttr: getButtonDataSeAttr(authenticator),\n      ariaLabel: isVerifyAuthenticator\n        ? loc('oie.select.authenticator.verify.named.authenticator.label', 'login', [authenticator.label])\n        : loc('oie.select.authenticator.enroll.named.authenticator.label', 'login', [authenticator.label])\n    });\n    break;\n  }\n\n  }\n  return authenticatorData;\n};\n\nexport function getVerifyEmailAriaLabel(email) {\n  return email\n    ? loc('oie.select.authenticator.verify.email.with.email.label', 'login', [email])\n    : loc('oie.select.authenticator.verify.email.label', 'login');\n}\n\nexport function getVerifyPhoneAriaLabel(phone) {\n  return phone\n    ? loc('oie.select.authenticator.verify.phone.with.phone.label', 'login', [phone])\n    : loc('oie.select.authenticator.verify.phone.label', 'login');\n}\n\nexport function getOktaVerifyAriaLabel(isVerify, methodType) {\n  if (!isVerify) {\n    return loc('oie.select.authenticator.enroll.okta_verify.authenticator.label', 'login');\n  }\n  const defaultLabel = loc('oie.select.authenticator.verify.okta_verify.label', 'login');\n  if (typeof methodType === 'undefined') {\n    return defaultLabel;\n  }\n  const methodTypeLabelMap = {\n    push: loc('oie.select.authenticator.okta_verify.push.label', 'login'),\n    totp: loc('oie.select.authenticator.okta_verify.totp.label', 'login'),\n    'signed_nonce': loc('oie.select.authenticator.okta_verify.signed_nonce.label', 'login'),\n  };\n  return methodTypeLabelMap[methodType] || defaultLabel;\n}\n\nexport function getAuthenticatorDataForEnroll(authenticator) {\n  return getAuthenticatorData(authenticator);\n}\n\nexport function getAuthenticatorDataForVerification(authenticator) {\n  return getAuthenticatorData(authenticator, true);\n}\n\nexport function getIconClassNameForBeacon(authenticatorKey) {\n  return getAuthenticatorData({ authenticatorKey }).iconClassName;\n}\n\nexport function removeRequirementsFromError(errorJSON) {\n  if (errorJSON.errorCauses?.length > 0\n    && Array.isArray(errorJSON.errorCauses[0].errorSummary)\n    && errorJSON.errorCauses[0].errorSummary.length > 0) {\n    // Change from Array to string for all errors.\n    errorJSON.errorCauses[0].errorSummary = errorJSON.errorCauses[0].errorSummary[0];\n\n    // Overrides for particular error messages.\n    const errorKey = errorJSON.errorCauses[0].errorKey?.length > 0 && errorJSON.errorCauses[0].errorKey[0];\n    // Remove the requirements string only if this is requirements were not met error.\n    if (errorKey === 'password.passwordRequirementsNotMet') {\n      errorJSON.errorCauses[0].errorSummary = loc('registration.error.password.passwordRequirementsNotMet', 'login');\n    }\n  }\n  return errorJSON;\n}\n\n/**\n * Get authenticator display name from {@code remediation}.\n *\n * @param {Object} remediation\n */\nexport function getAuthenticatorDisplayName(remediation) {\n  return remediation.relatesTo?.value?.displayName;\n}\n\n// Re-export function from FactorUtil\nexport { getPasswordComplexityDescriptionForHtmlList };\n"],"names":["getPasswordComplexityDescriptionForHtmlList","FactorUtil","getButtonDataSeAttr","authenticator","authenticatorKey","method","value","methodType","getAuthenticatorData","isVerifyAuthenticator","key","_","isString","toLowerCase","authenticatorData","nicknameText","relatesTo","nickname","undefined","AUTHENTICATOR_KEY","EMAIL","Object","assign","description","profile","email","loc","iconClassName","buttonDataSeAttr","ariaLabel","getVerifyEmailAriaLabel","PASSWORD","PHONE","phoneNumber","noTranslateClassName","getVerifyPhoneAriaLabel","SECURITY_QUESTION","WEBAUTHN","OV","getOktaVerifyAriaLabel","GOOGLE_OTP","label","ON_PREM","vendorName","displayName","RSA","DUO","IDP","idpName","logoUri","CUSTOM_OTP","SYMANTEC_VIP","appName","YUBIKEY","CUSTOM_APP","SMARTCARD","phone","isVerify","defaultLabel","methodTypeLabelMap","push","totp","getAuthenticatorDataForEnroll","getAuthenticatorDataForVerification","getIconClassNameForBeacon","removeRequirementsFromError","errorJSON","errorCauses","length","Array","isArray","errorSummary","errorKey","getAuthenticatorDisplayName","remediation"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMM,MAAA;AAAEA,EAAAA,2CAA2C,EAA3CA,2CAAAA;AAA4C,CAAC,GAAGC,GAAU;AAElE,MAAMC,mBAAmB,GAAG,UAASC,aAAa,EAAE;EAClD,IAAIA,aAAa,CAACC,gBAAgB,EAAE;AAAA,IAAA,IAAA,oBAAA,EAAA,qBAAA,CAAA;AAClC,IAAA,MAAMC,MAAM,GAAG,CAAA,oBAAA,GAAAF,aAAa,CAACG,KAAK,iDAAnB,oBAAqBC,CAAAA,UAAU,GAC5C,GAAG,IAAA,CAAA,qBAAA,GAAGJ,aAAa,CAACG,KAAK,0DAAnB,qBAAqBC,CAAAA,UAAU,IAAG,EAAE,CAAA;AAC5C,IAAA,OAAOJ,aAAa,CAACC,gBAAgB,GAAGC,MAAM,CAAA;AAChD,GAAA;AACA,EAAA,OAAO,EAAE,CAAA;AACX,CAAC,CAAA;;AAED;AACA,MAAMG,oBAAoB,GAAG,UAASL,aAAa,EAAEM,qBAAqB,EAAE;AAAA,EAAA,IAAA,qBAAA,EAAA,sBAAA,EAAA,sBAAA,EAAA,sBAAA,EAAA,sBAAA,EAAA,sBAAA,EAAA,sBAAA,EAAA,sBAAA,EAAA,sBAAA,EAAA,qBAAA,CAAA;AAC1E,EAAA,MAAML,gBAAgB,GAAGD,aAAa,CAACC,gBAAgB,CAAA;AACvD,EAAA,MAAMM,GAAG,GAAGC,CAAC,CAACC,QAAQ,CAACR,gBAAgB,CAAC,GAAGA,gBAAgB,CAACS,WAAW,EAAE,GAAG,EAAE,CAAA;EAC9E,IAAIC,iBAAiB,GAAG,EAAE,CAAA;EAC1B,IAAIC,YAAY,GAAGN,qBAAqB,GAAGN,CAAAA,qBAAAA,GAAAA,aAAa,CAACa,SAAS,MAAvB,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAyBC,QAAQ,GAAGC,SAAS,CAAA;AACxF,EAAA,QAAQR,GAAG;IACX,KAAKS,iBAAiB,CAACC,KAAK;AAC1BC,MAAAA,MAAM,CAACC,MAAM,CAACR,iBAAiB,EAAE;QAC/BS,WAAW,EAAEd,qBAAqB,GAC9B,CAAA,CAAA,sBAAA,GAAAN,aAAa,CAACa,SAAS,qFAAvB,sBAAyBQ,CAAAA,OAAO,2DAAhC,sBAAkCC,CAAAA,KAAK,KAAI,EAAE,GAC7CC,GAAG,CAAC,qCAAqC,EAAE,OAAO,CAAC;AACvDC,QAAAA,aAAa,EAAE,gBAAgB;AAC/BC,QAAAA,gBAAgB,EAAE1B,mBAAmB,CAACC,aAAa,CAAC;QACpD0B,SAAS,EAAEpB,qBAAqB,GAC5BqB,uBAAuB,2BAAC3B,aAAa,CAACa,SAAS,MAAvB,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,sBAAA,GAAA,sBAAA,CAAyBQ,OAAO,MAAhC,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,sBAAA,CAAkCC,KAAK,CAAC,GAChEC,GAAG,CAAC,6CAA6C,EAAE,OAAO,CAAA;AAChE,OAAC,CAAC,CAAA;AACF,MAAA,MAAA;IAEF,KAAKP,iBAAiB,CAACY,QAAQ;AAC7BV,MAAAA,MAAM,CAACC,MAAM,CAACR,iBAAiB,EAAE;QAC/BS,WAAW,EAAEd,qBAAqB,GAC9B,EAAE,GACFiB,GAAG,CAAC,wCAAwC,EAAE,OAAO,CAAC;AAC1DC,QAAAA,aAAa,EAAE,mBAAmB;AAClCC,QAAAA,gBAAgB,EAAE1B,mBAAmB,CAACC,aAAa,CAAC;AACpD0B,QAAAA,SAAS,EAAEpB,qBAAqB,GAC5BiB,GAAG,CAAC,gDAAgD,EAAE,OAAO,CAAC,GAC9DA,GAAG,CAAC,gDAAgD,EAAE,OAAO,CAAA;AACnE,OAAC,CAAC,CAAA;AACF,MAAA,MAAA;IAEF,KAAKP,iBAAiB,CAACa,KAAK;AAC1BX,MAAAA,MAAM,CAACC,MAAM,CAACR,iBAAiB,EAAE;AAC/BG,QAAAA,QAAQ,EAAEF,YAAY;AACtBQ,QAAAA,WAAW,EAAEd,qBAAqB,GAAA,CAAA,sBAAA,GAC9BN,aAAa,CAACa,SAAS,qFAAvB,sBAAyBQ,CAAAA,OAAO,MAAhC,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,sBAAA,CAAkCS,WAAW,GAC7CP,GAAG,CAAC,qCAAqC,EAAE,OAAO,CAAC;AACvDC,QAAAA,aAAa,EAAE,gBAAgB;AAC/BO,QAAAA,oBAAoB,EAAEzB,qBAAqB,GAAG,cAAc,GAAG,EAAE;AACjEmB,QAAAA,gBAAgB,EAAE1B,mBAAmB,CAACC,aAAa,CAAC;QACpD0B,SAAS,EAAEpB,qBAAqB,GAC5B0B,uBAAuB,2BAAChC,aAAa,CAACa,SAAS,MAAvB,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,sBAAA,GAAA,sBAAA,CAAyBQ,OAAO,MAAhC,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,sBAAA,CAAkCS,WAAW,CAAC,GACtEP,GAAG,CAAC,6CAA6C,EAAE,OAAO,CAAA;AAChE,OAAC,CAAC,CAAA;AACF,MAAA,MAAA;IAEF,KAAKP,iBAAiB,CAACiB,iBAAiB;AACtCf,MAAAA,MAAM,CAACC,MAAM,CAACR,iBAAiB,EAAE;QAC/BS,WAAW,EAAEd,qBAAqB,GAC9B,EAAE,GACFiB,GAAG,CAAC,iDAAiD,EAAE,OAAO,CAAC;AACnEC,QAAAA,aAAa,EAAE,4BAA4B;AAC3CC,QAAAA,gBAAgB,EAAE1B,mBAAmB,CAACC,aAAa,CAAC;AACpD0B,QAAAA,SAAS,EAAEpB,qBAAqB,GAC5BiB,GAAG,CAAC,yDAAyD,EAAE,OAAO,CAAC,GACvEA,GAAG,CAAC,yDAAyD,EAAE,OAAO,CAAA;AAC5E,OAAC,CAAC,CAAA;AACF,MAAA,MAAA;IAEF,KAAKP,iBAAiB,CAACkB,QAAQ;AAC7BhB,MAAAA,MAAM,CAACC,MAAM,CAACR,iBAAiB,EAAE;QAC/BS,WAAW,EAAEd,qBAAqB,GAC9B,EAAE,GACFiB,GAAG,CAAC,0BAA0B,EAAE,OAAO,CAAC;AAC5CC,QAAAA,aAAa,EAAE,cAAc;AAC7BC,QAAAA,gBAAgB,EAAE1B,mBAAmB,CAACC,aAAa,CAAC;AACpD0B,QAAAA,SAAS,EAAEpB,qBAAqB,GAC5BiB,GAAG,CAAC,gDAAgD,EAAE,OAAO,CAAC,GAC9DA,GAAG,CAAC,gDAAgD,EAAE,OAAO,CAAA;AACnE,OAAC,CAAC,CAAA;AACF,MAAA,MAAA;IAEF,KAAKP,iBAAiB,CAACmB,EAAE;AACvBjB,MAAAA,MAAM,CAACC,MAAM,CAACR,iBAAiB,EAAE;AAC/BS,QAAAA,WAAW,EAAEd,qBAAqB,GAC9BiB,GAAG,CAAC,uBAAuB,EAAE,OAAO,CAAC,GACrCA,GAAG,CAAC,2CAA2C,EAAE,OAAO,CAAC;AAC7DC,QAAAA,aAAa,EAAE,iBAAiB;AAChCC,QAAAA,gBAAgB,EAAE1B,mBAAmB,CAACC,aAAa,CAAC;AACpD0B,QAAAA,SAAS,EAAEU,sBAAsB,CAAC9B,qBAAqB,EAAEN,aAAa,KAAA,IAAA,IAAbA,aAAa,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,qBAAA,GAAbA,aAAa,CAAEG,KAAK,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAApB,sBAAsBC,UAAU,CAAA;AAC3F,OAAC,CAAC,CAAA;AACF,MAAA,MAAA;IAEF,KAAKY,iBAAiB,CAACqB,UAAU;AAC/BnB,MAAAA,MAAM,CAACC,MAAM,CAACR,iBAAiB,EAAE;QAC/BS,WAAW,EAAEd,qBAAqB,GAC9B,EAAE,GACFiB,GAAG,CAAC,oDAAoD,EAAE,OAAO,CAAC;AACtEC,QAAAA,aAAa,EAAE,iBAAiB;AAChCC,QAAAA,gBAAgB,EAAE1B,mBAAmB,CAACC,aAAa,CAAC;QACpD0B,SAAS,EAAEpB,qBAAqB,GAC5BiB,GAAG,CAAC,2DAA2D,EAAE,OAAO,EAAE,CAACvB,aAAa,CAACsC,KAAK,CAAC,CAAC,GAChGf,GAAG,CAAC,2DAA2D,EAAE,OAAO,EAAE,CAACvB,aAAa,CAACsC,KAAK,CAAC,CAAA;AACrG,OAAC,CAAC,CAAA;AACF,MAAA,MAAA;IAEF,KAAKtB,iBAAiB,CAACuB,OAAO;AAAE,MAAA;AAAA,QAAA,IAAA,uBAAA,CAAA;AAC9B,QAAA,MAAMC,UAAU,GAAI,CAAAxC,CAAAA,uBAAAA,GAAAA,aAAa,CAACa,SAAS,MAAA,IAAA,IAAA,uBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAvB,uBAAyB4B,CAAAA,WAAW,KACtDlB,GAAG,CAAC,8CAA8C,EAAE,OAAO,CAAC,CAAA;AAC9DL,QAAAA,MAAM,CAACC,MAAM,CAACR,iBAAiB,EAAE;AAC/BS,UAAAA,WAAW,EAAEd,qBAAqB,GAC9B,EAAE,GACFiB,GAAG,CAAC,uCAAuC,EAAE,OAAO,EAAE,CAACiB,UAAU,CAAC,CAAC;AACvEhB,UAAAA,aAAa,EAAE,YAAY;AAC3BC,UAAAA,gBAAgB,EAAE1B,mBAAmB,CAACC,aAAa,CAAC;UACpD0B,SAAS,EAAEpB,qBAAqB,GAC5BiB,GAAG,CAAC,2DAA2D,EAAE,OAAO,EAAE,CAACvB,aAAa,CAACsC,KAAK,CAAC,CAAC,GAChGf,GAAG,CAAC,2DAA2D,EAAE,OAAO,EAAE,CAACvB,aAAa,CAACsC,KAAK,CAAC,CAAA;AACrG,SAAC,CAAC,CAAA;AACF,QAAA,MAAA;AACF,OAAA;IAEA,KAAKtB,iBAAiB,CAAC0B,GAAG;AACxBxB,MAAAA,MAAM,CAACC,MAAM,CAACR,iBAAiB,EAAE;QAC/BS,WAAW,EAAEd,qBAAqB,GAC9B,EAAE,GACFiB,GAAG,CAAC,mCAAmC,EAAE,OAAO,CAAC;AACrDC,QAAAA,aAAa,EAAE,SAAS;AACxBC,QAAAA,gBAAgB,EAAE1B,mBAAmB,CAACC,aAAa,CAAC;QACpD0B,SAAS,EAAEpB,qBAAqB,GAC5BiB,GAAG,CAAC,2DAA2D,EAAE,OAAO,EAAE,CAACvB,aAAa,CAACsC,KAAK,CAAC,CAAC,GAChGf,GAAG,CAAC,2DAA2D,EAAE,OAAO,EAAE,CAACvB,aAAa,CAACsC,KAAK,CAAC,CAAA;AACrG,OAAC,CAAC,CAAA;AACF,MAAA,MAAA;IAEF,KAAKtB,iBAAiB,CAAC2B,GAAG;AACxBzB,MAAAA,MAAM,CAACC,MAAM,CAACR,iBAAiB,EAAE;QAC/BS,WAAW,EAAEd,qBAAqB,GAC9B,EAAE,GACFiB,GAAG,CAAC,mCAAmC,EAAE,OAAO,CAAC;AACrDC,QAAAA,aAAa,EAAE,SAAS;AACxBC,QAAAA,gBAAgB,EAAE1B,mBAAmB,CAACC,aAAa,CAAC;QACpD0B,SAAS,EAAEpB,qBAAqB,GAC5BiB,GAAG,CAAC,2DAA2D,EAAE,OAAO,EAAE,CAACvB,aAAa,CAACsC,KAAK,CAAC,CAAC,GAChGf,GAAG,CAAC,2DAA2D,EAAE,OAAO,EAAE,CAACvB,aAAa,CAACsC,KAAK,CAAC,CAAA;AACrG,OAAC,CAAC,CAAA;AACF,MAAA,MAAA;IAEF,KAAKtB,iBAAiB,CAAC4B,GAAG;AAAE,MAAA;AAAA,QAAA,IAAA,uBAAA,EAAA,uBAAA,CAAA;AAC1B,QAAA,MAAMC,OAAO,GAAI7C,CAAAA,uBAAAA,GAAAA,aAAa,CAACa,SAAS,MAAA,IAAA,IAAA,uBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAvB,wBAAyB4B,WAAW,CAAA;AACrDvB,QAAAA,MAAM,CAACC,MAAM,CAACR,iBAAiB,EAAE;AAC/BS,UAAAA,WAAW,EAAEd,qBAAqB,GAC9B,EAAE,GACFiB,GAAG,CAAC,mCAAmC,EAAE,OAAO,EAAE,CAACsB,OAAO,CAAC,CAAC;AAChErB,UAAAA,aAAa,EAAE,mBAAmB;AAClCC,UAAAA,gBAAgB,EAAE1B,mBAAmB,CAACC,aAAa,CAAC;AACpD8C,UAAAA,OAAO,EAAG,CAAA9C,aAAa,KAAA,IAAA,IAAbA,aAAa,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,uBAAA,GAAbA,aAAa,CAAEa,SAAS,MAAA,IAAA,IAAA,uBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAxB,uBAA0BiC,CAAAA,OAAO,KAAI,EAAE;UACjDpB,SAAS,EAAEpB,qBAAqB,GAC5BiB,GAAG,CAAC,2DAA2D,EAAE,OAAO,EAAE,CAACvB,aAAa,CAACsC,KAAK,CAAC,CAAC,GAChGf,GAAG,CAAC,2DAA2D,EAAE,OAAO,EAAE,CAACvB,aAAa,CAACsC,KAAK,CAAC,CAAA;AACrG,SAAC,CAAC,CAAA;AACF,QAAA,MAAA;AACF,OAAA;IACA,KAAKtB,iBAAiB,CAAC+B,UAAU;AAAE,MAAA;AACjC7B,QAAAA,MAAM,CAACC,MAAM,CAACR,iBAAiB,EAAE;UAC/BS,WAAW,EAAEd,qBAAqB,GAC9B,EAAE,GACFiB,GAAG,CAAC,4BAA4B,EAAE,OAAO,CAAC;AAC9CC,UAAAA,aAAa,EAAE,UAAU;AACzBC,UAAAA,gBAAgB,EAAE1B,mBAAmB,CAACC,aAAa,CAAC;UACpD0B,SAAS,EAAEpB,qBAAqB,GAC5BiB,GAAG,CAAC,2DAA2D,EAAE,OAAO,EAAE,CAACvB,aAAa,CAACsC,KAAK,CAAC,CAAC,GAChGf,GAAG,CAAC,2DAA2D,EAAE,OAAO,EAAE,CAACvB,aAAa,CAACsC,KAAK,CAAC,CAAA;AACrG,SAAC,CAAC,CAAA;AACF,QAAA,MAAA;AACF,OAAA;IAEA,KAAKtB,iBAAiB,CAACgC,YAAY;AAAE,MAAA;AAAA,QAAA,IAAA,uBAAA,CAAA;AACnC,QAAA,MAAMC,OAAO,GAAIjD,CAAAA,uBAAAA,GAAAA,aAAa,CAACa,SAAS,MAAA,IAAA,IAAA,uBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAvB,wBAAyB4B,WAAW,CAAA;AACrDvB,QAAAA,MAAM,CAACC,MAAM,CAACR,iBAAiB,EAAE;AAC/BS,UAAAA,WAAW,EAAEd,qBAAqB,GAC9B,EAAE,GACFiB,GAAG,CAAC,2CAA2C,EAAE,OAAO,EAAE,CAAC0B,OAAO,CAAC,CAAC;AACxEzB,UAAAA,aAAa,EAAE,cAAc;AAC7BC,UAAAA,gBAAgB,EAAE1B,mBAAmB,CAACC,aAAa,CAAC;UACpD0B,SAAS,EAAEpB,qBAAqB,GAC5BiB,GAAG,CAAC,2DAA2D,EAAE,OAAO,EAAE,CAACvB,aAAa,CAACsC,KAAK,CAAC,CAAC,GAChGf,GAAG,CAAC,2DAA2D,EAAE,OAAO,EAAE,CAACvB,aAAa,CAACsC,KAAK,CAAC,CAAA;AACrG,SAAC,CAAC,CAAA;AACF,QAAA,MAAA;AACF,OAAA;IAEA,KAAKtB,iBAAiB,CAACkC,OAAO;AAAE,MAAA;AAC9BhC,QAAAA,MAAM,CAACC,MAAM,CAACR,iBAAiB,EAAE;UAC/BS,WAAW,EAAEd,qBAAqB,GAC9B,EAAE,GACFiB,GAAG,CAAC,uCAAuC,EAAE,OAAO,CAAC;AACzDC,UAAAA,aAAa,EAAE,aAAa;AAC5BC,UAAAA,gBAAgB,EAAE1B,mBAAmB,CAACC,aAAa,CAAC;UACpD0B,SAAS,EAAEpB,qBAAqB,GAC5BiB,GAAG,CAAC,2DAA2D,EAAE,OAAO,EAAE,CAACvB,aAAa,CAACsC,KAAK,CAAC,CAAC,GAChGf,GAAG,CAAC,2DAA2D,EAAE,OAAO,EAAE,CAACvB,aAAa,CAACsC,KAAK,CAAC,CAAA;AACrG,SAAC,CAAC,CAAA;AACF,QAAA,MAAA;AACF,OAAA;IAEA,KAAKtB,iBAAiB,CAACmC,UAAU;AAAE,MAAA;AAAA,QAAA,IAAA,uBAAA,EAAA,uBAAA,EAAA,uBAAA,CAAA;AACjCjC,QAAAA,MAAM,CAACC,MAAM,CAACR,iBAAiB,EAAE;UAC/BS,WAAW,EAAEd,qBAAqB,GAC9BN,aAAa,KAAA,IAAA,IAAbA,aAAa,KAAbA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,CAAAA,uBAAAA,GAAAA,aAAa,CAAEa,SAAS,MAAxB,IAAA,IAAA,uBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,uBAAA,CAA0B4B,WAAW,GACrClB,GAAG,CAAC,0CAA0C,EAAE,OAAO,EAAE,CAACvB,aAAa,CAACsC,KAAK,CAAC,CAAC;AACnFP,UAAAA,oBAAoB,EAAEzB,qBAAqB,GAAG,cAAc,GAAG,EAAE;AACjEmB,UAAAA,gBAAgB,EAAE1B,mBAAmB,CAACC,aAAa,CAAC;AACpDwB,UAAAA,aAAa,EAAE,qBAAqB;AACpCsB,UAAAA,OAAO,EAAG,CAAA9C,aAAa,KAAA,IAAA,IAAbA,aAAa,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,uBAAA,GAAbA,aAAa,CAAEa,SAAS,MAAA,IAAA,IAAA,uBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAxB,uBAA0BiC,CAAAA,OAAO,KAAI,EAAE;AACjDpB,UAAAA,SAAS,EAAEpB,qBAAqB,GAC5BiB,GAAG,CACH,2DAA2D,EAC3D,OAAO,EACP,CAACvB,aAAa,KAAbA,IAAAA,IAAAA,aAAa,kDAAbA,aAAa,CAAEa,SAAS,MAAA,IAAA,IAAA,uBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAxB,uBAA0B4B,CAAAA,WAAW,CAAC,CAAC,GACxClB,GAAG,CAAC,2DAA2D,EAAE,OAAO,EAAE,CAACvB,aAAa,CAACsC,KAAK,CAAC,CAAA;AACrG,SAAC,CAAC,CAAA;AACF,QAAA,MAAA;AACF,OAAA;IAEA,KAAKtB,iBAAiB,CAACoC,SAAS;AAAE,MAAA;AAChClC,QAAAA,MAAM,CAACC,MAAM,CAACR,iBAAiB,EAAE;UAC/BS,WAAW,EAAEd,qBAAqB,GAC9B,EAAE,GACFiB,GAAG,CAAC,yCAAyC,EAAE,OAAO,CAAC;AAC3DC,UAAAA,aAAa,EAAE,eAAe;AAC9BC,UAAAA,gBAAgB,EAAE1B,mBAAmB,CAACC,aAAa,CAAC;UACpD0B,SAAS,EAAEpB,qBAAqB,GAC5BiB,GAAG,CAAC,2DAA2D,EAAE,OAAO,EAAE,CAACvB,aAAa,CAACsC,KAAK,CAAC,CAAC,GAChGf,GAAG,CAAC,2DAA2D,EAAE,OAAO,EAAE,CAACvB,aAAa,CAACsC,KAAK,CAAC,CAAA;AACrG,SAAC,CAAC,CAAA;AACF,QAAA,MAAA;AACF,OAAA;AAAC,GAAA;AAGD,EAAA,OAAO3B,iBAAiB,CAAA;AAC1B,CAAC,CAAA;AAEM,SAASgB,uBAAuB,CAACL,KAAK,EAAE;AAC7C,EAAA,OAAOA,KAAK,GACRC,GAAG,CAAC,wDAAwD,EAAE,OAAO,EAAE,CAACD,KAAK,CAAC,CAAC,GAC/EC,GAAG,CAAC,6CAA6C,EAAE,OAAO,CAAC,CAAA;AACjE,CAAA;AAEO,SAASS,uBAAuB,CAACqB,KAAK,EAAE;AAC7C,EAAA,OAAOA,KAAK,GACR9B,GAAG,CAAC,wDAAwD,EAAE,OAAO,EAAE,CAAC8B,KAAK,CAAC,CAAC,GAC/E9B,GAAG,CAAC,6CAA6C,EAAE,OAAO,CAAC,CAAA;AACjE,CAAA;AAEO,SAASa,sBAAsB,CAACkB,QAAQ,EAAElD,UAAU,EAAE;EAC3D,IAAI,CAACkD,QAAQ,EAAE;AACb,IAAA,OAAO/B,GAAG,CAAC,iEAAiE,EAAE,OAAO,CAAC,CAAA;AACxF,GAAA;AACA,EAAA,MAAMgC,YAAY,GAAGhC,GAAG,CAAC,mDAAmD,EAAE,OAAO,CAAC,CAAA;AACtF,EAAA,IAAI,OAAOnB,UAAU,KAAK,WAAW,EAAE;AACrC,IAAA,OAAOmD,YAAY,CAAA;AACrB,GAAA;AACA,EAAA,MAAMC,kBAAkB,GAAG;AACzBC,IAAAA,IAAI,EAAElC,GAAG,CAAC,iDAAiD,EAAE,OAAO,CAAC;AACrEmC,IAAAA,IAAI,EAAEnC,GAAG,CAAC,iDAAiD,EAAE,OAAO,CAAC;AACrE,IAAA,cAAc,EAAEA,GAAG,CAAC,yDAAyD,EAAE,OAAO,CAAA;GACvF,CAAA;AACD,EAAA,OAAOiC,kBAAkB,CAACpD,UAAU,CAAC,IAAImD,YAAY,CAAA;AACvD,CAAA;AAEO,SAASI,6BAA6B,CAAC3D,aAAa,EAAE;EAC3D,OAAOK,oBAAoB,CAACL,aAAa,CAAC,CAAA;AAC5C,CAAA;AAEO,SAAS4D,mCAAmC,CAAC5D,aAAa,EAAE;AACjE,EAAA,OAAOK,oBAAoB,CAACL,aAAa,EAAE,IAAI,CAAC,CAAA;AAClD,CAAA;AAEO,SAAS6D,yBAAyB,CAAC5D,gBAAgB,EAAE;AAC1D,EAAA,OAAOI,oBAAoB,CAAC;AAAEJ,IAAAA,gBAAgB,EAAhBA,gBAAAA;GAAkB,CAAC,CAACuB,aAAa,CAAA;AACjE,CAAA;AAEO,SAASsC,2BAA2B,CAACC,SAAS,EAAE;AAAA,EAAA,IAAA,qBAAA,CAAA;AACrD,EAAA,IAAI,0BAAAA,SAAS,CAACC,WAAW,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAArB,sBAAuBC,MAAM,IAAG,CAAC,IAChCC,KAAK,CAACC,OAAO,CAACJ,SAAS,CAACC,WAAW,CAAC,CAAC,CAAC,CAACI,YAAY,CAAC,IACpDL,SAAS,CAACC,WAAW,CAAC,CAAC,CAAC,CAACI,YAAY,CAACH,MAAM,GAAG,CAAC,EAAE;AAAA,IAAA,IAAA,sBAAA,CAAA;AACrD;AACAF,IAAAA,SAAS,CAACC,WAAW,CAAC,CAAC,CAAC,CAACI,YAAY,GAAGL,SAAS,CAACC,WAAW,CAAC,CAAC,CAAC,CAACI,YAAY,CAAC,CAAC,CAAC,CAAA;;AAEhF;IACA,MAAMC,QAAQ,GAAG,CAAA,CAAA,sBAAA,GAAAN,SAAS,CAACC,WAAW,CAAC,CAAC,CAAC,CAACK,QAAQ,MAAjC,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,sBAAA,CAAmCJ,MAAM,IAAG,CAAC,IAAIF,SAAS,CAACC,WAAW,CAAC,CAAC,CAAC,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAA;AACtG;IACA,IAAIA,QAAQ,KAAK,qCAAqC,EAAE;AACtDN,MAAAA,SAAS,CAACC,WAAW,CAAC,CAAC,CAAC,CAACI,YAAY,GAAG7C,GAAG,CAAC,wDAAwD,EAAE,OAAO,CAAC,CAAA;AAChH,KAAA;AACF,GAAA;AACA,EAAA,OAAOwC,SAAS,CAAA;AAClB,CAAA;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASO,2BAA2B,CAACC,WAAW,EAAE;AAAA,EAAA,IAAA,qBAAA,EAAA,sBAAA,CAAA;EACvD,OAAOA,CAAAA,qBAAAA,GAAAA,WAAW,CAAC1D,SAAS,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,sBAAA,GAArB,sBAAuBV,KAAK,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAA5B,uBAA8BsC,WAAW,CAAA;AAClD;;;;"}