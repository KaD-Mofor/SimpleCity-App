{"version":3,"file":"InputGroup.js","sources":["../../../../../../../../../../../packages/@okta/courage-dist/esm/src/courage/views/forms/inputs/InputGroup.js"],"sourcesContent":["import oktaUnderscore from '../../../util/underscore-wrapper.js';\nimport ButtonFactory from '../../../util/ButtonFactory.js';\nimport BaseView from '../../BaseView.js';\nimport BaseInput from '../BaseInput.js';\n\nfunction countInputs(inputs) {\n  return oktaUnderscore.filter(inputs || [], function (input) {\n    return !oktaUnderscore.contains(['label', 'button', 'select'], input.type);\n  }).length;\n}\n\nconst InputGroupLabelInput = BaseInput.extend({\n  tagName: 'span',\n  initialize: function () {\n    this.$el.text(this.getModelValue());\n  },\n  editMode: function () {\n    this.toggle(true);\n  },\n  readMode: function () {\n    this.toggle(false);\n  },\n  getModelValue: function () {\n    return this.options.label;\n  },\n  toggle: function (isEditMode) {\n    this.$el.toggleClass('o-form-label-inline', isEditMode);\n    this.$el.toggleClass('o-form-control', !isEditMode);\n  },\n  focus: oktaUnderscore.noop\n});\n\nfunction createButtonInput(options) {\n  return ButtonFactory.create(oktaUnderscore.defaults({\n    getReadModeString: oktaUnderscore.constant(' '),\n    focus: oktaUnderscore.noop\n  }, oktaUnderscore.pick(options, 'click', 'title', 'href', 'icon')));\n}\n\nconst InputGroupInputGroupView = BaseView.extend({\n  getParams: BaseInput.prototype.getParams,\n  getParam: BaseInput.prototype.getParam,\n  className: function () {\n    let className; // Allows views to group multiple inputs under one label without any of the other\n    // styling/rendering changes that come with using a group input\n\n    if (this.getParam('noBaseClasses')) {\n      return '';\n    }\n\n    if (this.getParam('display') === 'text') {\n      className = 'o-form-input-group-subtle';\n    } else {\n      className = 'o-form-input-group';\n    }\n\n    if (countInputs(this.getParam('inputs')) > 1) {\n      className += ' o-form-input-group-2';\n    }\n\n    return className;\n  },\n  initialize: function () {\n    oktaUnderscore.each(this.getParam('inputs'), function (input) {\n      switch (input.type) {\n        case 'label':\n          this.add(InputGroupLabelInput, {\n            options: input\n          });\n          break;\n\n        case 'button':\n          this.add(createButtonInput(input));\n          break;\n\n        default:\n          input = oktaUnderscore.defaults({\n            model: this.model,\n            params: oktaUnderscore.extend({\n              autoWidth: true\n            }, input.params || {})\n          }, input);\n          this.add(this.getParams().create(input));\n      }\n    }, this);\n  },\n  focus: function () {\n    this.first().focus();\n  }\n});\nvar InputGroup = BaseInput.extend({\n  constructor: function (options) {\n    this.inputGroupView = new InputGroupInputGroupView(options);\n    BaseInput.apply(this, arguments);\n  },\n  editMode: function () {\n    this.inputGroupView.remove();\n    this.inputGroupView = new InputGroupInputGroupView(this.options);\n    this.$el.html(this.inputGroupView.render().el);\n  },\n  readMode: function () {\n    // Allows the user to use to the default \"read mode\" of the child inputs instead of\n    // rendering a single read mode string for all the child inputs\n    if (this.getParam('useChildInputsReadMode')) {\n      this.editMode();\n    } else {\n      BaseInput.prototype.readMode.apply(this, arguments);\n    }\n  },\n  toStringValue: function () {\n    const strings = this.inputGroupView.map(function (input) {\n      return input.getReadModeString();\n    });\n    return strings.length && oktaUnderscore.every(strings) ? strings.join(' ') : ' ';\n  },\n  focus: function () {\n    this.inputGroupView.focus();\n  }\n}, {\n  // test hooks\n  LabelInput: InputGroupLabelInput,\n  InputGroupView: InputGroupInputGroupView\n});\n\nexport { InputGroup as default };\n"],"names":["countInputs","inputs","oktaUnderscore","filter","input","contains","type","length","InputGroupLabelInput","BaseInput","extend","tagName","initialize","$el","text","getModelValue","editMode","toggle","readMode","options","label","isEditMode","toggleClass","focus","noop","createButtonInput","ButtonFactory","create","defaults","getReadModeString","constant","pick","InputGroupInputGroupView","BaseView","getParams","prototype","getParam","className","each","add","model","params","autoWidth","first","InputGroup","constructor","inputGroupView","apply","arguments","remove","html","render","el","toStringValue","strings","map","every","join","LabelInput","InputGroupView"],"mappings":"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"}