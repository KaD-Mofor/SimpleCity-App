{"version":3,"file":"Util.js","sources":["../../../../../../../../../packages/@okta/courage-dist/esm/src/courage/util/Util.js"],"sourcesContent":["import oktaUnderscore from './underscore-wrapper.js';\nimport BaseView from '../views/BaseView.js';\n\nvar Util = {\n  redirect: function (url) {\n    window.location = url;\n  },\n  reloadPage: function () {\n    window.location.reload();\n  },\n  constantError: function (errorMessage) {\n    return function () {\n      throw new Error(errorMessage);\n    };\n  },\n\n  /**\n   * Simply convert an URL query key value pair object into an URL query string.\n   * Remember NOT to escape the query string when using this util.\n   * example:\n   * input: {userId: 123, instanceId: undefined, expand: 'schema,app'}\n   * output: '?userId=123&expand=schema,app'\n   */\n  getUrlQueryString: function (queries) {\n    oktaUnderscore.isObject(queries) || (queries = {});\n\n    const queriesString = oktaUnderscore.without(oktaUnderscore.map(queries, function (value, key) {\n      if (value !== undefined && value !== null) {\n        return key + '=' + encodeURIComponent(value);\n      }\n    }), undefined).join('&');\n\n    return oktaUnderscore.isEmpty(queriesString) ? '' : '?' + queriesString;\n  },\n  isABaseView: function (obj) {\n    return obj instanceof BaseView || obj.prototype instanceof BaseView || obj === BaseView;\n  },\n  isSafari: function () {\n    // All native, android and iOS chrome browsers has \"Safari\" in their userAgent string, so this regex should\n    // evaluate to true for only Safari browser and not any chrome browsers.\n    // https://stackoverflow.com/questions/7944460/detect-safari-browser\n    // https://stackoverflow.com/questions/13807810/ios-chrome-detection/13808053#13808053\n    return /^((?!chrome|android|crios).)*safari/i.test(navigator.userAgent);\n  }\n};\n\nexport { Util as default };\n"],"names":["Util","redirect","url","window","location","reloadPage","reload","constantError","errorMessage","Error","getUrlQueryString","queries","oktaUnderscore","isObject","queriesString","without","map","value","key","undefined","encodeURIComponent","join","isEmpty","isABaseView","obj","BaseView","prototype","isSafari","test","navigator","userAgent"],"mappings":";;;AAGA,IAAIA,IAAI,GAAG;EACTC,QAAQ,EAAE,UAAUC,GAAG,EAAE;IACvBC,MAAM,CAACC,QAAQ,GAAGF,GAAG,CAAA;GACtB;AACDG,EAAAA,UAAU,EAAE,YAAY;AACtBF,IAAAA,MAAM,CAACC,QAAQ,CAACE,MAAM,EAAE,CAAA;GACzB;EACDC,aAAa,EAAE,UAAUC,YAAY,EAAE;AACrC,IAAA,OAAO,YAAY;AACjB,MAAA,MAAM,IAAIC,KAAK,CAACD,YAAY,CAAC,CAAA;KAC9B,CAAA;GACF;AAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEE,iBAAiB,EAAE,UAAUC,OAAO,EAAE;IACpCC,cAAc,CAACC,QAAQ,CAACF,OAAO,CAAC,KAAKA,OAAO,GAAG,EAAE,CAAC,CAAA;AAElD,IAAA,MAAMG,aAAa,GAAGF,cAAc,CAACG,OAAO,CAACH,cAAc,CAACI,GAAG,CAACL,OAAO,EAAE,UAAUM,KAAK,EAAEC,GAAG,EAAE;AAC7F,MAAA,IAAID,KAAK,KAAKE,SAAS,IAAIF,KAAK,KAAK,IAAI,EAAE;AACzC,QAAA,OAAOC,GAAG,GAAG,GAAG,GAAGE,kBAAkB,CAACH,KAAK,CAAC,CAAA;AAC9C,OAAA;KACD,CAAC,EAAEE,SAAS,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC,CAAA;IAExB,OAAOT,cAAc,CAACU,OAAO,CAACR,aAAa,CAAC,GAAG,EAAE,GAAG,GAAG,GAAGA,aAAa,CAAA;GACxE;EACDS,WAAW,EAAE,UAAUC,GAAG,EAAE;AAC1B,IAAA,OAAOA,GAAG,YAAYC,QAAQ,IAAID,GAAG,CAACE,SAAS,YAAYD,QAAQ,IAAID,GAAG,KAAKC,QAAQ,CAAA;GACxF;AACDE,EAAAA,QAAQ,EAAE,YAAY;AACpB;AACA;AACA;AACA;AACA,IAAA,OAAO,sCAAsC,CAACC,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,CAAA;AACzE,GAAA;AACF;;;;"}