{"version":3,"file":"ListView.js","sources":["../../../../../../../../../packages/@okta/courage-dist/esm/src/courage/framework/ListView.js"],"sourcesContent":["import FrameworkView from './View.js';\nimport oktaUnderscore from '../util/underscore-wrapper.js';\n\n/* eslint-disable max-statements */\n/**\n   * Archer.ListView is a {@link src/framework/View} that operates on a\n   * collection and builds a list of \"things\" of the same type.\n   *\n   * Automagically adds, removes and sorts upon standard collection events.\n   *\n   * Listen to collection events so the ListView will do the right thing when\n   * a model is added or the collection is reset or sorted.\n   *\n   * @class src/framework/ListView\n   * @extends src/framework/View\n   * @param {Object} options options hash\n   * @param {Object} options.collection The collection which this view operates on\n   * @example\n   * var UserList = Archer.ListView.extend({\n   *   tagName: 'ul',\n   *   item: '<li>{{fname}} {{lname}}</li>'\n   * });\n   *\n   * var users = new Archer.Collection([\n   *   {fname: 'John', lname: 'Doe'},\n   *   {fname: 'Jane', lname: 'Doe'}\n   * ]);\n   *\n   * var userList = new UserList({collection: users}).render();\n   * userList.el; //=> \"<ul><li>John Doe</li><li>Jane Doe</li></ul>\"\n   *\n   * users.push({fname: 'Jim', lname: 'Doe'});\n   * userList.el; //=> \"<ul><li>John Doe</li><li>Jane Doe</li><li>Jim Doe</li></ul>\"\n   *\n   * users.first().destroy();\n   * userList.el; //=> \"<ul><li>Jane Doe</li><li>Jim Doe</li></ul>\"\n   */\n\nvar ListView = FrameworkView.extend(\n/** @lends src/framework/ListView.prototype */\n{\n  constructor: function () {\n    FrameworkView.apply(this, arguments);\n\n    if (!this.collection) {\n      throw new Error('Missing collection');\n    }\n\n    this.listenTo(this.collection, 'reset sort', this.reset);\n    this.listenTo(this.collection, 'add', this.addItem);\n\n    if (this.fetchCollection) {\n      this.collection.fetch();\n    } else {\n      this.collection.each(this.addItem, this);\n    }\n  },\n\n  /**\n     * The view/template we will use to render each model in the collection.\n     * @type {String|module:Okta.View}\n     */\n  item: null,\n\n  /**\n     * A selector in the local template where to append each item\n     * @type {String}\n     */\n  itemSelector: null,\n\n  /**\n     * Empty the list and re-add everything from the collection.\n     * Usefull for handling `collection.reset()` or for handling the initial load\n     * @protected\n     */\n  reset: function () {\n    this.removeChildren();\n    this.collection.each((model, index) => {\n      this.addItem(model, index);\n    });\n    return this;\n  },\n\n  /**\n     * Add an item view to the list that will represent one model from the collection\n     *\n     * Listen to the model so when it is destoyed or removed from the collection\n     * this item will remove itself from the list\n     *\n     * @param {Backbone.Model} model The model this row operates on\n     * @protected\n     */\n  addItem: function (model) {\n    var view = this.add(this.item, this.itemSelector, {\n      options: {\n        model: model\n      }\n    }).last();\n\n    if (this.state && this.state.get('trackItemAdded')) {\n      this.state.trigger('itemAdded', view);\n    }\n\n    view.listenTo(model, 'destroy remove', view.remove);\n    return this;\n  },\n  addShowMore: oktaUnderscore.noop\n});\n\nexport { ListView as default };\n"],"names":["ListView","FrameworkView","extend","constructor","apply","arguments","collection","Error","listenTo","reset","addItem","fetchCollection","fetch","each","item","itemSelector","removeChildren","model","index","view","add","options","last","state","get","trigger","remove","addShowMore","oktaUnderscore","noop"],"mappings":";;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,QAAQ,GAAGC,aAAa,CAACC,MAAM;AAEnC;AACEC,EAAAA,WAAW,EAAE,YAAY;AACvBF,IAAAA,aAAa,CAACG,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,CAAA;AAEpC,IAAA,IAAI,CAAC,IAAI,CAACC,UAAU,EAAE;AACpB,MAAA,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC,CAAA;AACvC,KAAA;AAEA,IAAA,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACF,UAAU,EAAE,YAAY,EAAE,IAAI,CAACG,KAAK,CAAC,CAAA;AACxD,IAAA,IAAI,CAACD,QAAQ,CAAC,IAAI,CAACF,UAAU,EAAE,KAAK,EAAE,IAAI,CAACI,OAAO,CAAC,CAAA;IAEnD,IAAI,IAAI,CAACC,eAAe,EAAE;AACxB,MAAA,IAAI,CAACL,UAAU,CAACM,KAAK,EAAE,CAAA;AACzB,KAAC,MAAM;MACL,IAAI,CAACN,UAAU,CAACO,IAAI,CAAC,IAAI,CAACH,OAAO,EAAE,IAAI,CAAC,CAAA;AAC1C,KAAA;GACD;AAED;AACF;AACA;AACA;AACEI,EAAAA,IAAI,EAAE,IAAI;AAEV;AACF;AACA;AACA;AACEC,EAAAA,YAAY,EAAE,IAAI;AAElB;AACF;AACA;AACA;AACA;AACEN,EAAAA,KAAK,EAAE,YAAY;IACjB,IAAI,CAACO,cAAc,EAAE,CAAA;IACrB,IAAI,CAACV,UAAU,CAACO,IAAI,CAAC,CAACI,KAAK,EAAEC,KAAK,KAAK;AACrC,MAAA,IAAI,CAACR,OAAO,CAACO,KAAK,EAAEC,KAAK,CAAC,CAAA;AAC5B,KAAC,CAAC,CAAA;AACF,IAAA,OAAO,IAAI,CAAA;GACZ;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACER,OAAO,EAAE,UAAUO,KAAK,EAAE;AACxB,IAAA,IAAIE,IAAI,GAAG,IAAI,CAACC,GAAG,CAAC,IAAI,CAACN,IAAI,EAAE,IAAI,CAACC,YAAY,EAAE;AAChDM,MAAAA,OAAO,EAAE;AACPJ,QAAAA,KAAK,EAAEA,KAAAA;AACT,OAAA;KACD,CAAC,CAACK,IAAI,EAAE,CAAA;AAET,IAAA,IAAI,IAAI,CAACC,KAAK,IAAI,IAAI,CAACA,KAAK,CAACC,GAAG,CAAC,gBAAgB,CAAC,EAAE;MAClD,IAAI,CAACD,KAAK,CAACE,OAAO,CAAC,WAAW,EAAEN,IAAI,CAAC,CAAA;AACvC,KAAA;IAEAA,IAAI,CAACX,QAAQ,CAACS,KAAK,EAAE,gBAAgB,EAAEE,IAAI,CAACO,MAAM,CAAC,CAAA;AACnD,IAAA,OAAO,IAAI,CAAA;GACZ;EACDC,WAAW,EAAEC,cAAc,CAACC,IAAAA;AAC9B,CAAC;;;;"}