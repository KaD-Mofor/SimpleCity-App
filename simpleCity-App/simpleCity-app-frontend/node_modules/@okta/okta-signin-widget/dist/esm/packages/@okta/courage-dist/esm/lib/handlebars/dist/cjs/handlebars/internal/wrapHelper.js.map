{"version":3,"file":"wrapHelper.js","sources":["../../../../../../../../../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars/internal/wrapHelper.js"],"sourcesContent":["import { __exports as wrapHelper$1 } from '../../../../../../_virtual/wrapHelper.js';\nexport { __exports as default } from '../../../../../../_virtual/wrapHelper.js';\n\nwrapHelper$1.__esModule = true;\nwrapHelper$1.wrapHelper = wrapHelper;\n\nfunction wrapHelper(helper, transformOptionsFn) {\n  if (typeof helper !== 'function') {\n    // This should not happen, but apparently it does in https://github.com/wycats/handlebars.js/issues/1639\n    // We try to make the wrapper least-invasive by not wrapping it, if the helper is not a function.\n    return helper;\n  }\n\n  var wrapper = function wrapper()\n  /* dynamic arguments */\n  {\n    var options = arguments[arguments.length - 1];\n    arguments[arguments.length - 1] = transformOptionsFn(options);\n    return helper.apply(this, arguments);\n  };\n\n  return wrapper;\n}\n"],"names":["wrapHelper$1","__esModule","wrapHelper","helper","transformOptionsFn","wrapper","options","arguments","length","apply"],"mappings":";;;AAGAA,YAAY,CAACC,UAAU,GAAG,IAAI,CAAA;AAC9BD,YAAY,CAACE,UAAU,GAAGA,UAAU,CAAA;AAEpC,SAASA,UAAU,CAACC,MAAM,EAAEC,kBAAkB,EAAE;AAC9C,EAAA,IAAI,OAAOD,MAAM,KAAK,UAAU,EAAE;AAChC;AACA;AACA,IAAA,OAAOA,MAAM,CAAA;AACf,GAAA;AAEA,EAAA,IAAIE,OAAO,GAAG,SAASA,OAAO;AAE9B,EAAA;IACE,IAAIC,OAAO,GAAGC,SAAS,CAACA,SAAS,CAACC,MAAM,GAAG,CAAC,CAAC,CAAA;IAC7CD,SAAS,CAACA,SAAS,CAACC,MAAM,GAAG,CAAC,CAAC,GAAGJ,kBAAkB,CAACE,OAAO,CAAC,CAAA;AAC7D,IAAA,OAAOH,MAAM,CAACM,KAAK,CAAC,IAAI,EAAEF,SAAS,CAAC,CAAA;GACrC,CAAA;AAED,EAAA,OAAOF,OAAO,CAAA;AAChB"}