{"version":3,"file":"create-new-lookup-object.js","sources":["../../../../../../../../../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars/internal/create-new-lookup-object.js"],"sourcesContent":["import { __exports as createNewLookupObject$1 } from '../../../../../../_virtual/create-new-lookup-object.js';\nexport { __exports as default } from '../../../../../../_virtual/create-new-lookup-object.js';\nimport '../utils.js';\nimport { __exports as utils } from '../../../../../../_virtual/utils.js';\n\ncreateNewLookupObject$1.__esModule = true;\ncreateNewLookupObject$1.createNewLookupObject = createNewLookupObject;\n\nvar _utils = utils;\n/**\n * Create a new object with \"null\"-prototype to avoid truthy results on prototype properties.\n * The resulting object can be used with \"object[property]\" to check if a property exists\n * @param {...object} sources a varargs parameter of source objects that will be merged\n * @returns {object}\n */\n\n\nfunction createNewLookupObject() {\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  return _utils.extend.apply(undefined, [Object.create(null)].concat(sources));\n}\n"],"names":["createNewLookupObject$1","__esModule","createNewLookupObject","_utils","utils","_len","arguments","length","sources","Array","_key","extend","apply","undefined","Object","create","concat"],"mappings":";;;;;AAKAA,uBAAuB,CAACC,UAAU,GAAG,IAAI,CAAA;AACzCD,uBAAuB,CAACE,qBAAqB,GAAGA,qBAAqB,CAAA;AAErE,IAAIC,MAAM,GAAGC,KAAK,CAAA;AAClB;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASF,qBAAqB,GAAG;EAC/B,KAAK,IAAIG,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,OAAO,GAAGC,KAAK,CAACJ,IAAI,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;AACtFF,IAAAA,OAAO,CAACE,IAAI,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC,CAAA;AACjC,GAAA;EAEA,OAAOP,MAAM,CAACQ,MAAM,CAACC,KAAK,CAACC,SAAS,EAAE,CAACC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC,CAAC,CAACC,MAAM,CAACR,OAAO,CAAC,CAAC,CAAA;AAC9E"}