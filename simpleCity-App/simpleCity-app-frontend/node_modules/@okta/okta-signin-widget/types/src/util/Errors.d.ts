/*!
 * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */
import { ErrorXHR, ErrorContextData } from '../types/errors';
import { FlowIdentifier } from '@okta/okta-auth-js';
declare abstract class CustomError extends Error {
    constructor(message?: string);
}
export declare class ConfigError extends CustomError {
    name: string;
    constructor(message?: string);
}
export declare class UnsupportedBrowserError extends CustomError {
    name: string;
    constructor(message?: string);
}
export declare class OAuthError extends CustomError {
    name: string;
}
export declare class RegistrationError extends CustomError {
    name: string;
}
export declare class AuthStopPollInitiationError extends CustomError {
    name: string;
}
export declare class U2FError extends CustomError {
    xhr: ErrorXHR;
    name: string;
    constructor(err: ErrorContextData);
}
export declare class WebAuthnError extends CustomError {
    xhr: ErrorXHR;
    name: string;
    constructor(err: ErrorContextData);
}
export declare class WebauthnAbortError extends CustomError {
    name: string;
}
export declare class ConfiguredFlowError extends CustomError {
    flowSetting: FlowIdentifier;
    name: string;
    constructor(message: string, flowSetting: FlowIdentifier);
}
export {};
//# sourceMappingURL=Errors.d.ts.map