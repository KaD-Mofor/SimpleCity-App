/*!
 * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */
declare const bundleNames: string[];
declare type BundleName = typeof bundleNames[number];
declare global {
    interface Window {
        okta?: {
            locale?: string;
        };
    }
}
/**
 * Translate a key to the localized value
 * @param  {String} key The key
 * @param  {String} [bundle="login"] The name of the i18n bundle. Defaults to "login".
 * @param  {Array} [params] A list of parameters to apply as tokens to the i18n value
 * @param  {Boolean} [ignoreIncorrectParams] If true, a custom 'okta-i18n-error' event would not be dispatched
 * @return {String} The localized value
 */
export declare const loc: (key: string, bundleName?: BundleName, params?: Array<string | number | boolean | unknown>, ignoreIncorrectParams?: boolean) => string;
export {};
//# sourceMappingURL=loc.d.ts.map