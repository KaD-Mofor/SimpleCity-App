export default Util;
declare namespace Util {
    function transformErrorXHR(xhr: any): any;
    function toLower(strings: any): any[];
    function expandLanguages(languages: any): any[];
    function callAfterTimeout(callback: any, time: any): NodeJS.Timeout;
    function debugMessage(message: any): void;
    function logConsoleError(message: any): void;
    function triggerAfterError(controller: any, err?: {}): void;
    function redirect(url: any, win?: Window & typeof globalThis, isAppLink?: boolean): void;
    function isAndroidOVEnrollment(): boolean;
    /**
     * Why redirect via Form get rather using `window.location.href`?
     * At the time of writing, Chrome (<72) in Android would block window location change
     * at following case
     * 1. An AJAX is trigger because of user action.
     * 2. 5+ seconds passed without any further user interaction.
     * 3. User takes an action results in window location change.
     *
     * Luckily we discovered that uses Form submit would work around this problem
     * even though it changed window location.
     *
     * Check the commit history for more details.
     */
    function redirectWithFormGet(url: any): void;
    function redirectWithForm(url: any, method?: string): void;
    /**
     * When we want to show an explain text, we need to check if this is different from
     * the label text, to not have an explain that look like a duplicated label.
     * okta-signin-widget gives the possibility to customize every i18n, so we cannot
     * know ahead if these two are equal or different, we need to call this function everytime.
     */
    function createInputExplain(explainKey: any, labelKey: any, bundleName: any, explainParams: any, labelParams: any): string | false;
    function isV1StateToken(token: any): boolean;
    function getAutocompleteValue(settings: any, defaultValue: any): any;
    /**
     * Equivalent of `new URLSearchParams(params).toString()` with broadest browser support.
     * Does not include params with nullish values.
     */
    function searchParamsToString(params: any): string;
}
//# sourceMappingURL=Util.d.ts.map