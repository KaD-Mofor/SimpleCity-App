{"version":3,"file":"minimalApi.js","names":["createMinimalIdxAPI","minimalSdk","sdk","boundStartTransaction","startTransaction","bind","idx","makeIdxResponse","makeIdxState","start","proceed","canProceed","getSavedTransactionMeta","createTransactionMeta","getTransactionMeta","saveTransactionMeta","clearTransactionMeta","isTransactionMetaValid"],"sources":["../../../../lib/idx/factory/minimalApi.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { makeIdxState } from '../idxState';\nimport { canProceed, proceed } from '../proceed';\nimport { startTransaction } from '../startTransaction';\nimport {\n  clearTransactionMeta,\n  createTransactionMeta,\n  getSavedTransactionMeta,\n  getTransactionMeta,\n  isTransactionMetaValid,\n  saveTransactionMeta\n} from '../transactionMeta';\nimport { MinimalIdxAPI, MinimalOktaAuthIdxInterface, OktaAuthIdxInterface } from '../types';\n\n// Factory\nexport function createMinimalIdxAPI(minimalSdk: MinimalOktaAuthIdxInterface): MinimalIdxAPI {\n  const sdk = minimalSdk as OktaAuthIdxInterface;\n  const boundStartTransaction = startTransaction.bind(null, sdk);\n  const idx = {\n    makeIdxResponse: makeIdxState.bind(null, sdk),\n\n    start: boundStartTransaction,\n    startTransaction: boundStartTransaction, // Use `start` instead. `startTransaction` will be removed in 7.0\n    proceed: proceed.bind(null, sdk),\n    canProceed: canProceed.bind(null, sdk),\n    \n    getSavedTransactionMeta: getSavedTransactionMeta.bind(null, sdk),\n    createTransactionMeta: createTransactionMeta.bind(null, sdk),\n    getTransactionMeta: getTransactionMeta.bind(null, sdk),\n    saveTransactionMeta: saveTransactionMeta.bind(null, sdk),\n    clearTransactionMeta: clearTransactionMeta.bind(null, sdk),\n    isTransactionMetaValid,\n  };\n  return idx;\n}\n\n"],"mappings":";;;AAaA;AACA;AACA;AACA;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAeA;AACO,SAASA,mBAAmB,CAACC,UAAuC,EAAiB;EAC1F,MAAMC,GAAG,GAAGD,UAAkC;EAC9C,MAAME,qBAAqB,GAAGC,kCAAgB,CAACC,IAAI,CAAC,IAAI,EAAEH,GAAG,CAAC;EAC9D,MAAMI,GAAG,GAAG;IACVC,eAAe,EAAEC,sBAAY,CAACH,IAAI,CAAC,IAAI,EAAEH,GAAG,CAAC;IAE7CO,KAAK,EAAEN,qBAAqB;IAC5BC,gBAAgB,EAAED,qBAAqB;IAAE;IACzCO,OAAO,EAAEA,gBAAO,CAACL,IAAI,CAAC,IAAI,EAAEH,GAAG,CAAC;IAChCS,UAAU,EAAEA,mBAAU,CAACN,IAAI,CAAC,IAAI,EAAEH,GAAG,CAAC;IAEtCU,uBAAuB,EAAEA,wCAAuB,CAACP,IAAI,CAAC,IAAI,EAAEH,GAAG,CAAC;IAChEW,qBAAqB,EAAEA,sCAAqB,CAACR,IAAI,CAAC,IAAI,EAAEH,GAAG,CAAC;IAC5DY,kBAAkB,EAAEA,mCAAkB,CAACT,IAAI,CAAC,IAAI,EAAEH,GAAG,CAAC;IACtDa,mBAAmB,EAAEA,oCAAmB,CAACV,IAAI,CAAC,IAAI,EAAEH,GAAG,CAAC;IACxDc,oBAAoB,EAAEA,qCAAoB,CAACX,IAAI,CAAC,IAAI,EAAEH,GAAG,CAAC;IAC1De,sBAAsB,EAAtBA;EACF,CAAC;EACD,OAAOX,GAAG;AACZ"}