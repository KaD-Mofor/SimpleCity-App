{"version":3,"file":"util.js","names":["ctx","remediators","getFlowSpecification","_oktaAuth","_flow","setRemediatorsCtx","newCtx","Object","assign","oktaAuth","flow","isTerminalResponse","idxResponse","neededToProceed","interactionCode","length","canSkipFn","some","name","canResendFn","keys","actions","actionName","includes","getMessagesFromIdxRemediationValue","value","Array","isArray","reduce","messages","form","messagesFromForm","options","optionValues","forEach","option","messagesFromOptions","getMessagesFromResponse","rawIdxState","globalMessages","map","message","useGenericRemediator","remediation","fieldMessages","seen","filtered","key","i18n","getEnabledFeatures","res","push","IdxFeature","PASSWORD_RECOVERY","REGISTRATION","SOCIAL_IDP","ACCOUNT_UNLOCK","getAvailableSteps","authClient","remediatorMap","values","remediatorClass","remediationName","T","getRemediatorClass","remediator","getNextStep","context","entries","stepObj","action","params","idx","proceed","startsWith","part1","part2","split2","actionObj","href","method","rel","accepts","produces","rest","filter","item","filterValuesForRemediation","remediations","find","r","warn","valuesForRemediation","entry","undefined","GenericRemediator","getRemediator","idxRemediations","step","remediatorCandidates","isRemeditionInFlow","canRemediate","nextStep","canSkip","canResend","handleFailedResponse","terminal"],"sources":["../../../lib/idx/util.ts"],"sourcesContent":["import { warn, split2 } from '../util';\nimport { RemediationValues, Remediator, RemediatorConstructor } from './remediators';\nimport { GenericRemediator } from './remediators/GenericRemediator';\nimport {\n  OktaAuthIdxInterface,\n  IdxFeature,\n  NextStep,\n  RemediateOptions,\n  RemediationResponse,\n  RunOptions,\n  FlowIdentifier,\n  FlowSpecification\n} from './types';\nimport { IdxMessage, IdxRemediation, IdxRemediationValue, IdxResponse } from './types/idx-js';\n\ntype GetFlowSpecification = (\n  oktaAuth: OktaAuthIdxInterface,\n  flow: FlowIdentifier\n) => FlowSpecification;\n\nconst ctx: {\n  remediators: Record<string, RemediatorConstructor>,\n  getFlowSpecification: GetFlowSpecification,\n} = {\n  // default values to be used by minimal IDX API\n  remediators: {},\n  getFlowSpecification: function(_oktaAuth: OktaAuthIdxInterface, _flow: FlowIdentifier = 'default') {\n    return {\n      remediators: {}\n    } as FlowSpecification;\n  }\n};\n\n// should be set in createIdxAPI() factory\nexport function setRemediatorsCtx(newCtx: Partial<typeof ctx>) {\n  Object.assign(ctx, newCtx);\n}\n\nexport function getFlowSpecification(oktaAuth: OktaAuthIdxInterface, flow: FlowIdentifier = 'default') {\n  return ctx.getFlowSpecification(oktaAuth, flow);\n}\n\nexport function isTerminalResponse(idxResponse: IdxResponse) {\n  const { neededToProceed, interactionCode } = idxResponse;\n  return !neededToProceed.length && !interactionCode;\n}\n\nexport function canSkipFn(idxResponse: IdxResponse) {\n  return idxResponse.neededToProceed.some(({ name }) => name === 'skip');\n}\n\nexport function canResendFn(idxResponse: IdxResponse) {\n  return Object.keys(idxResponse.actions).some(actionName => actionName.includes('resend'));\n}\n\nexport function getMessagesFromIdxRemediationValue(\n  value?: IdxRemediationValue[]\n): IdxMessage[] | undefined {\n  if (!value || !Array.isArray(value)) {\n    return;\n  }\n  return value.reduce((messages, value) => {\n    if (value.messages) {\n      messages = [...messages, ...value.messages.value] as never;\n    }\n    if (value.form) {\n      const messagesFromForm = getMessagesFromIdxRemediationValue(value.form.value) || [];\n      messages = [...messages, ...messagesFromForm] as never;\n    } \n    if (value.options) {\n      let optionValues = [];\n      value.options.forEach(option => {\n        if (!option.value || typeof option.value === 'string') {\n          return;\n        }\n        optionValues = [...optionValues, option.value] as never;\n      });\n      const messagesFromOptions = getMessagesFromIdxRemediationValue(optionValues) || [];\n      messages = [...messages, ...messagesFromOptions] as never;\n    }\n    return messages;\n  }, []);\n}\n\nexport function getMessagesFromResponse(idxResponse: IdxResponse, options: RunOptions): IdxMessage[] {\n  let messages: IdxMessage[] = [];\n  const { rawIdxState, neededToProceed } = idxResponse;\n\n  // Handle global messages\n  const globalMessages = rawIdxState.messages?.value.map(message => message);\n  if (globalMessages) {\n    messages = [...messages, ...globalMessages] as never;\n  }\n\n  // Handle field messages for current flow\n  // Preserve existing logic for general cases, remove in the next major version\n  // Follow ion response format for top level messages when useGenericRemediator is true\n  if (!options.useGenericRemediator) {\n    for (let remediation of neededToProceed) {\n      const fieldMessages = getMessagesFromIdxRemediationValue(remediation.value);\n      if (fieldMessages) {\n        messages = [...messages, ...fieldMessages] as never;\n      }\n    }\n  }\n\n  // API may return identical error on same field, filter by i18n key\n  const seen = {};\n  messages = messages.reduce((filtered, message) => {\n    const key = message.i18n?.key;\n    if (key && seen[key] && message.message === seen[key].message) {\n      return filtered;\n    }\n    seen[key] = message;\n    filtered = [...filtered, message] as never;\n    return filtered;\n  }, []);\n\n  return messages;\n}\n\n\nexport function getEnabledFeatures(idxResponse: IdxResponse): IdxFeature[] {\n  const res = [];\n  const { actions, neededToProceed } = idxResponse;\n\n  if (actions['currentAuthenticator-recover']) {\n    res.push(IdxFeature.PASSWORD_RECOVERY as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'select-enroll-profile')) {\n    res.push(IdxFeature.REGISTRATION as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'redirect-idp')) {\n    res.push(IdxFeature.SOCIAL_IDP as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'unlock-account')) {\n    res.push(IdxFeature.ACCOUNT_UNLOCK as never);\n  }\n\n  return res;\n}\n\nexport function getAvailableSteps(\n  authClient: OktaAuthIdxInterface, \n  idxResponse: IdxResponse, \n  useGenericRemediator?: boolean\n): NextStep[] {\n  const res: NextStep[] = [];\n\n  const remediatorMap: Record<string, RemediatorConstructor> = Object.values(ctx.remediators)\n    .reduce((map, remediatorClass) => {\n      // Only add concrete subclasses to the map\n      if (remediatorClass.remediationName) {\n        map[remediatorClass.remediationName] = remediatorClass;\n      }\n      return map;\n    }, {});\n\n  for (let remediation of idxResponse.neededToProceed) {\n    const T = getRemediatorClass(remediation, { useGenericRemediator, remediators: remediatorMap });\n    if (T) {\n      const remediator: Remediator = new T(remediation);\n      res.push (remediator.getNextStep(authClient, idxResponse.context) as never);\n    }\n  }\n\n  for (const [name] of Object.entries((idxResponse.actions || {}))) {\n    let stepObj = {\n      name, \n      action: async (params?) => {\n        return authClient.idx.proceed({ \n          actions: [{ name, params }] \n        });\n      }\n    };\n    if (name.startsWith('currentAuthenticator')) {\n      const [part1, part2] = split2(name, '-');\n      const actionObj = idxResponse.rawIdxState[part1].value[part2];\n      /* eslint-disable no-unused-vars, @typescript-eslint/no-unused-vars */\n      const {\n        href, \n        method, \n        rel, \n        accepts, \n        produces, \n        ...rest\n      } = actionObj;\n      /* eslint-enable no-unused-vars, @typescript-eslint/no-unused-vars */\n      const value = actionObj.value?.filter(item => item.name !== 'stateHandle');\n      stepObj = { \n        ...rest,  \n        ...(value && { value }),\n        ...stepObj,\n      };\n    }\n    res.push(stepObj);\n  }\n\n  return res;\n}\n\nexport function filterValuesForRemediation(\n  idxResponse: IdxResponse,\n  remediationName: string,\n  values: RemediationValues\n): RemediationValues {\n  const remediations = idxResponse.neededToProceed || [];\n  const remediation = remediations.find(r => r.name === remediationName);\n  if (!remediation) {\n    // step was specified, but remediation was not found. This is unexpected!\n    warn(`filterValuesForRemediation: \"${remediationName}\" did not match any remediations`);\n    return values;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const valuesForRemediation = remediation.value!.reduce((res, entry) => {\n    const { name, value } = entry;\n    if (name === 'stateHandle') {\n      res[name] = value; // use the stateHandle value in the remediation\n    } else {\n      res[name] = values[name]; // use the value provided by the caller\n    }\n    return res;\n  }, {});\n  return valuesForRemediation;\n}\n\nfunction getRemediatorClass(remediation: IdxRemediation, options: RemediateOptions) {\n  const { useGenericRemediator, remediators } = options;\n  \n  if (!remediation) {\n    return undefined;\n  }\n\n  if (useGenericRemediator) {\n    return GenericRemediator;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return remediators![remediation.name];\n}\n\n// Return first match idxRemediation in allowed remediators\n// eslint-disable-next-line complexity\nexport function getRemediator(\n  idxResponse: IdxResponse,\n  values: RemediationValues,\n  options: RemediateOptions,\n): Remediator | undefined {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const remediators = options.remediators!;\n  const useGenericRemediator = options.useGenericRemediator;\n  const {neededToProceed: idxRemediations, context} = idxResponse;\n\n  let remediator: Remediator;\n  // remediation name specified by caller - fast-track remediator lookup \n  if (options.step) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediation = idxRemediations.find(({ name }) => name === options.step)!;\n    if (remediation) {\n      const T = getRemediatorClass(remediation, options);\n      return T ? new T(remediation, values, options) : undefined;\n    } else {\n      // step was specified, but remediation was not found. This is unexpected!\n      warn(`step \"${options.step}\" did not match any remediations`);\n      return;\n    }\n  }\n\n  const remediatorCandidates: Remediator[] = [];\n  if (useGenericRemediator) {\n    // always pick the first remediation for when use GenericRemediator\n    remediatorCandidates.push(new GenericRemediator(idxRemediations[0], values, options));\n  } else {\n    for (let remediation of idxRemediations) {\n      const isRemeditionInFlow = Object.keys(remediators as object).includes(remediation.name);\n      if (!isRemeditionInFlow) {\n        continue;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const T = getRemediatorClass(remediation, options)!;\n      remediator = new T(remediation, values, options);\n      if (remediator.canRemediate(context)) {\n        // found the remediator\n        return remediator;\n      }\n      // remediator cannot handle the current values\n      // maybe return for next step\n      remediatorCandidates.push(remediator);  \n    }\n  }\n  \n  return remediatorCandidates[0];\n}\n\n\nexport function getNextStep(\n  authClient: OktaAuthIdxInterface, remediator: Remediator, idxResponse: IdxResponse\n): NextStep {\n  const nextStep = remediator.getNextStep(authClient, idxResponse.context);\n  const canSkip = canSkipFn(idxResponse);\n  const canResend = canResendFn(idxResponse);\n  return {\n    ...nextStep,\n    ...(canSkip && {canSkip}),\n    ...(canResend && {canResend}),\n  };\n}\n\nexport function handleFailedResponse(\n  authClient: OktaAuthIdxInterface,\n  idxResponse: IdxResponse,\n  options = {}\n): RemediationResponse {\n  const terminal = isTerminalResponse(idxResponse);\n  const messages = getMessagesFromResponse(idxResponse, options);\n  if (terminal) {\n    return { idxResponse, terminal, messages };\n  } else {\n    const remediator = getRemediator(idxResponse, {}, options);\n    const nextStep = remediator && getNextStep(authClient, remediator, idxResponse);\n    return {\n      idxResponse,\n      messages,\n      ...(nextStep && { nextStep }),\n    };\n  }\n  \n}\n"],"mappings":"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"}