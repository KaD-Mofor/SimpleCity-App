{"version":3,"file":"PasswordTransaction.js","names":["PasswordTransaction","BaseTransaction","constructor","oktaAuth","options","res","accessToken","id","status","created","lastUpdated","_links","PasswordStatus","NOT_ENROLLED","enroll","payload","fn","generateRequestFnFromLinks","methodName","links","get","update","delete"],"sources":["../../../../lib/myaccount/transactions/PasswordTransaction.ts"],"sourcesContent":["import { EnrollPasswordPayload, UpdatePasswordPayload, PasswordStatus } from '../types';\nimport BaseTransaction from './Base';\nimport { generateRequestFnFromLinks } from '../request';\n\nexport default class PasswordTransaction extends BaseTransaction {\n  id: string;\n  created: string;\n  lastUpdated: string;\n  status: PasswordStatus;\n\n  // eslint-disable-next-line no-use-before-define\n  get?: () => Promise<PasswordTransaction>;\n  // eslint-disable-next-line no-use-before-define\n  enroll?: (payload: EnrollPasswordPayload) => Promise<PasswordTransaction>;\n  // eslint-disable-next-line no-use-before-define\n  update?: (payload: UpdatePasswordPayload) => Promise<PasswordTransaction>;\n  delete?: () => Promise<BaseTransaction>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { res, accessToken } = options;\n    // assign required fields from res\n    const { id, status, created, lastUpdated, _links } = res;\n    this.id = id;\n    this.status = status;\n    this.created = created;\n    this.lastUpdated = lastUpdated;\n\n    // assign transformed fns to transaction\n    if (this.status == PasswordStatus.NOT_ENROLLED) {\n      this.enroll = async (payload) => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'enroll',\n          links: _links,\n        }, PasswordTransaction);\n        return await fn(payload);\n      };\n    }\n    else {\n      this.get = async () => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'get',\n          links: _links,\n        }, PasswordTransaction);\n        return await fn();\n      };\n\n      this.update = async (payload) => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'put', \n          links: _links,\n        }, PasswordTransaction);\n        return await fn(payload);\n      };\n  \n      this.delete = async () => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'delete', \n          links: _links \n        });\n        return await fn();\n      };\n    }\n  }\n}\n"],"mappings":";;;;AAAA;AACA;AACA;AAEe,MAAMA,mBAAmB,SAASC,aAAe,CAAC;EAM/D;;EAEA;;EAEA;;EAIAC,WAAW,CAACC,QAAQ,EAAEC,OAAO,EAAE;IAC7B,KAAK,CAACD,QAAQ,EAAEC,OAAO,CAAC;IAExB,MAAM;MAAEC,GAAG;MAAEC;IAAY,CAAC,GAAGF,OAAO;IACpC;IACA,MAAM;MAAEG,EAAE;MAAEC,MAAM;MAAEC,OAAO;MAAEC,WAAW;MAAEC;IAAO,CAAC,GAAGN,GAAG;IACxD,IAAI,CAACE,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,WAAW,GAAGA,WAAW;;IAE9B;IACA,IAAI,IAAI,CAACF,MAAM,IAAII,qBAAc,CAACC,YAAY,EAAE;MAC9C,IAAI,CAACC,MAAM,GAAG,MAAOC,OAAO,IAAK;QAC/B,MAAMC,EAAE,GAAG,IAAAC,mCAA0B,EAAC;UACpCd,QAAQ;UACRG,WAAW;UACXY,UAAU,EAAE,QAAQ;UACpBC,KAAK,EAAER;QACT,CAAC,EAAEX,mBAAmB,CAAC;QACvB,OAAO,MAAMgB,EAAE,CAACD,OAAO,CAAC;MAC1B,CAAC;IACH,CAAC,MACI;MACH,IAAI,CAACK,GAAG,GAAG,YAAY;QACrB,MAAMJ,EAAE,GAAG,IAAAC,mCAA0B,EAAC;UACpCd,QAAQ;UACRG,WAAW;UACXY,UAAU,EAAE,KAAK;UACjBC,KAAK,EAAER;QACT,CAAC,EAAEX,mBAAmB,CAAC;QACvB,OAAO,MAAMgB,EAAE,EAAE;MACnB,CAAC;MAED,IAAI,CAACK,MAAM,GAAG,MAAON,OAAO,IAAK;QAC/B,MAAMC,EAAE,GAAG,IAAAC,mCAA0B,EAAC;UACpCd,QAAQ;UACRG,WAAW;UACXY,UAAU,EAAE,KAAK;UACjBC,KAAK,EAAER;QACT,CAAC,EAAEX,mBAAmB,CAAC;QACvB,OAAO,MAAMgB,EAAE,CAACD,OAAO,CAAC;MAC1B,CAAC;MAED,IAAI,CAACO,MAAM,GAAG,YAAY;QACxB,MAAMN,EAAE,GAAG,IAAAC,mCAA0B,EAAC;UACpCd,QAAQ;UACRG,WAAW;UACXY,UAAU,EAAE,QAAQ;UACpBC,KAAK,EAAER;QACT,CAAC,CAAC;QACF,OAAO,MAAMK,EAAE,EAAE;MACnB,CAAC;IACH;EACF;AACF;AAAC;AAAA"}