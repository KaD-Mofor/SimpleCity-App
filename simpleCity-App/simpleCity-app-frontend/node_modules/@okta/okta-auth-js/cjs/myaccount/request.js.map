{"version":3,"file":"request.js","names":["sendRequest","oktaAuth","options","TransactionClass","BaseTransaction","accessToken","accessTokenObj","tokenManager","getTokensSync","issuer","getIssuerOrigin","url","method","payload","requestUrl","startsWith","AuthSdkError","res","httpRequest","headers","args","ret","Array","isArray","map","item","generateRequestFnFromLinks","methodName","links","toLowerCase","link","self","href","hints","allow"],"sources":["../../../lib/myaccount/request.ts"],"sourcesContent":["import { \n  default as BaseTransaction,\n  TransactionType,\n  TransactionLinks\n} from './transactions/Base';\nimport { httpRequest } from '../http';\nimport { AuthSdkError } from '../errors';\nimport { MyAccountRequestOptions as RequestOptions } from './types';\nimport { OktaAuthOAuthInterface } from '../oidc/types';\n\ntype SendRequestOptions = RequestOptions & {\n  url: string;\n  method: string;\n}\n\n/* eslint-disable complexity */\nexport async function sendRequest<\n  T extends BaseTransaction = BaseTransaction,\n  N extends 'plural' | 'single' = 'single',\n  NT = N extends 'plural' ? T[] : T\n> (\n  oktaAuth: OktaAuthOAuthInterface, \n  options: SendRequestOptions,\n  TransactionClass: TransactionType<T> = BaseTransaction as TransactionType<T>,\n): Promise<NT> {\n  const {\n    accessToken: accessTokenObj\n  } = oktaAuth.tokenManager.getTokensSync();\n  \n  const accessToken = options.accessToken || accessTokenObj?.accessToken;\n  const issuer = oktaAuth.getIssuerOrigin();\n  const { url, method, payload } = options;\n  const requestUrl = url.startsWith(issuer!) ? url : `${issuer}${url}`;\n\n  if (!accessToken) {\n    throw new AuthSdkError('AccessToken is required to request MyAccount API endpoints.');\n  }\n  \n  const res = await httpRequest(oktaAuth, {\n    headers: { 'Accept': '*/*;okta-version=1.0.0' },\n    accessToken,\n    url: requestUrl,\n    method,\n    ...(payload && { args: payload })\n  });\n\n  let ret: T | T[];\n  if (Array.isArray(res)) {\n    ret = res.map(item => new TransactionClass(oktaAuth, { \n      res: item, \n      accessToken\n    }));\n  } else {\n    ret = new TransactionClass(oktaAuth, { \n      res, \n      accessToken\n    });\n  }\n  return ret as NT;\n}\n/* eslint-enable complexity */\n\nexport type GenerateRequestFnFromLinksOptions = {\n  oktaAuth: OktaAuthOAuthInterface;\n  accessToken: string;\n  methodName: string;\n  links: TransactionLinks;\n}\n\ntype IRequestFnFromLinks<T extends BaseTransaction> = (payload?) => Promise<T>;\n\nexport function generateRequestFnFromLinks<T extends BaseTransaction>(\n  {\n    oktaAuth, \n    accessToken,\n    methodName,\n    links,\n  }: GenerateRequestFnFromLinksOptions,\n  TransactionClass: TransactionType<T> = BaseTransaction as TransactionType<T>,\n): IRequestFnFromLinks<T> {\n  for (const method of ['GET', 'POST', 'PUT', 'DELETE']) {\n    if (method.toLowerCase() === methodName) {\n      const link = links.self;\n      return (async (payload?) => sendRequest<T, 'single'>(oktaAuth, {\n        accessToken,\n        url: link.href,\n        method,\n        payload,\n      }, TransactionClass));\n    }\n  }\n  \n  const link = links[methodName];\n  if (!link) {\n    throw new AuthSdkError(`No link is found with methodName: ${methodName}`);\n  }\n\n  return (async (payload?) => sendRequest<T, 'single'>(oktaAuth, {\n    accessToken,\n    url: link.href,\n    method: link.hints!.allow![0],\n    payload,\n  }, TransactionClass));\n}\n"],"mappings":";;;;;AAAA;AAKA;AACA;AASA;AACO,eAAeA,WAAW,CAK/BC,QAAgC,EAChCC,OAA2B,EAC3BC,gBAAoC,GAAGC,aAAqC,EAC/D;EACb,MAAM;IACJC,WAAW,EAAEC;EACf,CAAC,GAAGL,QAAQ,CAACM,YAAY,CAACC,aAAa,EAAE;EAEzC,MAAMH,WAAW,GAAGH,OAAO,CAACG,WAAW,IAAIC,cAAc,EAAED,WAAW;EACtE,MAAMI,MAAM,GAAGR,QAAQ,CAACS,eAAe,EAAE;EACzC,MAAM;IAAEC,GAAG;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAGX,OAAO;EACxC,MAAMY,UAAU,GAAGH,GAAG,CAACI,UAAU,CAACN,MAAM,CAAE,GAAGE,GAAG,GAAI,GAAEF,MAAO,GAAEE,GAAI,EAAC;EAEpE,IAAI,CAACN,WAAW,EAAE;IAChB,MAAM,IAAIW,oBAAY,CAAC,6DAA6D,CAAC;EACvF;EAEA,MAAMC,GAAG,GAAG,MAAM,IAAAC,iBAAW,EAACjB,QAAQ,EAAE;IACtCkB,OAAO,EAAE;MAAE,QAAQ,EAAE;IAAyB,CAAC;IAC/Cd,WAAW;IACXM,GAAG,EAAEG,UAAU;IACfF,MAAM;IACN,IAAIC,OAAO,IAAI;MAAEO,IAAI,EAAEP;IAAQ,CAAC;EAClC,CAAC,CAAC;EAEF,IAAIQ,GAAY;EAChB,IAAIC,KAAK,CAACC,OAAO,CAACN,GAAG,CAAC,EAAE;IACtBI,GAAG,GAAGJ,GAAG,CAACO,GAAG,CAACC,IAAI,IAAI,IAAItB,gBAAgB,CAACF,QAAQ,EAAE;MACnDgB,GAAG,EAAEQ,IAAI;MACTpB;IACF,CAAC,CAAC,CAAC;EACL,CAAC,MAAM;IACLgB,GAAG,GAAG,IAAIlB,gBAAgB,CAACF,QAAQ,EAAE;MACnCgB,GAAG;MACHZ;IACF,CAAC,CAAC;EACJ;EACA,OAAOgB,GAAG;AACZ;AACA;;AAWO,SAASK,0BAA0B,CACxC;EACEzB,QAAQ;EACRI,WAAW;EACXsB,UAAU;EACVC;AACiC,CAAC,EACpCzB,gBAAoC,GAAGC,aAAqC,EACpD;EACxB,KAAK,MAAMQ,MAAM,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,EAAE;IACrD,IAAIA,MAAM,CAACiB,WAAW,EAAE,KAAKF,UAAU,EAAE;MACvC,MAAMG,IAAI,GAAGF,KAAK,CAACG,IAAI;MACvB,OAAQ,MAAOlB,OAAQ,IAAKb,WAAW,CAAcC,QAAQ,EAAE;QAC7DI,WAAW;QACXM,GAAG,EAAEmB,IAAI,CAACE,IAAI;QACdpB,MAAM;QACNC;MACF,CAAC,EAAEV,gBAAgB,CAAC;IACtB;EACF;EAEA,MAAM2B,IAAI,GAAGF,KAAK,CAACD,UAAU,CAAC;EAC9B,IAAI,CAACG,IAAI,EAAE;IACT,MAAM,IAAId,oBAAY,CAAE,qCAAoCW,UAAW,EAAC,CAAC;EAC3E;EAEA,OAAQ,MAAOd,OAAQ,IAAKb,WAAW,CAAcC,QAAQ,EAAE;IAC7DI,WAAW;IACXM,GAAG,EAAEmB,IAAI,CAACE,IAAI;IACdpB,MAAM,EAAEkB,IAAI,CAACG,KAAK,CAAEC,KAAK,CAAE,CAAC,CAAC;IAC7BrB;EACF,CAAC,EAAEV,gBAAgB,CAAC;AACtB"}