{"version":3,"file":"passwordApi.js","names":["getPassword","oktaAuth","options","transaction","sendRequest","url","method","accessToken","PasswordTransaction","enrollPassword","payload","updatePassword","deletePassword"],"sources":["../../../lib/myaccount/passwordApi.ts"],"sourcesContent":["import { sendRequest } from './request';\nimport { IAPIFunction } from './types';\nimport {\n  BaseTransaction, \n  PasswordTransaction\n} from './transactions';\n\n/**\n * @scope: okta.myAccount.password.read\n */\nexport const getPassword: IAPIFunction<PasswordTransaction> = async (\n  oktaAuth,\n  options\n) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/password`,\n    method: 'GET',\n    accessToken: options?.accessToken,\n  }, PasswordTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.password.manage\n */\nexport const enrollPassword: IAPIFunction<PasswordTransaction> = async (\n  oktaAuth, \n  options\n): Promise<PasswordTransaction> => {\n  const { accessToken, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/password',\n    method: 'POST',\n    payload,\n    accessToken,\n  }, PasswordTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.password.manage\n */\nexport const updatePassword: IAPIFunction<PasswordTransaction> = async (\n  oktaAuth, \n  options\n): Promise<PasswordTransaction> => {\n  const { accessToken, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/password',\n    method: 'PUT',\n    payload,\n    accessToken,\n  }, PasswordTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.password.manage\n */\nexport const deletePassword: IAPIFunction<BaseTransaction> = async (\n  oktaAuth, \n  options?\n) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/password`,\n    method: 'DELETE',\n    accessToken: options?.accessToken,\n  });\n  return transaction;\n};\n"],"mappings":";;;AAAA;AAEA;AAKA;AACA;AACA;AACO,MAAMA,WAA8C,GAAG,OAC5DC,QAAQ,EACRC,OAAO,KACJ;EACH,MAAMC,WAAW,GAAG,MAAM,IAAAC,oBAAW,EAACH,QAAQ,EAAE;IAC9CI,GAAG,EAAG,yBAAwB;IAC9BC,MAAM,EAAE,KAAK;IACbC,WAAW,EAAEL,OAAO,EAAEK;EACxB,CAAC,EAAEC,iCAAmB,CAAC;EACvB,OAAOL,WAAW;AACpB,CAAC;;AAED;AACA;AACA;AAFA;AAGO,MAAMM,cAAiD,GAAG,OAC/DR,QAAQ,EACRC,OAAO,KAC0B;EACjC,MAAM;IAAEK,WAAW;IAAEG;EAAQ,CAAC,GAAGR,OAAQ;EACzC,MAAMC,WAAW,GAAG,MAAM,IAAAC,oBAAW,EAACH,QAAQ,EAAE;IAC9CI,GAAG,EAAE,yBAAyB;IAC9BC,MAAM,EAAE,MAAM;IACdI,OAAO;IACPH;EACF,CAAC,EAAEC,iCAAmB,CAAC;EACvB,OAAOL,WAAW;AACpB,CAAC;;AAED;AACA;AACA;AAFA;AAGO,MAAMQ,cAAiD,GAAG,OAC/DV,QAAQ,EACRC,OAAO,KAC0B;EACjC,MAAM;IAAEK,WAAW;IAAEG;EAAQ,CAAC,GAAGR,OAAQ;EACzC,MAAMC,WAAW,GAAG,MAAM,IAAAC,oBAAW,EAACH,QAAQ,EAAE;IAC9CI,GAAG,EAAE,yBAAyB;IAC9BC,MAAM,EAAE,KAAK;IACbI,OAAO;IACPH;EACF,CAAC,EAAEC,iCAAmB,CAAC;EACvB,OAAOL,WAAW;AACpB,CAAC;;AAED;AACA;AACA;AAFA;AAGO,MAAMS,cAA6C,GAAG,OAC3DX,QAAQ,EACRC,OAAQ,KACL;EACH,MAAMC,WAAW,GAAG,MAAM,IAAAC,oBAAW,EAACH,QAAQ,EAAE;IAC9CI,GAAG,EAAG,yBAAwB;IAC9BC,MAAM,EAAE,QAAQ;IAChBC,WAAW,EAAEL,OAAO,EAAEK;EACxB,CAAC,CAAC;EACF,OAAOJ,WAAW;AACpB,CAAC;AAAC"}