(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/router'), require('@angular/common'), require('@okta/okta-auth-js'), require('rxjs/operators'), require('rxjs'), require('compare-versions')) :
    typeof define === 'function' && define.amd ? define('@okta/okta-angular', ['exports', '@angular/core', '@angular/router', '@angular/common', '@okta/okta-auth-js', 'rxjs/operators', 'rxjs', 'compare-versions'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.okta = global.okta || {}, global.okta["okta-angular"] = {}), global.ng.core, global.ng.router, global.ng.common, global.oktaAuthJs, global.rxjs.operators, global.rxjs, global.compareVersions));
})(this, (function (exports, i0, router, common, i2, operators, rxjs, compareVersions) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);

    /******************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function")
            throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn)
                context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access)
                context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done)
                throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0)
                    continue;
                if (result === null || typeof result !== "object")
                    throw new TypeError("Object expected");
                if (_ = accept(result.get))
                    descriptor.get = _;
                if (_ = accept(result.set))
                    descriptor.set = _;
                if (_ = accept(result.init))
                    initializers.push(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field")
                    initializers.push(_);
                else
                    descriptor[key] = _;
            }
        }
        if (target)
            Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    }
    ;
    function __runInitializers(thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    }
    ;
    function __propKey(x) {
        return typeof x === "symbol" ? x : "".concat(x);
    }
    ;
    function __setFunctionName(f, name, prefix) {
        if (typeof name === "symbol")
            name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    }
    ;
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter$4(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function () { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }
    function __classPrivateFieldIn(state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function"))
            throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    }

    /*
     * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.
     * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
     *
     * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
     * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     *
     * See the License for the specific language governing permissions and limitations under the License.
     */
    var OKTA_CONFIG = new i0.InjectionToken('okta.config.angular');
    var OKTA_AUTH = new i0.InjectionToken('okta.auth');

    var OktaAuthConfigService = /** @class */ (function () {
        function OktaAuthConfigService(config) {
            if (config) {
                this.config = config;
            }
        }
        OktaAuthConfigService.prototype.getConfig = function () {
            return this.config;
        };
        OktaAuthConfigService.prototype.setConfig = function (config) {
            this.config = config;
        };
        return OktaAuthConfigService;
    }());
    OktaAuthConfigService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: OktaAuthConfigService, deps: [{ token: OKTA_CONFIG, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    OktaAuthConfigService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: OktaAuthConfigService, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: OktaAuthConfigService, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root'
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [OKTA_CONFIG]
                        }] }];
        } });

    var __awaiter$3 = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };
    var OktaCallbackComponent = /** @class */ (function () {
        function OktaCallbackComponent(configService, oktaAuth, injector) {
            this.configService = configService;
            this.oktaAuth = oktaAuth;
            this.injector = injector;
        }
        OktaCallbackComponent.prototype.ngOnInit = function () {
            return __awaiter$3(this, void 0, void 0, function () {
                var config, e_1, isInteractionRequiredError, onAuthResume, onAuthRequired, callbackFn;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            config = this.configService.getConfig();
                            if (!config) {
                                throw new Error('Okta config is not provided');
                            }
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, 3, , 4]);
                            // Parse code or tokens from the URL, store tokens in the TokenManager, and redirect back to the originalUri
                            return [4 /*yield*/, this.oktaAuth.handleLoginRedirect()];
                        case 2:
                            // Parse code or tokens from the URL, store tokens in the TokenManager, and redirect back to the originalUri
                            _a.sent();
                            return [3 /*break*/, 4];
                        case 3:
                            e_1 = _a.sent();
                            isInteractionRequiredError = this.oktaAuth.isInteractionRequiredError || this.oktaAuth.idx.isInteractionRequiredError;
                            if (isInteractionRequiredError(e_1) && this.injector) {
                                onAuthResume = config.onAuthResume, onAuthRequired = config.onAuthRequired;
                                callbackFn = onAuthResume || onAuthRequired;
                                if (callbackFn) {
                                    callbackFn(this.oktaAuth, this.injector);
                                    return [2 /*return*/];
                                }
                            }
                            this.error = e_1.toString();
                            return [3 /*break*/, 4];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
        return OktaCallbackComponent;
    }());
    OktaCallbackComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: OktaCallbackComponent, deps: [{ token: OktaAuthConfigService }, { token: OKTA_AUTH }, { token: i0__namespace.Injector, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Component });
    OktaCallbackComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: OktaCallbackComponent, selector: "ng-component", ngImport: i0__namespace, template: "<div>{{error}}</div>", isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: OktaCallbackComponent, decorators: [{
                type: i0.Component,
                args: [{
                        template: "<div>{{error}}</div>"
                    }]
            }], ctorParameters: function () {
            return [{ type: OktaAuthConfigService }, { type: i2__namespace.OktaAuth, decorators: [{
                            type: i0.Inject,
                            args: [OKTA_AUTH]
                        }] }, { type: i0__namespace.Injector, decorators: [{
                            type: i0.Optional
                        }] }];
        } });

    var __awaiter$2 = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };
    var OktaAuthGuard = /** @class */ (function () {
        function OktaAuthGuard(oktaAuth, injector, configService) {
            var _this = this;
            this.oktaAuth = oktaAuth;
            this.injector = injector;
            this.configService = configService;
            this.updateAuthStateListener = function (authState) { return __awaiter$2(_this, void 0, void 0, function () {
                var isAuthenticated;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0: return [4 /*yield*/, this.isAuthenticated(this.routeData, authState)];
                        case 1:
                            isAuthenticated = _d.sent();
                            if (!isAuthenticated) {
                                this.handleLogin(this.state.url, this.routeData);
                            }
                            return [2 /*return*/];
                    }
                });
            }); };
            var config = this.configService.getConfig();
            if (!config) {
                throw new Error('Okta config is not provided');
            }
            this.onAuthRequired = config.onAuthRequired;
            // Unsubscribe updateAuthStateListener when route change
            var router$1 = injector.get(router.Router);
            router$1.events.pipe(operators.filter(function (e) { return e instanceof router.NavigationStart && _this.state && _this.state.url !== e.url; })).subscribe(function () {
                _this.oktaAuth.authStateManager.unsubscribe(_this.updateAuthStateListener);
            });
        }
        OktaAuthGuard.prototype.canLoad = function (route) {
            var _a;
            return __awaiter$2(this, void 0, void 0, function () {
                var isAuthenticated, router$1, nav, originalUri;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0:
                            this.onAuthRequired = ((_a = route.data) === null || _a === void 0 ? void 0 : _a.onAuthRequired) || this.onAuthRequired;
                            return [4 /*yield*/, this.isAuthenticated(route.data)];
                        case 1:
                            isAuthenticated = _d.sent();
                            if (isAuthenticated) {
                                return [2 /*return*/, true];
                            }
                            router$1 = this.injector.get(router.Router);
                            nav = router$1.getCurrentNavigation();
                            originalUri = nav ? nav.extractedUrl.toString() : undefined;
                            return [4 /*yield*/, this.handleLogin(originalUri, route.data)];
                        case 2:
                            _d.sent();
                            return [2 /*return*/, false];
                    }
                });
            });
        };
        /**
         * Gateway for protected route. Returns true if there is a valid idToken,
         * otherwise it will cache the route and start the login flow.
         * @param route
         * @param state
         */
        OktaAuthGuard.prototype.canActivate = function (route, state) {
            return __awaiter$2(this, void 0, void 0, function () {
                var isAuthenticated;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0:
                            // Track states for current route
                            this.state = state;
                            this.routeData = route.data;
                            this.onAuthRequired = route.data && route.data.onAuthRequired || this.onAuthRequired;
                            // Protect the route after accessing
                            this.oktaAuth.authStateManager.subscribe(this.updateAuthStateListener);
                            return [4 /*yield*/, this.isAuthenticated(route.data)];
                        case 1:
                            isAuthenticated = _d.sent();
                            if (isAuthenticated) {
                                return [2 /*return*/, true];
                            }
                            return [4 /*yield*/, this.handleLogin(state.url, route.data)];
                        case 2:
                            _d.sent();
                            return [2 /*return*/, false];
                    }
                });
            });
        };
        OktaAuthGuard.prototype.canActivateChild = function (route, state) {
            return __awaiter$2(this, void 0, void 0, function () {
                return __generator(this, function (_d) {
                    return [2 /*return*/, this.canActivate(route, state)];
                });
            });
        };
        OktaAuthGuard.prototype.isAuthenticated = function (routeData, authState) {
            var _a, _b, _c;
            return __awaiter$2(this, void 0, void 0, function () {
                var isAuthenticated, _d, res;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0:
                            if (!authState) return [3 /*break*/, 1];
                            _d = authState === null || authState === void 0 ? void 0 : authState.isAuthenticated;
                            return [3 /*break*/, 3];
                        case 1: return [4 /*yield*/, this.oktaAuth.isAuthenticated()];
                        case 2:
                            _d = _e.sent();
                            _e.label = 3;
                        case 3:
                            isAuthenticated = _d;
                            res = isAuthenticated;
                            if ((_a = routeData === null || routeData === void 0 ? void 0 : routeData.okta) === null || _a === void 0 ? void 0 : _a.acrValues) {
                                if (!authState) {
                                    authState = this.oktaAuth.authStateManager.getAuthState();
                                }
                                res = ((_b = authState === null || authState === void 0 ? void 0 : authState.idToken) === null || _b === void 0 ? void 0 : _b.claims.acr) === ((_c = routeData === null || routeData === void 0 ? void 0 : routeData.okta) === null || _c === void 0 ? void 0 : _c.acrValues);
                            }
                            return [2 /*return*/, res];
                    }
                });
            });
        };
        OktaAuthGuard.prototype.handleLogin = function (originalUri, routeData) {
            var _a;
            return __awaiter$2(this, void 0, void 0, function () {
                var options;
                return __generator(this, function (_d) {
                    // Store the current path
                    if (originalUri) {
                        this.oktaAuth.setOriginalUri(originalUri);
                    }
                    options = {};
                    if ((_a = routeData === null || routeData === void 0 ? void 0 : routeData.okta) === null || _a === void 0 ? void 0 : _a.acrValues) {
                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
                        // @ts-ignore Supports auth-js >= 7.1.0
                        options.acrValues = routeData.okta.acrValues;
                    }
                    if (this.onAuthRequired) {
                        this.onAuthRequired(this.oktaAuth, this.injector, options);
                    }
                    else {
                        this.oktaAuth.signInWithRedirect(options);
                    }
                    return [2 /*return*/];
                });
            });
        };
        return OktaAuthGuard;
    }());
    OktaAuthGuard.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: OktaAuthGuard, deps: [{ token: OKTA_AUTH }, { token: i0__namespace.Injector }, { token: OktaAuthConfigService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    OktaAuthGuard.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: OktaAuthGuard });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: OktaAuthGuard, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: i2__namespace.OktaAuth, decorators: [{
                            type: i0.Inject,
                            args: [OKTA_AUTH]
                        }] }, { type: i0__namespace.Injector }, { type: OktaAuthConfigService }];
        } });

    var __awaiter$1 = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };
    var defaultAuthState = {
        isAuthenticated: false
    };
    var OktaAuthStateService = /** @class */ (function () {
        function OktaAuthStateService(oktaAuth) {
            this.oktaAuth = oktaAuth;
            this._authState = new rxjs.BehaviorSubject(defaultAuthState);
            // only expose readonly property
            this.authState$ = this._authState.asObservable();
            this.updateAuthState = this.updateAuthState.bind(this);
            // set initial authState
            var initialAuthState = this.oktaAuth.authStateManager.getAuthState() || defaultAuthState;
            this._authState.next(initialAuthState);
            // subscribe to future changes
            this.oktaAuth.authStateManager.subscribe(this.updateAuthState);
        }
        OktaAuthStateService.prototype.ngOnDestroy = function () {
            this.oktaAuth.authStateManager.unsubscribe(this.updateAuthState);
        };
        // Observes as true when any group input can match groups from user claims 
        OktaAuthStateService.prototype.hasAnyGroups = function (groups) {
            var _this = this;
            return this.authState$.pipe(operators.mergeMap(function (_a) {
                var isAuthenticated = _a.isAuthenticated, idToken = _a.idToken;
                return __awaiter$1(_this, void 0, void 0, function () {
                    var key, value, userInfo;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                // return false when not authenticated or openid is not in scopes
                                if (!isAuthenticated || !idToken) {
                                    return [2 /*return*/, false];
                                }
                                // transform inputs to consistent object format
                                if (typeof groups === 'string') {
                                    groups = { groups: [groups] };
                                }
                                if (Array.isArray(groups)) {
                                    groups = { groups: groups };
                                }
                                key = Object.keys(groups)[0];
                                value = groups[key];
                                // groups or custom claims is available in idToken
                                if (idToken.claims[key]) {
                                    return [2 /*return*/, value.some(function (authority) { return idToken.claims[key].includes(authority); })];
                                }
                                return [4 /*yield*/, this.oktaAuth.getUser()];
                            case 1:
                                userInfo = _a.sent();
                                if (!userInfo[key]) {
                                    return [2 /*return*/, false];
                                }
                                return [2 /*return*/, value.some(function (authority) { return userInfo[key].includes(authority); })];
                        }
                    });
                });
            }));
        };
        OktaAuthStateService.prototype.updateAuthState = function (authState) {
            this._authState.next(authState);
        };
        return OktaAuthStateService;
    }());
    OktaAuthStateService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: OktaAuthStateService, deps: [{ token: OKTA_AUTH }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    OktaAuthStateService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: OktaAuthStateService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: OktaAuthStateService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: i2__namespace.OktaAuth, decorators: [{
                            type: i0.Inject,
                            args: [OKTA_AUTH]
                        }] }];
        } });

    var packageInfo = {
        'name': '@okta/okta-angular',
        'version': '6.4.0',
        'authJSMinSupportedVersion': '5.3.1'
    };

    var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };
    var OktaAuthFactoryService = /** @class */ (function () {
        function OktaAuthFactoryService() {
        }
        OktaAuthFactoryService.setupOktaAuth = function (oktaAuth, router, location) {
            var _this = this;
            var isAuthJsSupported = oktaAuth._oktaUserAgent && compareVersions.compare(oktaAuth._oktaUserAgent.getVersion(), packageInfo.authJSMinSupportedVersion, '>=');
            if (!isAuthJsSupported) {
                throw new i2.AuthSdkError("Passed in oktaAuth is not compatible with the SDK, minimum supported okta-auth-js version is ".concat(packageInfo.authJSMinSupportedVersion, "."));
            }
            // Add Okta UA
            oktaAuth._oktaUserAgent.addEnvironment("".concat(packageInfo.name, "/").concat(packageInfo.version));
            oktaAuth._oktaUserAgent.addEnvironment("Angular/".concat(i0.VERSION.full));
            // Provide a default implementation of `restoreOriginalUri`
            if (!oktaAuth.options.restoreOriginalUri && router && location) {
                oktaAuth.options.restoreOriginalUri = function (_, originalUri) { return __awaiter(_this, void 0, void 0, function () {
                    var baseUrl, routePath;
                    return __generator(this, function (_a) {
                        baseUrl = window.location.origin + location.prepareExternalUrl('');
                        routePath = i2.toRelativeUrl(originalUri || '/', baseUrl);
                        router.navigateByUrl(routePath);
                        return [2 /*return*/];
                    });
                }); };
            }
            // Start services
            oktaAuth.start();
        };
        OktaAuthFactoryService.createOktaAuth = function (configService, router, location) {
            var config = configService.getConfig();
            if (!config) {
                throw new Error('Okta config is not provided');
            }
            var oktaAuth = config.oktaAuth;
            if (!oktaAuth) {
                throw new Error('Okta config should contain oktaAuth');
            }
            OktaAuthFactoryService.setupOktaAuth(oktaAuth, router, location);
            return oktaAuth;
        };
        return OktaAuthFactoryService;
    }());

    var OktaHasAnyGroupDirective = /** @class */ (function () {
        function OktaHasAnyGroupDirective(
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        templateRef, viewContainer, authStateService) {
            this.templateRef = templateRef;
            this.viewContainer = viewContainer;
            this.authStateService = authStateService;
            this.groupsSub$ = new rxjs.ReplaySubject();
            this.destroySub$ = new rxjs.Subject();
        }
        OktaHasAnyGroupDirective.prototype.ngOnInit = function () {
            var _this = this;
            this.groupsSub$.pipe(operators.filter(function (groups) { return !!groups; }), operators.switchMap(function (groups) { return _this.authStateService.hasAnyGroups(groups); }), operators.takeUntil(this.destroySub$)).subscribe(function (isAuthorized) {
                _this.viewContainer.clear();
                if (isAuthorized) {
                    _this.viewContainer.createEmbeddedView(_this.templateRef);
                }
            });
        };
        OktaHasAnyGroupDirective.prototype.ngOnChanges = function (changes) {
            if (changes['oktaHasAnyGroup'].currentValue !== changes['oktaHasAnyGroup'].previousValue) {
                this.groupsSub$.next(changes['oktaHasAnyGroup'].currentValue);
            }
        };
        OktaHasAnyGroupDirective.prototype.ngOnDestroy = function () {
            this.destroySub$.next();
            this.destroySub$.complete();
        };
        return OktaHasAnyGroupDirective;
    }());
    OktaHasAnyGroupDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: OktaHasAnyGroupDirective, deps: [{ token: i0__namespace.TemplateRef }, { token: i0__namespace.ViewContainerRef }, { token: OktaAuthStateService }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    OktaHasAnyGroupDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: OktaHasAnyGroupDirective, selector: "[oktaHasAnyGroup]", inputs: { oktaHasAnyGroup: "oktaHasAnyGroup" }, usesOnChanges: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: OktaHasAnyGroupDirective, decorators: [{
                type: i0.Directive,
                args: [{ selector: '[oktaHasAnyGroup]' }]
            }], ctorParameters: function () { return [{ type: i0__namespace.TemplateRef }, { type: i0__namespace.ViewContainerRef }, { type: OktaAuthStateService }]; }, propDecorators: { oktaHasAnyGroup: [{
                    type: i0.Input
                }] } });

    /*
     * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.
     * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
     *
     * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
     * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     *
     * See the License for the specific language governing permissions and limitations under the License.
     */
    var OktaAuthModule = /** @class */ (function () {
        function OktaAuthModule() {
        }
        OktaAuthModule.forRoot = function (config) {
            return {
                ngModule: OktaAuthModule,
                providers: [
                    { provide: OKTA_CONFIG, useValue: config },
                ]
            };
        };
        return OktaAuthModule;
    }());
    OktaAuthModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: OktaAuthModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    OktaAuthModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: OktaAuthModule, declarations: [OktaCallbackComponent,
            OktaHasAnyGroupDirective], exports: [OktaCallbackComponent,
            OktaHasAnyGroupDirective] });
    OktaAuthModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: OktaAuthModule, providers: [
            OktaAuthConfigService,
            OktaAuthStateService,
            OktaAuthGuard,
            {
                provide: OKTA_AUTH,
                useFactory: OktaAuthFactoryService.createOktaAuth,
                deps: [
                    OktaAuthConfigService,
                    [new i0.Optional(), router.Router],
                    [new i0.Optional(), common.Location]
                ]
            },
        ] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: OktaAuthModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [
                            OktaCallbackComponent,
                            OktaHasAnyGroupDirective,
                        ],
                        exports: [
                            OktaCallbackComponent,
                            OktaHasAnyGroupDirective,
                        ],
                        providers: [
                            OktaAuthConfigService,
                            OktaAuthStateService,
                            OktaAuthGuard,
                            {
                                provide: OKTA_AUTH,
                                useFactory: OktaAuthFactoryService.createOktaAuth,
                                deps: [
                                    OktaAuthConfigService,
                                    [new i0.Optional(), router.Router],
                                    [new i0.Optional(), common.Location]
                                ]
                            },
                        ]
                    }]
            }] });

    /*
     * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.
     * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
     *
     * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
     * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     *
     * See the License for the specific language governing permissions and limitations under the License.
     */

    /**
     * Entry point for all public APIs of the package.
     */
    // This file only reexports content of the `src` folder. Keep it that way.

    /**
     * Generated bundle index. Do not edit.
     */

    exports.OKTA_AUTH = OKTA_AUTH;
    exports.OKTA_CONFIG = OKTA_CONFIG;
    exports.OktaAuthConfigService = OktaAuthConfigService;
    exports.OktaAuthGuard = OktaAuthGuard;
    exports.OktaAuthModule = OktaAuthModule;
    exports.OktaAuthStateService = OktaAuthStateService;
    exports.OktaCallbackComponent = OktaCallbackComponent;
    exports.OktaHasAnyGroupDirective = OktaHasAnyGroupDirective;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=okta-okta-angular.umd.js.map
