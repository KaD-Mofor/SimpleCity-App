import { Injector } from '@angular/core';
import { CanActivate, CanActivateChild, ActivatedRouteSnapshot, RouterStateSnapshot, CanLoad, Route } from '@angular/router';
import { OktaAuth } from '@okta/okta-auth-js';
import { OktaAuthConfigService } from './services/auth-config.serice';
import * as i0 from "@angular/core";
export declare class OktaAuthGuard implements CanActivate, CanActivateChild, CanLoad {
    private oktaAuth;
    private injector;
    private configService;
    private state;
    private routeData;
    private onAuthRequired?;
    constructor(oktaAuth: OktaAuth, injector: Injector, configService: OktaAuthConfigService);
    canLoad(route: Route): Promise<boolean>;
    /**
     * Gateway for protected route. Returns true if there is a valid idToken,
     * otherwise it will cache the route and start the login flow.
     * @param route
     * @param state
     */
    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean>;
    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean>;
    private isAuthenticated;
    private handleLogin;
    private updateAuthStateListener;
    static ɵfac: i0.ɵɵFactoryDeclaration<OktaAuthGuard, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<OktaAuthGuard>;
}
