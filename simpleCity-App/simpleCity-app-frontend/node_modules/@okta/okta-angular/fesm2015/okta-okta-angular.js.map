{"version":3,"file":"okta-okta-angular.js","sources":["../../lib/src/okta/models/okta.config.ts","../../lib/src/okta/components/callback.component.ts","../../lib/src/okta/okta.guard.ts","../../lib/src/okta/services/auth-state.service.ts","../../lib/src/okta/has-any-group.directive.ts","../../lib/src/okta/packageInfo.ts","../../lib/src/okta/okta.module.ts","../../lib/src/okta-angular.ts","../../lib/src/public-api.ts","../../lib/src/okta-okta-angular.ts"],"sourcesContent":["/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { InjectionToken, Injector } from '@angular/core';\nimport { OktaAuth } from '@okta/okta-auth-js';\n\nexport type AuthRequiredFunction = (oktaAuth: OktaAuth, injector: Injector) => void;\n\nexport interface TestingObject {\n  disableHttpsCheck: boolean;\n}\n\nexport interface OktaConfig {\n  oktaAuth: OktaAuth;\n  onAuthRequired?: AuthRequiredFunction;\n  onAuthResume?: AuthRequiredFunction;\n  testing?: TestingObject;\n}\n\nexport const OKTA_CONFIG = new InjectionToken<OktaConfig>('okta.config.angular');\nexport const OKTA_AUTH = new InjectionToken<OktaAuth>('okta.auth');\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Component, OnInit, Optional, Injector, Inject } from '@angular/core';\nimport { OktaAuth } from '@okta/okta-auth-js';\nimport { OKTA_CONFIG, OktaConfig, OKTA_AUTH } from '../models/okta.config';\n\n@Component({\n  template: `<div>{{error}}</div>`\n})\nexport class OktaCallbackComponent implements OnInit {\n  error?: string;\n\n  constructor(\n    @Inject(OKTA_CONFIG) private config: OktaConfig,\n    @Inject(OKTA_AUTH) private oktaAuth: OktaAuth,\n    @Optional() private injector?: Injector\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    try {\n      // Parse code or tokens from the URL, store tokens in the TokenManager, and redirect back to the originalUri\n      await this.oktaAuth.handleLoginRedirect();\n    } catch (e) {\n      // Callback from social IDP. Show custom login page to continue.\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore Supports auth-js v5 & v6-7\n      const isInteractionRequiredError = this.oktaAuth.isInteractionRequiredError || this.oktaAuth.idx.isInteractionRequiredError;\n      if (isInteractionRequiredError(e) && this.injector) {\n        const { onAuthResume, onAuthRequired } = this.config;\n        const callbackFn = onAuthResume || onAuthRequired;\n        if (callbackFn) {\n          callbackFn(this.oktaAuth, this.injector);\n          return;\n        }\n      }\n      this.error = (e as Error).toString();\n    }\n  }\n}\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Injectable, Injector, Inject } from '@angular/core';\nimport {\n  CanActivate,\n  CanActivateChild,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n  NavigationStart, \n  Event,\n  CanLoad,\n  Route\n} from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\nimport { OktaAuth, AuthState } from '@okta/okta-auth-js';\n\nimport { AuthRequiredFunction, OktaConfig, OKTA_CONFIG, OKTA_AUTH } from './models/okta.config';\n\n@Injectable()\nexport class OktaAuthGuard implements CanActivate, CanActivateChild, CanLoad {\n  private state: RouterStateSnapshot;\n  private onAuthRequired?: AuthRequiredFunction;\n\n\n  constructor(\n    @Inject(OKTA_CONFIG) private config: OktaConfig, \n    @Inject(OKTA_AUTH) private oktaAuth: OktaAuth, \n    private injector: Injector\n  ) { \n    this.onAuthRequired = this.config.onAuthRequired;\n\n    // Unsubscribe updateAuthStateListener when route change\n    const router = injector.get(Router);\n    router.events.pipe(\n      filter((e: Event) => e instanceof NavigationStart && this.state && this.state.url !== e.url)\n    ).subscribe(() => {\n      this.oktaAuth.authStateManager.unsubscribe(this.updateAuthStateListener);\n    });\n  }\n\n  async canLoad(route: Route): Promise<boolean> {\n    this.onAuthRequired = route.data && route.data.onAuthRequired || this.onAuthRequired;\n\n    const isAuthenticated = await this.oktaAuth.isAuthenticated();\n    if (isAuthenticated) {\n      return true;\n    }\n\n    const router = this.injector.get(Router);\n    const nav = router.getCurrentNavigation();\n    const originalUri = nav ? nav.extractedUrl.toString() : undefined;\n    await this.handleLogin(originalUri);\n\n    return false;\n  }\n\n  /**\n   * Gateway for protected route. Returns true if there is a valid accessToken,\n   * otherwise it will cache the route and start the login flow.\n   * @param route\n   * @param state\n   */\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n    // Track states for current route\n    this.state = state;\n    this.onAuthRequired = route.data && route.data.onAuthRequired || this.onAuthRequired;\n\n    // Protect the route after accessing\n    this.oktaAuth.authStateManager.subscribe(this.updateAuthStateListener);\n    const isAuthenticated = await this.oktaAuth.isAuthenticated();\n    if (isAuthenticated) {\n      return true;\n    }\n\n    await this.handleLogin(state.url);\n\n    return false;\n  }\n\n  async canActivateChild(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Promise<boolean> {\n    return this.canActivate(route, state);\n  }\n\n  private async handleLogin(originalUri?: string): Promise<void> {\n    // Store the current path\n    if (originalUri) {\n      this.oktaAuth.setOriginalUri(originalUri);\n    }\n\n    if (this.onAuthRequired) {\n      this.onAuthRequired(this.oktaAuth, this.injector);\n    } else {\n      this.oktaAuth.signInWithRedirect();\n    }\n  }\n\n  private updateAuthStateListener = (authState: AuthState) => {\n    if (!authState.isAuthenticated) {\n      this.handleLogin(this.state.url);\n    }\n  };\n\n}\n","import { Injectable, OnDestroy, Inject } from '@angular/core';\nimport { AuthState, OktaAuth, UserClaims } from '@okta/okta-auth-js';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { OKTA_AUTH } from '../models/okta.config';\n\nconst defaultAuthState = {\n  isAuthenticated: false\n};\n\nexport type Groups = string | string[] | { [key: string]: string[] };\n\n@Injectable()\nexport class OktaAuthStateService implements OnDestroy {\n  private _authState: BehaviorSubject<AuthState> = new BehaviorSubject<AuthState>(defaultAuthState);\n  \n  // only expose readonly property\n  public readonly authState$: Observable<AuthState> = this._authState.asObservable();\n\n  constructor(@Inject(OKTA_AUTH) private oktaAuth: OktaAuth) {\n    this.updateAuthState = this.updateAuthState.bind(this);\n\n    // set initial authState\n    const initialAuthState = this.oktaAuth.authStateManager.getAuthState() || defaultAuthState;\n    this._authState.next(initialAuthState);\n\n    // subscribe to future changes\n    this.oktaAuth.authStateManager.subscribe(this.updateAuthState);\n  }\n\n  ngOnDestroy(): void {\n    this.oktaAuth.authStateManager.unsubscribe(this.updateAuthState);\n  }\n\n  // Observes as true when any group input can match groups from user claims \n  hasAnyGroups(groups: Groups): Observable<boolean> {\n    return this.authState$.pipe(\n      mergeMap(async ({ isAuthenticated, idToken }) => {\n        // return false when not authenticated or openid is not in scopes\n        if (!isAuthenticated || !idToken) {\n          return false;\n        }\n\n        // transform inputs to consistent object format\n        if (typeof groups === 'string') {\n          groups = { groups: [groups] };\n        }\n        if (Array.isArray(groups)) {\n          groups = { groups };\n        }\n\n        const key = Object.keys(groups)[0] as keyof UserClaims;\n        const value = groups[key];\n\n        // groups or custom claims is available in idToken\n        if (idToken.claims[key]) {\n          return value.some((authority: string) => (idToken.claims[key] as unknown as string[]).includes(authority));\n        }\n\n        // try /userinfo endpoint when thin idToken (no groups claim) is returned\n        // https://developer.okta.com/docs/concepts/api-access-management/#tokens-and-scopes\n        const userInfo = await this.oktaAuth.getUser();\n        if (!userInfo[key]) {\n          return false;\n        }\n        return value.some((authority: string) => (userInfo[key] as unknown as string[]).includes(authority));\n      })\n    );\n  }\n\n  private updateAuthState(authState: AuthState): void {\n    this._authState.next(authState);\n  }\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef, OnInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { ReplaySubject, Subject } from 'rxjs';\nimport { filter, switchMap, takeUntil } from 'rxjs/operators';\nimport { OktaAuthStateService, Groups } from './services/auth-state.service';\n\n@Directive({ selector: '[oktaHasAnyGroup]'})\nexport class OktaHasAnyGroupDirective implements OnInit, OnChanges, OnDestroy {\n  private groupsSub$: Subject<Groups> = new ReplaySubject<Groups>();\n  private destroySub$ = new Subject<void>();\n\n  constructor(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private authStateService: OktaAuthStateService\n  ) { }\n\n  @Input() oktaHasAnyGroup!: Groups;\n\n  ngOnInit(): void {\n    this.groupsSub$.pipe(\n      filter(groups => !!groups),\n      switchMap(groups => this.authStateService.hasAnyGroups(groups)),\n      takeUntil(this.destroySub$)\n    ).subscribe(isAuthorized => {\n      this.viewContainer.clear();\n      if (isAuthorized) {\n        this.viewContainer.createEmbeddedView(this.templateRef);\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['oktaHasAnyGroup'].currentValue !== changes['oktaHasAnyGroup'].previousValue) {\n      this.groupsSub$.next(changes['oktaHasAnyGroup'].currentValue as Groups);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroySub$.next();\n    this.destroySub$.complete();\n  }\n}\n","export default {\n  'name': '@okta/okta-angular-root',\n  'version': '0.0.0',\n  'authJSMinSupportedVersion': '5.3.1'\n};\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { NgModule, ModuleWithProviders, Inject, Optional, VERSION } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { OktaCallbackComponent } from './components/callback.component';\nimport { OktaAuthGuard } from './okta.guard';\nimport { OktaAuthStateService } from './services/auth-state.service';\nimport { OktaHasAnyGroupDirective } from './has-any-group.directive';\nimport { OktaConfig, OKTA_CONFIG, OKTA_AUTH } from './models/okta.config';\nimport { AuthSdkError, OktaAuth, toRelativeUrl } from '@okta/okta-auth-js';\nimport { compare } from 'compare-versions';\nimport packageInfo from './packageInfo';\n\nexport function oktaAuthFactory(config: OktaConfig): OktaAuth {\n  return config.oktaAuth;\n}\n\n@NgModule({\n  declarations: [\n    OktaCallbackComponent,\n    OktaHasAnyGroupDirective,\n  ],\n  exports: [\n    OktaCallbackComponent,\n    OktaHasAnyGroupDirective,\n  ],\n  providers: [\n    OktaAuthGuard,\n    OktaAuthStateService,\n    {\n      provide: OKTA_AUTH,\n      useFactory: oktaAuthFactory,\n      deps: [ OKTA_CONFIG ]\n    },\n  ]\n})\nexport class OktaAuthModule {\n  static forRoot(config?: OktaConfig): ModuleWithProviders<OktaAuthModule> {\n    return {\n      ngModule: OktaAuthModule,\n      providers: [\n        OktaAuthGuard,\n        OktaAuthStateService,\n        { provide: OKTA_CONFIG, useValue: config },\n        {\n          provide: OKTA_AUTH,\n          useFactory: oktaAuthFactory,\n          deps: [ OKTA_CONFIG ]\n        },\n      ]\n    };\n  }\n\n  constructor(\n    @Inject(OKTA_CONFIG) config: OktaConfig, \n    @Optional() location?: Location, \n    @Optional() router?: Router\n  ) {\n    const { oktaAuth } = config;\n\n    const isAuthJsSupported = oktaAuth._oktaUserAgent && compare(oktaAuth._oktaUserAgent.getVersion(), packageInfo.authJSMinSupportedVersion, '>=');\n    if (!isAuthJsSupported) {\n      throw new AuthSdkError(`Passed in oktaAuth is not compatible with the SDK, minimum supported okta-auth-js version is ${packageInfo.authJSMinSupportedVersion}.`);\n    }\n\n    // Add Okta UA\n    oktaAuth._oktaUserAgent.addEnvironment(`${packageInfo.name}/${packageInfo.version}`);\n    oktaAuth._oktaUserAgent.addEnvironment(`Angular/${VERSION.full}`);\n\n    // Provide a default implementation of `restoreOriginalUri`\n    if (!oktaAuth.options.restoreOriginalUri && router && location) {\n      oktaAuth.options.restoreOriginalUri = async (_, originalUri: string | undefined) => {\n        const baseUrl = window.location.origin + location.prepareExternalUrl('');\n        const routePath = toRelativeUrl(originalUri || '/', baseUrl);\n        router.navigateByUrl(routePath);\n      };\n    }\n\n    // Start services\n    oktaAuth.start();\n  }\n\n}\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport { OktaAuthModule } from './okta/okta.module';\nexport { OktaAuthGuard } from './okta/okta.guard';\nexport { OktaConfig, OKTA_CONFIG, OKTA_AUTH } from './okta/models/okta.config';\nexport { OktaAuthStateService } from './okta/services/auth-state.service';\nexport { OktaHasAnyGroupDirective } from './okta/has-any-group.directive';\n\n// Okta View Components\nexport { OktaCallbackComponent } from './okta/components/callback.component';\n","/**\n * Entry point for all public APIs of the package.\n */\nexport * from './okta-angular';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["__awaiter","i1.OktaAuthStateService","i1"],"mappings":"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"}