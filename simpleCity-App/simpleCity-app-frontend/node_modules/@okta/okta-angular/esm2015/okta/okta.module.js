/*
 * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */
import { NgModule, Optional } from '@angular/core';
import { Router } from '@angular/router';
import { Location } from '@angular/common';
import { OktaCallbackComponent } from './components/callback.component';
import { OktaAuthGuard } from './okta.guard';
import { OktaAuthConfigService } from './services/auth-config.serice';
import { OktaAuthStateService } from './services/auth-state.service';
import { OktaAuthFactoryService } from './services/auth-factory.service';
import { OktaHasAnyGroupDirective } from './has-any-group.directive';
import { OKTA_CONFIG, OKTA_AUTH } from './models/okta.config';
import * as i0 from "@angular/core";
export class OktaAuthModule {
    static forRoot(config) {
        return {
            ngModule: OktaAuthModule,
            providers: [
                { provide: OKTA_CONFIG, useValue: config },
            ]
        };
    }
}
OktaAuthModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: OktaAuthModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
OktaAuthModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: OktaAuthModule, declarations: [OktaCallbackComponent,
        OktaHasAnyGroupDirective], exports: [OktaCallbackComponent,
        OktaHasAnyGroupDirective] });
OktaAuthModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: OktaAuthModule, providers: [
        OktaAuthConfigService,
        OktaAuthStateService,
        OktaAuthGuard,
        {
            provide: OKTA_AUTH,
            useFactory: OktaAuthFactoryService.createOktaAuth,
            deps: [
                OktaAuthConfigService,
                [new Optional(), Router],
                [new Optional(), Location]
            ]
        },
    ] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: OktaAuthModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        OktaCallbackComponent,
                        OktaHasAnyGroupDirective,
                    ],
                    exports: [
                        OktaCallbackComponent,
                        OktaHasAnyGroupDirective,
                    ],
                    providers: [
                        OktaAuthConfigService,
                        OktaAuthStateService,
                        OktaAuthGuard,
                        {
                            provide: OKTA_AUTH,
                            useFactory: OktaAuthFactoryService.createOktaAuth,
                            deps: [
                                OktaAuthConfigService,
                                [new Optional(), Router],
                                [new Optional(), Location]
                            ]
                        },
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2t0YS5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9saWIvc3JjL29rdGEvb2t0YS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7R0FVRztBQUVILE9BQU8sRUFBRSxRQUFRLEVBQXVCLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN4RSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDekMsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDN0MsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDdEUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDckUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDekUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDckUsT0FBTyxFQUFjLFdBQVcsRUFBRSxTQUFTLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7QUEyQjFFLE1BQU0sT0FBTyxjQUFjO0lBQ3pCLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBbUI7UUFDaEMsT0FBTztZQUNMLFFBQVEsRUFBRSxjQUFjO1lBQ3hCLFNBQVMsRUFBRTtnQkFDVCxFQUFFLE9BQU8sRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRTthQUMzQztTQUNGLENBQUM7SUFDSixDQUFDOzs0R0FSVSxjQUFjOzZHQUFkLGNBQWMsaUJBdEJ2QixxQkFBcUI7UUFDckIsd0JBQXdCLGFBR3hCLHFCQUFxQjtRQUNyQix3QkFBd0I7NkdBaUJmLGNBQWMsYUFmZDtRQUNULHFCQUFxQjtRQUNyQixvQkFBb0I7UUFDcEIsYUFBYTtRQUNiO1lBQ0UsT0FBTyxFQUFFLFNBQVM7WUFDbEIsVUFBVSxFQUFFLHNCQUFzQixDQUFDLGNBQWM7WUFDakQsSUFBSSxFQUFFO2dCQUNKLHFCQUFxQjtnQkFDckIsQ0FBQyxJQUFJLFFBQVEsRUFBRSxFQUFFLE1BQU0sQ0FBQztnQkFDeEIsQ0FBQyxJQUFJLFFBQVEsRUFBRSxFQUFFLFFBQVEsQ0FBQzthQUMzQjtTQUNGO0tBQ0Y7NEZBRVUsY0FBYztrQkF4QjFCLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFO3dCQUNaLHFCQUFxQjt3QkFDckIsd0JBQXdCO3FCQUN6QjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AscUJBQXFCO3dCQUNyQix3QkFBd0I7cUJBQ3pCO29CQUNELFNBQVMsRUFBRTt3QkFDVCxxQkFBcUI7d0JBQ3JCLG9CQUFvQjt3QkFDcEIsYUFBYTt3QkFDYjs0QkFDRSxPQUFPLEVBQUUsU0FBUzs0QkFDbEIsVUFBVSxFQUFFLHNCQUFzQixDQUFDLGNBQWM7NEJBQ2pELElBQUksRUFBRTtnQ0FDSixxQkFBcUI7Z0NBQ3JCLENBQUMsSUFBSSxRQUFRLEVBQUUsRUFBRSxNQUFNLENBQUM7Z0NBQ3hCLENBQUMsSUFBSSxRQUFRLEVBQUUsRUFBRSxRQUFRLENBQUM7NkJBQzNCO3lCQUNGO3FCQUNGO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxNy1QcmVzZW50LCBPa3RhLCBJbmMuIGFuZC9vciBpdHMgYWZmaWxpYXRlcy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIFRoZSBPa3RhIHNvZnR3YXJlIGFjY29tcGFuaWVkIGJ5IHRoaXMgbm90aWNlIGlzIHByb3ZpZGVkIHB1cnN1YW50IHRvIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2UuXCIpXG4gKlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0IGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5cbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVFxuICogV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICpcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgTG9jYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgT2t0YUNhbGxiYWNrQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2NhbGxiYWNrLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBPa3RhQXV0aEd1YXJkIH0gZnJvbSAnLi9va3RhLmd1YXJkJztcbmltcG9ydCB7IE9rdGFBdXRoQ29uZmlnU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvYXV0aC1jb25maWcuc2VyaWNlJztcbmltcG9ydCB7IE9rdGFBdXRoU3RhdGVTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9hdXRoLXN0YXRlLnNlcnZpY2UnO1xuaW1wb3J0IHsgT2t0YUF1dGhGYWN0b3J5U2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvYXV0aC1mYWN0b3J5LnNlcnZpY2UnO1xuaW1wb3J0IHsgT2t0YUhhc0FueUdyb3VwRGlyZWN0aXZlIH0gZnJvbSAnLi9oYXMtYW55LWdyb3VwLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBPa3RhQ29uZmlnLCBPS1RBX0NPTkZJRywgT0tUQV9BVVRIIH0gZnJvbSAnLi9tb2RlbHMvb2t0YS5jb25maWcnO1xuXG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIE9rdGFDYWxsYmFja0NvbXBvbmVudCxcbiAgICBPa3RhSGFzQW55R3JvdXBEaXJlY3RpdmUsXG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBPa3RhQ2FsbGJhY2tDb21wb25lbnQsXG4gICAgT2t0YUhhc0FueUdyb3VwRGlyZWN0aXZlLFxuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICBPa3RhQXV0aENvbmZpZ1NlcnZpY2UsXG4gICAgT2t0YUF1dGhTdGF0ZVNlcnZpY2UsXG4gICAgT2t0YUF1dGhHdWFyZCxcbiAgICB7XG4gICAgICBwcm92aWRlOiBPS1RBX0FVVEgsXG4gICAgICB1c2VGYWN0b3J5OiBPa3RhQXV0aEZhY3RvcnlTZXJ2aWNlLmNyZWF0ZU9rdGFBdXRoLFxuICAgICAgZGVwczogW1xuICAgICAgICBPa3RhQXV0aENvbmZpZ1NlcnZpY2UsXG4gICAgICAgIFtuZXcgT3B0aW9uYWwoKSwgUm91dGVyXSxcbiAgICAgICAgW25ldyBPcHRpb25hbCgpLCBMb2NhdGlvbl1cbiAgICAgIF1cbiAgICB9LFxuICBdXG59KVxuZXhwb3J0IGNsYXNzIE9rdGFBdXRoTW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3QoY29uZmlnPzogT2t0YUNvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnM8T2t0YUF1dGhNb2R1bGU+IHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IE9rdGFBdXRoTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHsgcHJvdmlkZTogT0tUQV9DT05GSUcsIHVzZVZhbHVlOiBjb25maWcgfSxcbiAgICAgIF1cbiAgICB9O1xuICB9XG5cbiAgLy8gU2hvdWxkIG5vdCBoYXZlIGNvbnN0cnVjdG9yIHRvIHN1cHBvcnQgbGF6eSBsb2FkIG9mIGNvbmZpZyB3aXRoIEFQUF9JTklUSUFMSVpFUlxuXG59XG4iXX0=